

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Sep 19 16:19:10 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1,inline
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1,inline
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1,inline
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    56                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    59                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    60                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    61                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    62   000000                     
    63                           ; Generated 17/10/2023 GMT
    64                           ; 
    65                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    66                           ; All rights reserved.
    67                           ; 
    68                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    69                           ; 
    70                           ; Redistribution and use in source and binary forms, with or without modification, are
    71                           ; permitted provided that the following conditions are met:
    72                           ; 
    73                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    74                           ;        conditions and the following disclaimer.
    75                           ; 
    76                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    77                           ;        of conditions and the following disclaimer in the documentation and/or other
    78                           ;        materials provided with the distribution. Publication is not required when
    79                           ;        this file is used in an embedded application.
    80                           ; 
    81                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    82                           ;        software without specific prior written permission.
    83                           ; 
    84                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    85                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    86                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    87                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    88                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    89                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    90                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    91                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    92                           ; 
    93                           ; 
    94                           ; Code-generator required, PIC18F4620 Definitions
    95                           ; 
    96                           ; SFR Addresses
    97   000000                     
    98                           	psect	idataCOMRAM
    99   003176                     __pidataCOMRAM:
   100                           	callstack 0
   101                           
   102                           ;initializer for _tris_registers
   103   003176  92                 	db	146
   104   003177  0F                 	db	15
   105   003178  93                 	db	147
   106   003179  0F                 	db	15
   107   00317A  94                 	db	148
   108   00317B  0F                 	db	15
   109   00317C  95                 	db	149
   110   00317D  0F                 	db	15
   111   00317E  96                 	db	150
   112   00317F  0F                 	db	15
   113                           
   114                           ;initializer for _lcd
   115   003180  03                 	db	3
   116   003181  0B                 	db	11
   117   003182  02                 	db	2
   118   003183  0A                 	db	10
   119   003184  12                 	db	18
   120   003185  1A                 	db	26
   121   003186  22                 	db	34
   122   003187  2A                 	db	42
   123   003188  32                 	db	50
   124   003189  3A                 	db	58
   125                           
   126                           	psect	idataBANK0
   127   003142                     __pidataBANK0:
   128                           	callstack 0
   129                           
   130                           ;initializer for _lat_registers
   131   003142  89                 	db	137
   132   003143  0F                 	db	15
   133   003144  8A                 	db	138
   134   003145  0F                 	db	15
   135   003146  8B                 	db	139
   136   003147  0F                 	db	15
   137   003148  8C                 	db	140
   138   003149  0F                 	db	15
   139   00314A  8D                 	db	141
   140   00314B  0F                 	db	15
   141                           
   142                           ;initializer for _port_registers
   143   00314C  80                 	db	128
   144   00314D  0F                 	db	15
   145   00314E  81                 	db	129
   146   00314F  0F                 	db	15
   147   003150  82                 	db	130
   148   003151  0F                 	db	15
   149   003152  83                 	db	131
   150   003153  0F                 	db	15
   151   003154  84                 	db	132
   152   003155  0F                 	db	15
   153                           
   154                           ;initializer for _adc_1
   155   003156  00                 	db	0
   156   003157  00                 	db	0
   157   003158  00                 	db	0
   158   003159  00                 	db	0
   159   00315A  06                 	db	6
   160   00315B  05                 	db	5
   161   00315C  02                 	db	2
   162   000000                     _ADCON1bits	set	4033
   163   000000                     _ADRESL	set	4035
   164   000000                     _ADRESH	set	4036
   165   000000                     _INTCONbits	set	4082
   166   000000                     _TRISD	set	3989
   167   000000                     _TRISC	set	3988
   168   000000                     _TRISB	set	3987
   169   000000                     _TRISE	set	3990
   170   000000                     _PIE1bits	set	3997
   171   000000                     _ADCON2bits	set	4032
   172   000000                     _ADCON0bits	set	4034
   173   000000                     _LATA	set	3977
   174   000000                     _PORTE	set	3972
   175   000000                     _PORTD	set	3971
   176   000000                     _PORTC	set	3970
   177   000000                     _PORTB	set	3969
   178   000000                     _PORTA	set	3968
   179   000000                     _TRISA	set	3986
   180   000000                     _PIR1bits	set	3998
   181   000000                     _LATE	set	3981
   182   000000                     _LATD	set	3980
   183   000000                     _LATC	set	3979
   184   000000                     _LATB	set	3978
   185                           
   186                           	psect	smallconst
   187   001000                     __psmallconst:
   188                           	callstack 0
   189   001000  00                 	db	0
   190   001001                     STR_3:
   191   001001  41                 	db	65	;'A'
   192   001002  44                 	db	68	;'D'
   193   001003  43                 	db	67	;'C'
   194   001004  20                 	db	32
   195   001005  54                 	db	84	;'T'
   196   001006  65                 	db	101	;'e'
   197   001007  73                 	db	115	;'s'
   198   001008  74                 	db	116	;'t'
   199   001009  00                 	db	0
   200   00100A                     STR_4:
   201   00100A  50                 	db	80	;'P'
   202   00100B  6F                 	db	111	;'o'
   203   00100C  74                 	db	116	;'t'
   204   00100D  31                 	db	49	;'1'
   205   00100E  3A                 	db	58	;':'
   206   00100F  20                 	db	32
   207   001010  00                 	db	0
   208   001011                     STR_5:
   209   001011  50                 	db	80	;'P'
   210   001012  6F                 	db	111	;'o'
   211   001013  74                 	db	116	;'t'
   212   001014  32                 	db	50	;'2'
   213   001015  3A                 	db	58	;':'
   214   001016  20                 	db	32
   215   001017  00                 	db	0
   216   001018                     STR_6:
   217   001018  50                 	db	80	;'P'
   218   001019  6F                 	db	111	;'o'
   219   00101A  74                 	db	116	;'t'
   220   00101B  33                 	db	51	;'3'
   221   00101C  3A                 	db	58	;':'
   222   00101D  20                 	db	32
   223   00101E  00                 	db	0
   224   00101F                     STR_7:
   225   00101F  50                 	db	80	;'P'
   226   001020  6F                 	db	111	;'o'
   227   001021  74                 	db	116	;'t'
   228   001022  34                 	db	52	;'4'
   229   001023  3A                 	db	58	;':'
   230   001024  20                 	db	32
   231   001025  00                 	db	0
   232   001026                     STR_1:
   233   001026  25                 	db	37
   234   001027  75                 	db	117	;'u'
   235   001028  00                 	db	0
   236   001029  00                 	db	0	; dummy byte at the end
   237   000000                     
   238                           ; #config settings
   239                           
   240                           	psect	cinit
   241   002D6E                     __pcinit:
   242                           	callstack 0
   243   002D6E                     start_initialization:
   244                           	callstack 0
   245   002D6E                     __initialization:
   246                           	callstack 0
   247                           
   248                           ; Initialize objects allocated to BANK0 (27 bytes)
   249                           ; load TBLPTR registers with __pidataBANK0
   250   002D6E  0E42               	movlw	low __pidataBANK0
   251   002D70  6EF6               	movwf	tblptrl,c
   252   002D72  0E31               	movlw	high __pidataBANK0
   253   002D74  6EF7               	movwf	tblptrh,c
   254   002D76  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   255   002D78  6EF8               	movwf	tblptru,c
   256   002D7A  EE00  F0B8         	lfsr	0,__pdataBANK0
   257   002D7E  EE10 F01B          	lfsr	1,27
   258   002D82                     copy_data0:
   259   002D82  0009               	tblrd		*+
   260   002D84  CFF5 FFEE          	movff	tablat,postinc0
   261   002D88  50E5               	movf	postdec1,w,c
   262   002D8A  50E1               	movf	fsr1l,w,c
   263   002D8C  E1FA               	bnz	copy_data0
   264                           
   265                           ; Initialize objects allocated to COMRAM (20 bytes)
   266                           ; load TBLPTR registers with __pidataCOMRAM
   267   002D8E  0E76               	movlw	low __pidataCOMRAM
   268   002D90  6EF6               	movwf	tblptrl,c
   269   002D92  0E31               	movlw	high __pidataCOMRAM
   270   002D94  6EF7               	movwf	tblptrh,c
   271   002D96  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   272   002D98  6EF8               	movwf	tblptru,c
   273   002D9A  EE00  F058         	lfsr	0,__pdataCOMRAM
   274   002D9E  EE10 F014          	lfsr	1,20
   275   002DA2                     copy_data1:
   276   002DA2  0009               	tblrd		*+
   277   002DA4  CFF5 FFEE          	movff	tablat,postinc0
   278   002DA8  50E5               	movf	postdec1,w,c
   279   002DAA  50E1               	movf	fsr1l,w,c
   280   002DAC  E1FA               	bnz	copy_data1
   281                           
   282                           ; Clear objects allocated to BANK0 (56 bytes)
   283   002DAE  EE00  F080         	lfsr	0,__pbssBANK0
   284   002DB2  0E38               	movlw	56
   285   002DB4                     clear_0:
   286   002DB4  6AEE               	clrf	postinc0,c
   287   002DB6  06E8               	decf	wreg,f,c
   288   002DB8  E1FD               	bnz	clear_0
   289                           
   290                           ; Clear objects allocated to COMRAM (18 bytes)
   291   002DBA  EE00  F06C         	lfsr	0,__pbssCOMRAM
   292   002DBE  0E12               	movlw	18
   293   002DC0                     clear_1:
   294   002DC0  6AEE               	clrf	postinc0,c
   295   002DC2  06E8               	decf	wreg,f,c
   296   002DC4  E1FD               	bnz	clear_1
   297   002DC6                     end_of_initialization:
   298                           	callstack 0
   299   002DC6                     __end_of__initialization:
   300                           	callstack 0
   301   002DC6  907E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   302   002DC8  927E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   303   002DCA  0100               	movlb	0
   304   002DCC  EF06  F00D         	goto	_main	;jump to C main() function
   305                           
   306                           	psect	bssCOMRAM
   307   00006C                     __pbssCOMRAM:
   308                           	callstack 0
   309   00006C                     _nout:
   310                           	callstack 0
   311   00006C                     	ds	2
   312   00006E                     _width:
   313                           	callstack 0
   314   00006E                     	ds	2
   315   000070                     _prec:
   316                           	callstack 0
   317   000070                     	ds	2
   318   000072                     _InterruptHandler:
   319                           	callstack 0
   320   000072                     	ds	2
   321   000074                     _flags:
   322                           	callstack 0
   323   000074                     	ds	1
   324   000075                     _ADC_REQ:
   325                           	callstack 0
   326   000075                     	ds	1
   327   000076                     _adc_res4:
   328                           	callstack 0
   329   000076                     	ds	2
   330   000078                     _adc_res3:
   331                           	callstack 0
   332   000078                     	ds	2
   333   00007A                     _adc_res2:
   334                           	callstack 0
   335   00007A                     	ds	2
   336   00007C                     _adc_res1:
   337                           	callstack 0
   338   00007C                     	ds	2
   339                           
   340                           	psect	dataCOMRAM
   341   000058                     __pdataCOMRAM:
   342                           	callstack 0
   343   000058                     _tris_registers:
   344                           	callstack 0
   345   000058                     	ds	10
   346   000062                     _lcd:
   347                           	callstack 0
   348   000062                     	ds	10
   349                           
   350                           	psect	bssBANK0
   351   000080                     __pbssBANK0:
   352                           	callstack 0
   353   000080                     _dbuf:
   354                           	callstack 0
   355   000080                     	ds	32
   356   0000A0                     _adc_res4_text:
   357                           	callstack 0
   358   0000A0                     	ds	6
   359   0000A6                     _adc_res3_text:
   360                           	callstack 0
   361   0000A6                     	ds	6
   362   0000AC                     _adc_res2_text:
   363                           	callstack 0
   364   0000AC                     	ds	6
   365   0000B2                     _adc_res1_text:
   366                           	callstack 0
   367   0000B2                     	ds	6
   368                           
   369                           	psect	dataBANK0
   370   0000B8                     __pdataBANK0:
   371                           	callstack 0
   372   0000B8                     _lat_registers:
   373                           	callstack 0
   374   0000B8                     	ds	10
   375   0000C2                     _port_registers:
   376                           	callstack 0
   377   0000C2                     	ds	10
   378   0000CC                     _adc_1:
   379                           	callstack 0
   380   0000CC                     	ds	7
   381                           
   382                           	psect	cstackCOMRAM
   383   000001                     __pcstackCOMRAM:
   384                           	callstack 0
   385   000001                     ??_adc_input_channel_port_configure:
   386   000001                     ?_strlen:
   387                           	callstack 0
   388   000001                     ?___wmul:
   389                           	callstack 0
   390   000001                     ?___awdiv:
   391                           	callstack 0
   392   000001                     ?___awmod:
   393                           	callstack 0
   394   000001                     ?___lwdiv:
   395                           	callstack 0
   396   000001                     ?___lwmod:
   397                           	callstack 0
   398   000001                     ADC_StartConversion@_adc:
   399                           	callstack 0
   400   000001                     ADC_GetConversionResult@_adc:
   401                           	callstack 0
   402   000001                     adc_voltage_reference@_adc:
   403                           	callstack 0
   404   000001                     adc_result_format@_adc:
   405                           	callstack 0
   406   000001                     gpio_pin_direction_initialize@_pin_config:
   407                           	callstack 0
   408   000001                     gpio_pin_write_logic@_pin_config:
   409                           	callstack 0
   410   000001                     memset@dest:
   411                           	callstack 0
   412   000001                     strlen@s:
   413                           	callstack 0
   414   000001                     ___wmul@multiplier:
   415                           	callstack 0
   416   000001                     ___awdiv@dividend:
   417                           	callstack 0
   418   000001                     ___awmod@dividend:
   419                           	callstack 0
   420   000001                     ___lwdiv@dividend:
   421                           	callstack 0
   422   000001                     ___lwmod@dividend:
   423                           	callstack 0
   424   000001                     fputc@c:
   425                           	callstack 0
   426                           
   427                           ; 2 bytes @ 0x0
   428   000001                     	ds	1
   429   000002                     ??_gpio_pin_direction_initialize:
   430   000002                     ADC_GetConversionResult@conversion_result:
   431                           	callstack 0
   432   000002                     gpio_pin_write_logic@logic:
   433                           	callstack 0
   434   000002                     memset@c:
   435                           	callstack 0
   436                           
   437                           ; 2 bytes @ 0x1
   438   000002                     	ds	1
   439   000003                     ??_gpio_pin_write_logic:
   440   000003                     ??_ADC_GetConversionResult:
   441   000003                     adc_input_channel_port_configure@channel:
   442                           	callstack 0
   443   000003                     fputc@fp:
   444                           	callstack 0
   445   000003                     strlen@a:
   446                           	callstack 0
   447   000003                     ___wmul@multiplicand:
   448                           	callstack 0
   449   000003                     ___awdiv@divisor:
   450                           	callstack 0
   451   000003                     ___awmod@divisor:
   452                           	callstack 0
   453   000003                     ___lwdiv@divisor:
   454                           	callstack 0
   455   000003                     ___lwmod@divisor:
   456                           	callstack 0
   457                           
   458                           ; 2 bytes @ 0x2
   459   000003                     	ds	1
   460   000004                     ??_fputc:
   461   000004                     ADC_Init@_adc:
   462                           	callstack 0
   463   000004                     memset@n:
   464                           	callstack 0
   465                           
   466                           ; 2 bytes @ 0x3
   467   000004                     	ds	1
   468   000005                     ??_ADC_Init:
   469   000005                     ADC_GetConversion_Blocking@_adc:
   470                           	callstack 0
   471   000005                     ___awdiv@counter:
   472                           	callstack 0
   473   000005                     ___awmod@counter:
   474                           	callstack 0
   475   000005                     ___lwmod@counter:
   476                           	callstack 0
   477   000005                     ___wmul@product:
   478                           	callstack 0
   479   000005                     ___lwdiv@quotient:
   480                           	callstack 0
   481                           
   482                           ; 2 bytes @ 0x4
   483   000005                     	ds	1
   484   000006                     ADC_GetConversion_Blocking@_channel:
   485                           	callstack 0
   486   000006                     ___awdiv@sign:
   487                           	callstack 0
   488   000006                     ___awmod@sign:
   489                           	callstack 0
   490   000006                     memset@p:
   491                           	callstack 0
   492                           
   493                           ; 1 bytes @ 0x5
   494   000006                     	ds	1
   495   000007                     ?_abs:
   496                           	callstack 0
   497   000007                     ?_read_prec_or_width:
   498                           	callstack 0
   499   000007                     ADC_GetConversion_Blocking@conversion_result:
   500                           	callstack 0
   501   000007                     ___lwdiv@counter:
   502                           	callstack 0
   503   000007                     read_prec_or_width@fmt:
   504                           	callstack 0
   505   000007                     ___awdiv@quotient:
   506                           	callstack 0
   507   000007                     abs@a:
   508                           	callstack 0
   509                           
   510                           ; 2 bytes @ 0x6
   511   000007                     	ds	1
   512   000008                     ??_ADC_GetConversion_Blocking:
   513   000008                     lcd_8bit_enable_signal@_lcd:
   514                           	callstack 0
   515   000008                     gpio_pin_initialize@_pin_config:
   516                           	callstack 0
   517   000008                     read_prec_or_width@ap:
   518                           	callstack 0
   519                           
   520                           ; 1 bytes @ 0x7
   521   000008                     	ds	1
   522   000009                     ??_gpio_pin_initialize:
   523   000009                     ??_abs:
   524   000009                     ??_read_prec_or_width:
   525   000009                     ?_ctoa:
   526                           	callstack 0
   527   000009                     lcd_8bit_enable_signal@ret:
   528                           	callstack 0
   529   000009                     ctoa@fp:
   530                           	callstack 0
   531   000009                     fputs@s:
   532                           	callstack 0
   533                           
   534                           ; 1 bytes @ 0x8
   535   000009                     	ds	1
   536   00000A                     lcd_8bit_send_command@_lcd:
   537                           	callstack 0
   538   00000A                     lcd_8bit_send_char@_lcd:
   539                           	callstack 0
   540   00000A                     gpio_pin_initialize@ret:
   541                           	callstack 0
   542   00000A                     ctoa@c:
   543                           	callstack 0
   544   00000A                     fputs@fp:
   545                           	callstack 0
   546                           
   547                           ; 1 bytes @ 0x9
   548   00000A                     	ds	1
   549   00000B                     ??_ctoa:
   550   00000B                     lcd_8bit_send_command@command:
   551                           	callstack 0
   552   00000B                     lcd_8bit_send_char@data:
   553                           	callstack 0
   554   00000B                     fputs@c:
   555                           	callstack 0
   556                           
   557                           ; 1 bytes @ 0xA
   558   00000B                     	ds	1
   559   00000C                     ??_lcd_8bit_send_command:
   560   00000C                     ??_lcd_8bit_send_char:
   561   00000C                     read_prec_or_width@c:
   562                           	callstack 0
   563   00000C                     ctoa@l:
   564                           	callstack 0
   565   00000C                     fputs@i:
   566                           	callstack 0
   567                           
   568                           ; 2 bytes @ 0xB
   569   00000C                     	ds	1
   570   00000D                     read_prec_or_width@n:
   571                           	callstack 0
   572                           
   573                           ; 2 bytes @ 0xC
   574   00000D                     	ds	1
   575   00000E                     ?_pad:
   576                           	callstack 0
   577   00000E                     lcd_8bit_send_command@ret:
   578                           	callstack 0
   579   00000E                     lcd_8bit_send_char@ret:
   580                           	callstack 0
   581   00000E                     pad@fp:
   582                           	callstack 0
   583   00000E                     ctoa@w:
   584                           	callstack 0
   585                           
   586                           ; 2 bytes @ 0xD
   587   00000E                     	ds	1
   588   00000F                     lcd_8bit_send_command@count:
   589                           	callstack 0
   590   00000F                     lcd_8bit_send_char@count:
   591                           	callstack 0
   592   00000F                     pad@buf:
   593                           	callstack 0
   594                           
   595                           ; 1 bytes @ 0xE
   596   00000F                     	ds	1
   597   000010                     lcd_8bit_initialize@_lcd:
   598                           	callstack 0
   599   000010                     lcd_8bit_send_string@_lcd:
   600                           	callstack 0
   601   000010                     lcd_8bit_set_cursor@_lcd:
   602                           	callstack 0
   603   000010                     pad@p:
   604                           	callstack 0
   605                           
   606                           ; 2 bytes @ 0xF
   607   000010                     	ds	1
   608   000011                     ??_lcd_8bit_initialize:
   609   000011                     lcd_8bit_set_cursor@row:
   610                           	callstack 0
   611   000011                     lcd_8bit_send_string@str:
   612                           	callstack 0
   613                           
   614                           ; 2 bytes @ 0x10
   615   000011                     	ds	1
   616   000012                     ??_pad:
   617   000012                     lcd_8bit_set_cursor@column:
   618                           	callstack 0
   619                           
   620                           ; 1 bytes @ 0x11
   621   000012                     	ds	1
   622   000013                     lcd_8bit_initialize@count:
   623                           	callstack 0
   624   000013                     lcd_8bit_send_string@ret:
   625                           	callstack 0
   626   000013                     lcd_8bit_set_cursor@ret:
   627                           	callstack 0
   628   000013                     pad@i:
   629                           	callstack 0
   630                           
   631                           ; 2 bytes @ 0x12
   632   000013                     	ds	1
   633   000014                     lcd_8bit_initialize@ret:
   634                           	callstack 0
   635   000014                     lcd_8bit_send_string_pos@_lcd:
   636                           	callstack 0
   637                           
   638                           ; 1 bytes @ 0x13
   639   000014                     	ds	1
   640   000015                     ?_dtoa:
   641                           	callstack 0
   642   000015                     ?_otoa:
   643                           	callstack 0
   644   000015                     ?_utoa:
   645                           	callstack 0
   646   000015                     ?_xtoa:
   647                           	callstack 0
   648   000015                     dtoa@fp:
   649                           	callstack 0
   650   000015                     otoa@fp:
   651                           	callstack 0
   652   000015                     utoa@fp:
   653                           	callstack 0
   654   000015                     xtoa@fp:
   655                           	callstack 0
   656   000015                     lcd_8bit_send_string_pos@str:
   657                           	callstack 0
   658                           
   659                           ; 2 bytes @ 0x14
   660   000015                     	ds	1
   661   000016                     dtoa@d:
   662                           	callstack 0
   663   000016                     otoa@d:
   664                           	callstack 0
   665   000016                     utoa@d:
   666                           	callstack 0
   667   000016                     xtoa@d:
   668                           	callstack 0
   669                           
   670                           ; 2 bytes @ 0x15
   671   000016                     	ds	1
   672   000017                     lcd_8bit_send_string_pos@row:
   673                           	callstack 0
   674                           
   675                           ; 1 bytes @ 0x16
   676   000017                     	ds	1
   677   000018                     ??_otoa:
   678   000018                     lcd_8bit_send_string_pos@column:
   679                           	callstack 0
   680   000018                     xtoa@x:
   681                           	callstack 0
   682   000018                     _dtoa$1578:
   683                           	callstack 0
   684   000018                     utoa@p:
   685                           	callstack 0
   686                           
   687                           ; 2 bytes @ 0x17
   688   000018                     	ds	1
   689   000019                     ??_xtoa:
   690   000019                     lcd_8bit_send_string_pos@ret:
   691                           	callstack 0
   692                           
   693                           ; 1 bytes @ 0x18
   694   000019                     	ds	1
   695   00001A                     dtoa@p:
   696                           	callstack 0
   697   00001A                     otoa@p:
   698                           	callstack 0
   699   00001A                     utoa@w:
   700                           	callstack 0
   701                           
   702                           ; 2 bytes @ 0x19
   703   00001A                     	ds	2
   704   00001C                     dtoa@w:
   705                           	callstack 0
   706   00001C                     otoa@w:
   707                           	callstack 0
   708   00001C                     utoa@i:
   709                           	callstack 0
   710   00001C                     _xtoa$1603:
   711                           	callstack 0
   712                           
   713                           ; 2 bytes @ 0x1B
   714   00001C                     	ds	2
   715   00001E                     dtoa@s:
   716                           	callstack 0
   717   00001E                     otoa@t:
   718                           	callstack 0
   719   00001E                     xtoa@a:
   720                           	callstack 0
   721                           
   722                           ; 1 bytes @ 0x1D
   723   00001E                     	ds	1
   724   00001F                     dtoa@i:
   725                           	callstack 0
   726   00001F                     otoa@i:
   727                           	callstack 0
   728   00001F                     xtoa@p:
   729                           	callstack 0
   730                           
   731                           ; 2 bytes @ 0x1E
   732   00001F                     	ds	2
   733   000021                     xtoa@w:
   734                           	callstack 0
   735                           
   736                           ; 2 bytes @ 0x20
   737   000021                     	ds	2
   738   000023                     xtoa@d_nonzero:
   739                           	callstack 0
   740                           
   741                           ; 1 bytes @ 0x22
   742   000023                     	ds	1
   743   000024                     xtoa@c:
   744                           	callstack 0
   745                           
   746                           ; 1 bytes @ 0x23
   747   000024                     	ds	1
   748   000025                     xtoa@i:
   749                           	callstack 0
   750                           
   751                           ; 2 bytes @ 0x24
   752   000025                     	ds	2
   753   000027                     ?_vfpfcnvrt:
   754                           	callstack 0
   755   000027                     vfpfcnvrt@fp:
   756                           	callstack 0
   757                           
   758                           ; 1 bytes @ 0x26
   759   000027                     	ds	1
   760   000028                     vfpfcnvrt@fmt:
   761                           	callstack 0
   762                           
   763                           ; 1 bytes @ 0x27
   764   000028                     	ds	1
   765   000029                     vfpfcnvrt@ap:
   766                           	callstack 0
   767                           
   768                           ; 1 bytes @ 0x28
   769   000029                     	ds	1
   770   00002A                     ??_vfpfcnvrt:
   771                           
   772                           ; 1 bytes @ 0x29
   773   00002A                     	ds	5
   774   00002F                     vfpfcnvrt@done:
   775                           	callstack 0
   776                           
   777                           ; 1 bytes @ 0x2E
   778   00002F                     	ds	1
   779   000030                     vfpfcnvrt@convarg:
   780                           	callstack 0
   781                           
   782                           ; 4 bytes @ 0x2F
   783   000030                     	ds	4
   784   000034                     vfpfcnvrt@c:
   785                           	callstack 0
   786                           
   787                           ; 1 bytes @ 0x33
   788   000034                     	ds	1
   789   000035                     vfpfcnvrt@cp:
   790                           	callstack 0
   791                           
   792                           ; 3 bytes @ 0x34
   793   000035                     	ds	3
   794   000038                     ?_vfprintf:
   795                           	callstack 0
   796   000038                     vfprintf@fp:
   797                           	callstack 0
   798                           
   799                           ; 1 bytes @ 0x37
   800   000038                     	ds	1
   801   000039                     vfprintf@fmt:
   802                           	callstack 0
   803                           
   804                           ; 3 bytes @ 0x38
   805   000039                     	ds	3
   806   00003C                     vfprintf@ap:
   807                           	callstack 0
   808                           
   809                           ; 1 bytes @ 0x3B
   810   00003C                     	ds	1
   811   00003D                     vfprintf@cfmt:
   812                           	callstack 0
   813                           
   814                           ; 3 bytes @ 0x3C
   815   00003D                     	ds	3
   816   000040                     ?_sprintf:
   817                           	callstack 0
   818   000040                     sprintf@s:
   819                           	callstack 0
   820                           
   821                           ; 1 bytes @ 0x3F
   822   000040                     	ds	1
   823   000041                     sprintf@fmt:
   824                           	callstack 0
   825                           
   826                           ; 3 bytes @ 0x40
   827   000041                     	ds	5
   828   000046                     sprintf@f:
   829                           	callstack 0
   830                           
   831                           ; 12 bytes @ 0x45
   832   000046                     	ds	12
   833   000052                     sprintf@ap:
   834                           	callstack 0
   835                           
   836                           ; 1 bytes @ 0x51
   837   000052                     	ds	1
   838   000053                     lcd_convert_uint16_string@value:
   839                           	callstack 0
   840                           
   841                           ; 2 bytes @ 0x52
   842   000053                     	ds	2
   843   000055                     lcd_convert_uint16_string@str:
   844                           	callstack 0
   845                           
   846                           ; 1 bytes @ 0x54
   847   000055                     	ds	1
   848   000056                     ??_main:
   849                           
   850                           ; 1 bytes @ 0x55
   851   000056                     	ds	2
   852                           
   853 ;;
   854 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   855 ;;
   856 ;; *************** function _main *****************
   857 ;; Defined at:
   858 ;;		line 87 in file "project.c"
   859 ;; Parameters:    Size  Location     Type
   860 ;;		None
   861 ;; Auto vars:     Size  Location     Type
   862 ;;		None
   863 ;; Return value:  Size  Location     Type
   864 ;;                  1    wreg      void 
   865 ;; Registers used:
   866 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   867 ;; Tracked objects:
   868 ;;		On entry : 0/0
   869 ;;		On exit  : 0/0
   870 ;;		Unchanged: 0/0
   871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   874 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   875 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   876 ;;Total ram usage:        2 bytes
   877 ;; Hardware stack levels required when called: 11
   878 ;; This function calls:
   879 ;;		_ADC_GetConversion_Blocking
   880 ;;		_initialization
   881 ;;		_lcd_8bit_send_command
   882 ;;		_lcd_8bit_send_string_pos
   883 ;;		_lcd_convert_uint16_string
   884 ;; This function is called by:
   885 ;;		Startup code after reset
   886 ;; This function uses a non-reentrant model
   887 ;;
   888                           
   889                           	psect	text0
   890   001A0C                     __ptext0:
   891                           	callstack 0
   892   001A0C                     _main:
   893                           	callstack 20
   894   001A0C                     
   895                           ;project.c: 88:         }
   896   001A0C  ECC5  F018         	call	_initialization	;wreg free
   897   001A10                     
   898                           ;project.c: 90:             ADC_REQ = 2;
   899   001A10  0E62               	movlw	low _lcd
   900   001A12  6E14               	movwf	lcd_8bit_send_string_pos@_lcd^0,c
   901   001A14  0E01               	movlw	low STR_3
   902   001A16  6E15               	movwf	lcd_8bit_send_string_pos@str^0,c
   903   001A18  5015               	movf	lcd_8bit_send_string_pos@str^0,w,c
   904   001A1A  A4D8               	btfss	status,2,c
   905   001A1C  0E10               	movlw	high __smallconst
   906   001A1E  6E16               	movwf	(lcd_8bit_send_string_pos@str+1)^0,c
   907   001A20  0E01               	movlw	1
   908   001A22  6E17               	movwf	lcd_8bit_send_string_pos@row^0,c
   909   001A24  0E07               	movlw	7
   910   001A26  6E18               	movwf	lcd_8bit_send_string_pos@column^0,c
   911   001A28  EC6E  F017         	call	_lcd_8bit_send_string_pos	;wreg free
   912   001A2C                     
   913                           ;project.c: 91:             ADC_GetConversion_Blocking(&adc_1, ADC_CHANNEL_AN1, &adc_res
      +                          2);
   914   001A2C  0E1A               	movlw	26
   915   001A2E  6E57               	movwf	(??_main+1)^0,c
   916   001A30  0E5E               	movlw	94
   917   001A32  6E56               	movwf	??_main^0,c
   918   001A34  0E6E               	movlw	110
   919   001A36                     u3647:
   920   001A36  2EE8               	decfsz	wreg,f,c
   921   001A38  D7FE               	bra	u3647
   922   001A3A  2E56               	decfsz	??_main^0,f,c
   923   001A3C  D7FC               	bra	u3647
   924   001A3E  2E57               	decfsz	(??_main+1)^0,f,c
   925   001A40  D7FA               	bra	u3647
   926   001A42  D000               	nop2	
   927   001A44                     
   928                           ;project.c: 92:         }
   929   001A44  0E62               	movlw	low _lcd
   930   001A46  6E0A               	movwf	lcd_8bit_send_command@_lcd^0,c
   931   001A48  0E01               	movlw	1
   932   001A4A  6E0B               	movwf	lcd_8bit_send_command@command^0,c
   933   001A4C  EC4B  F016         	call	_lcd_8bit_send_command	;wreg free
   934   001A50                     
   935                           ;project.c: 94:             ADC_REQ = 3;
   936   001A50  0E62               	movlw	low _lcd
   937   001A52  6E14               	movwf	lcd_8bit_send_string_pos@_lcd^0,c
   938   001A54  0E0A               	movlw	low STR_4
   939   001A56  6E15               	movwf	lcd_8bit_send_string_pos@str^0,c
   940   001A58  5015               	movf	lcd_8bit_send_string_pos@str^0,w,c
   941   001A5A  A4D8               	btfss	status,2,c
   942   001A5C  0E10               	movlw	high __smallconst
   943   001A5E  6E16               	movwf	(lcd_8bit_send_string_pos@str+1)^0,c
   944   001A60  0E01               	movlw	1
   945   001A62  6E17               	movwf	lcd_8bit_send_string_pos@row^0,c
   946   001A64  0E01               	movlw	1
   947   001A66  6E18               	movwf	lcd_8bit_send_string_pos@column^0,c
   948   001A68  EC6E  F017         	call	_lcd_8bit_send_string_pos	;wreg free
   949   001A6C                     
   950                           ;project.c: 95:             ADC_GetConversion_Blocking(&adc_1, ADC_CHANNEL_AN2, &adc_res
      +                          3);
   951   001A6C  0E62               	movlw	low _lcd
   952   001A6E  6E14               	movwf	lcd_8bit_send_string_pos@_lcd^0,c
   953   001A70  0E11               	movlw	low STR_5
   954   001A72  6E15               	movwf	lcd_8bit_send_string_pos@str^0,c
   955   001A74  5015               	movf	lcd_8bit_send_string_pos@str^0,w,c
   956   001A76  A4D8               	btfss	status,2,c
   957   001A78  0E10               	movlw	high __smallconst
   958   001A7A  6E16               	movwf	(lcd_8bit_send_string_pos@str+1)^0,c
   959   001A7C  0E02               	movlw	2
   960   001A7E  6E17               	movwf	lcd_8bit_send_string_pos@row^0,c
   961   001A80  0E01               	movlw	1
   962   001A82  6E18               	movwf	lcd_8bit_send_string_pos@column^0,c
   963   001A84  EC6E  F017         	call	_lcd_8bit_send_string_pos	;wreg free
   964   001A88                     
   965                           ;project.c: 96:         }
   966   001A88  0E62               	movlw	low _lcd
   967   001A8A  6E14               	movwf	lcd_8bit_send_string_pos@_lcd^0,c
   968   001A8C  0E18               	movlw	low STR_6
   969   001A8E  6E15               	movwf	lcd_8bit_send_string_pos@str^0,c
   970   001A90  5015               	movf	lcd_8bit_send_string_pos@str^0,w,c
   971   001A92  A4D8               	btfss	status,2,c
   972   001A94  0E10               	movlw	high __smallconst
   973   001A96  6E16               	movwf	(lcd_8bit_send_string_pos@str+1)^0,c
   974   001A98  0E03               	movlw	3
   975   001A9A  6E17               	movwf	lcd_8bit_send_string_pos@row^0,c
   976   001A9C  0E01               	movlw	1
   977   001A9E  6E18               	movwf	lcd_8bit_send_string_pos@column^0,c
   978   001AA0  EC6E  F017         	call	_lcd_8bit_send_string_pos	;wreg free
   979   001AA4                     
   980                           ;project.c: 97:         else if(3 == ADC_REQ){
   981   001AA4  0E62               	movlw	low _lcd
   982   001AA6  6E14               	movwf	lcd_8bit_send_string_pos@_lcd^0,c
   983   001AA8  0E1F               	movlw	low STR_7
   984   001AAA  6E15               	movwf	lcd_8bit_send_string_pos@str^0,c
   985   001AAC  5015               	movf	lcd_8bit_send_string_pos@str^0,w,c
   986   001AAE  A4D8               	btfss	status,2,c
   987   001AB0  0E10               	movlw	high __smallconst
   988   001AB2  6E16               	movwf	(lcd_8bit_send_string_pos@str+1)^0,c
   989   001AB4  0E04               	movlw	4
   990   001AB6  6E17               	movwf	lcd_8bit_send_string_pos@row^0,c
   991   001AB8  0E01               	movlw	1
   992   001ABA  6E18               	movwf	lcd_8bit_send_string_pos@column^0,c
   993   001ABC  EC6E  F017         	call	_lcd_8bit_send_string_pos	;wreg free
   994   001AC0                     l4150:
   995                           
   996                           ;project.c: 100:         }
   997   001AC0  5075               	movf	_ADC_REQ^0,w,c
   998   001AC2  A4D8               	btfss	status,2,c
   999   001AC4  EF66  F00D         	goto	u3601
  1000   001AC8  EF68  F00D         	goto	u3600
  1001   001ACC                     u3601:
  1002   001ACC  EF74  F00D         	goto	l4156
  1003   001AD0                     u3600:
  1004   001AD0                     
  1005                           ;project.c: 101:         else{
  1006   001AD0  0E01               	movlw	1
  1007   001AD2  6E75               	movwf	_ADC_REQ^0,c
  1008   001AD4                     
  1009                           ;project.c: 102: 
  1010   001AD4  0ECC               	movlw	low _adc_1
  1011   001AD6  6E05               	movwf	ADC_GetConversion_Blocking@_adc^0,c
  1012   001AD8  0E00               	movlw	0
  1013   001ADA  6E06               	movwf	ADC_GetConversion_Blocking@_channel^0,c
  1014   001ADC  0E7C               	movlw	low _adc_res1
  1015   001ADE  6E07               	movwf	ADC_GetConversion_Blocking@conversion_result^0,c
  1016   001AE0  ECE8  F016         	call	_ADC_GetConversion_Blocking	;wreg free
  1017                           
  1018                           ;project.c: 103:         }
  1019   001AE4  EFB2  F00D         	goto	l4174
  1020   001AE8                     l4156:
  1021   001AE8  0475               	decf	_ADC_REQ^0,w,c
  1022   001AEA  A4D8               	btfss	status,2,c
  1023   001AEC  EF7A  F00D         	goto	u3611
  1024   001AF0  EF7C  F00D         	goto	u3610
  1025   001AF4                     u3611:
  1026   001AF4  EF88  F00D         	goto	l4162
  1027   001AF8                     u3610:
  1028   001AF8                     
  1029                           ;project.c: 105: 
  1030   001AF8  0E02               	movlw	2
  1031   001AFA  6E75               	movwf	_ADC_REQ^0,c
  1032   001AFC                     
  1033                           ;project.c: 106:         lcd_convert_uint16_string(adc_res1, adc_res1_text);
  1034   001AFC  0ECC               	movlw	low _adc_1
  1035   001AFE  6E05               	movwf	ADC_GetConversion_Blocking@_adc^0,c
  1036   001B00  0E01               	movlw	1
  1037   001B02  6E06               	movwf	ADC_GetConversion_Blocking@_channel^0,c
  1038   001B04  0E7A               	movlw	low _adc_res2
  1039   001B06  6E07               	movwf	ADC_GetConversion_Blocking@conversion_result^0,c
  1040   001B08  ECE8  F016         	call	_ADC_GetConversion_Blocking	;wreg free
  1041                           
  1042                           ;project.c: 107:         lcd_convert_uint16_string(adc_res2, adc_res2_text);
  1043   001B0C  EFB2  F00D         	goto	l4174
  1044   001B10                     l4162:
  1045   001B10  0E02               	movlw	2
  1046   001B12  1875               	xorwf	_ADC_REQ^0,w,c
  1047   001B14  A4D8               	btfss	status,2,c
  1048   001B16  EF8F  F00D         	goto	u3621
  1049   001B1A  EF91  F00D         	goto	u3620
  1050   001B1E                     u3621:
  1051   001B1E  EF9D  F00D         	goto	l4168
  1052   001B22                     u3620:
  1053   001B22                     
  1054                           ;project.c: 109:         lcd_convert_uint16_string(adc_res4, adc_res4_text);
  1055   001B22  0E03               	movlw	3
  1056   001B24  6E75               	movwf	_ADC_REQ^0,c
  1057   001B26                     
  1058                           ;project.c: 110: 
  1059   001B26  0ECC               	movlw	low _adc_1
  1060   001B28  6E05               	movwf	ADC_GetConversion_Blocking@_adc^0,c
  1061   001B2A  0E02               	movlw	2
  1062   001B2C  6E06               	movwf	ADC_GetConversion_Blocking@_channel^0,c
  1063   001B2E  0E78               	movlw	low _adc_res3
  1064   001B30  6E07               	movwf	ADC_GetConversion_Blocking@conversion_result^0,c
  1065   001B32  ECE8  F016         	call	_ADC_GetConversion_Blocking	;wreg free
  1066                           
  1067                           ;project.c: 111: 
  1068   001B36  EFB2  F00D         	goto	l4174
  1069   001B3A                     l4168:
  1070   001B3A  0E03               	movlw	3
  1071   001B3C  1875               	xorwf	_ADC_REQ^0,w,c
  1072   001B3E  A4D8               	btfss	status,2,c
  1073   001B40  EFA4  F00D         	goto	u3631
  1074   001B44  EFA6  F00D         	goto	u3630
  1075   001B48                     u3631:
  1076   001B48  EFB2  F00D         	goto	l443
  1077   001B4C                     u3630:
  1078   001B4C                     
  1079                           ;project.c: 113:         lcd_8bit_send_string_pos(&lcd, adc_res2_text, 2, 7);
  1080   001B4C  0E00               	movlw	0
  1081   001B4E  6E75               	movwf	_ADC_REQ^0,c
  1082   001B50                     
  1083                           ;project.c: 114:         lcd_8bit_send_string_pos(&lcd, adc_res3_text, 3, 7);
  1084   001B50  0ECC               	movlw	low _adc_1
  1085   001B52  6E05               	movwf	ADC_GetConversion_Blocking@_adc^0,c
  1086   001B54  0E03               	movlw	3
  1087   001B56  6E06               	movwf	ADC_GetConversion_Blocking@_channel^0,c
  1088   001B58  0E76               	movlw	low _adc_res4
  1089   001B5A  6E07               	movwf	ADC_GetConversion_Blocking@conversion_result^0,c
  1090   001B5C  ECE8  F016         	call	_ADC_GetConversion_Blocking	;wreg free
  1091                           
  1092                           ;project.c: 115:         lcd_8bit_send_string_pos(&lcd, adc_res4_text, 4, 7);
  1093   001B60  EFB2  F00D         	goto	l4174
  1094   001B64                     l443:
  1095   001B64                     l4174:
  1096                           
  1097                           ;project.c: 121: void initialization(void){
  1098   001B64  C07C  F053         	movff	_adc_res1,lcd_convert_uint16_string@value
  1099   001B68  C07D  F054         	movff	_adc_res1+1,lcd_convert_uint16_string@value+1
  1100   001B6C  0EB2               	movlw	low _adc_res1_text
  1101   001B6E  6E55               	movwf	lcd_convert_uint16_string@str^0,c
  1102   001B70  EC45  F017         	call	_lcd_convert_uint16_string	;wreg free
  1103                           
  1104                           ;project.c: 122:     ADC_Init(&adc_1);
  1105   001B74  C07A  F053         	movff	_adc_res2,lcd_convert_uint16_string@value
  1106   001B78  C07B  F054         	movff	_adc_res2+1,lcd_convert_uint16_string@value+1
  1107   001B7C  0EAC               	movlw	low _adc_res2_text
  1108   001B7E  6E55               	movwf	lcd_convert_uint16_string@str^0,c
  1109   001B80  EC45  F017         	call	_lcd_convert_uint16_string	;wreg free
  1110                           
  1111                           ;project.c: 123:     lcd_8bit_initialize(&lcd);
  1112   001B84  C078  F053         	movff	_adc_res3,lcd_convert_uint16_string@value
  1113   001B88  C079  F054         	movff	_adc_res3+1,lcd_convert_uint16_string@value+1
  1114   001B8C  0EA6               	movlw	low _adc_res3_text
  1115   001B8E  6E55               	movwf	lcd_convert_uint16_string@str^0,c
  1116   001B90  EC45  F017         	call	_lcd_convert_uint16_string	;wreg free
  1117                           
  1118                           ;project.c: 124: 
  1119   001B94  C076  F053         	movff	_adc_res4,lcd_convert_uint16_string@value
  1120   001B98  C077  F054         	movff	_adc_res4+1,lcd_convert_uint16_string@value+1
  1121   001B9C  0EA0               	movlw	low _adc_res4_text
  1122   001B9E  6E55               	movwf	lcd_convert_uint16_string@str^0,c
  1123   001BA0  EC45  F017         	call	_lcd_convert_uint16_string	;wreg free
  1124   001BA4  0E62               	movlw	low _lcd
  1125   001BA6  6E14               	movwf	lcd_8bit_send_string_pos@_lcd^0,c
  1126   001BA8  0EB2               	movlw	low _adc_res1_text
  1127   001BAA  6E15               	movwf	lcd_8bit_send_string_pos@str^0,c
  1128   001BAC  6A16               	clrf	(lcd_8bit_send_string_pos@str+1)^0,c
  1129   001BAE  0E01               	movlw	1
  1130   001BB0  6E17               	movwf	lcd_8bit_send_string_pos@row^0,c
  1131   001BB2  0E07               	movlw	7
  1132   001BB4  6E18               	movwf	lcd_8bit_send_string_pos@column^0,c
  1133   001BB6  EC6E  F017         	call	_lcd_8bit_send_string_pos	;wreg free
  1134   001BBA  0E62               	movlw	low _lcd
  1135   001BBC  6E14               	movwf	lcd_8bit_send_string_pos@_lcd^0,c
  1136   001BBE  0EAC               	movlw	low _adc_res2_text
  1137   001BC0  6E15               	movwf	lcd_8bit_send_string_pos@str^0,c
  1138   001BC2  6A16               	clrf	(lcd_8bit_send_string_pos@str+1)^0,c
  1139   001BC4  0E02               	movlw	2
  1140   001BC6  6E17               	movwf	lcd_8bit_send_string_pos@row^0,c
  1141   001BC8  0E07               	movlw	7
  1142   001BCA  6E18               	movwf	lcd_8bit_send_string_pos@column^0,c
  1143   001BCC  EC6E  F017         	call	_lcd_8bit_send_string_pos	;wreg free
  1144   001BD0  0E62               	movlw	low _lcd
  1145   001BD2  6E14               	movwf	lcd_8bit_send_string_pos@_lcd^0,c
  1146   001BD4  0EA6               	movlw	low _adc_res3_text
  1147   001BD6  6E15               	movwf	lcd_8bit_send_string_pos@str^0,c
  1148   001BD8  6A16               	clrf	(lcd_8bit_send_string_pos@str+1)^0,c
  1149   001BDA  0E03               	movlw	3
  1150   001BDC  6E17               	movwf	lcd_8bit_send_string_pos@row^0,c
  1151   001BDE  0E07               	movlw	7
  1152   001BE0  6E18               	movwf	lcd_8bit_send_string_pos@column^0,c
  1153   001BE2  EC6E  F017         	call	_lcd_8bit_send_string_pos	;wreg free
  1154   001BE6  0E62               	movlw	low _lcd
  1155   001BE8  6E14               	movwf	lcd_8bit_send_string_pos@_lcd^0,c
  1156   001BEA  0EA0               	movlw	low _adc_res4_text
  1157   001BEC  6E15               	movwf	lcd_8bit_send_string_pos@str^0,c
  1158   001BEE  6A16               	clrf	(lcd_8bit_send_string_pos@str+1)^0,c
  1159   001BF0  0E04               	movlw	4
  1160   001BF2  6E17               	movwf	lcd_8bit_send_string_pos@row^0,c
  1161   001BF4  0E07               	movlw	7
  1162   001BF6  6E18               	movwf	lcd_8bit_send_string_pos@column^0,c
  1163   001BF8  EC6E  F017         	call	_lcd_8bit_send_string_pos	;wreg free
  1164   001BFC  EF60  F00D         	goto	l4150
  1165   001C00  EF07  F000         	goto	start
  1166   001C04                     __end_of_main:
  1167                           	callstack 0
  1168                           
  1169 ;; *************** function _lcd_convert_uint16_string *****************
  1170 ;; Defined at:
  1171 ;;		line 261 in file "ECU/LCD/ecu_lcd.c"
  1172 ;; Parameters:    Size  Location     Type
  1173 ;;  value           2   82[COMRAM] unsigned short 
  1174 ;;  str             1   84[COMRAM] PTR unsigned char 
  1175 ;;		 -> adc_res4_text(6), adc_res3_text(6), adc_res2_text(6), adc_res1_text(6), 
  1176 ;; Auto vars:     Size  Location     Type
  1177 ;;  ret             1    0        unsigned char 
  1178 ;; Return value:  Size  Location     Type
  1179 ;;                  1    wreg      unsigned char 
  1180 ;; Registers used:
  1181 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1182 ;; Tracked objects:
  1183 ;;		On entry : 0/0
  1184 ;;		On exit  : 0/0
  1185 ;;		Unchanged: 0/0
  1186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1187 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1190 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1191 ;;Total ram usage:        3 bytes
  1192 ;; Hardware stack levels used: 1
  1193 ;; Hardware stack levels required when called: 10
  1194 ;; This function calls:
  1195 ;;		_memset
  1196 ;;		_sprintf
  1197 ;; This function is called by:
  1198 ;;		_main
  1199 ;; This function uses a non-reentrant model
  1200 ;;
  1201                           
  1202                           	psect	text1
  1203   002E8A                     __ptext1:
  1204                           	callstack 0
  1205   002E8A                     _lcd_convert_uint16_string:
  1206                           	callstack 20
  1207   002E8A                     
  1208                           ;ECU/LCD/ecu_lcd.c: 264:     if (((void*)0) == str) {
  1209   002E8A  5055               	movf	lcd_convert_uint16_string@str^0,w,c
  1210   002E8C  A4D8               	btfss	status,2,c
  1211   002E8E  EF4B  F017         	goto	u3341
  1212   002E92  EF4D  F017         	goto	u3340
  1213   002E96                     u3341:
  1214   002E96  EF4F  F017         	goto	l3894
  1215   002E9A                     u3340:
  1216   002E9A                     
  1217                           ;ECU/LCD/ecu_lcd.c: 266:     } else {
  1218   002E9A  EF6D  F017         	goto	l115
  1219   002E9E                     l3894:
  1220                           
  1221                           ;ECU/LCD/ecu_lcd.c: 267:         memset(str, '\0', 6);
  1222   002E9E  C055  F001         	movff	lcd_convert_uint16_string@str,memset@dest
  1223   002EA2  0E00               	movlw	0
  1224   002EA4  6E03               	movwf	(memset@c+1)^0,c
  1225   002EA6  0E00               	movlw	0
  1226   002EA8  6E02               	movwf	memset@c^0,c
  1227   002EAA  0E00               	movlw	0
  1228   002EAC  6E05               	movwf	(memset@n+1)^0,c
  1229   002EAE  0E06               	movlw	6
  1230   002EB0  6E04               	movwf	memset@n^0,c
  1231   002EB2  EC37  F018         	call	_memset	;wreg free
  1232   002EB6                     
  1233                           ;ECU/LCD/ecu_lcd.c: 268:         sprintf((char *)str, "%u", value);
  1234   002EB6  C055  F040         	movff	lcd_convert_uint16_string@str,sprintf@s
  1235   002EBA  0E26               	movlw	low STR_1
  1236   002EBC  6E41               	movwf	sprintf@fmt^0,c
  1237   002EBE  5041               	movf	sprintf@fmt^0,w,c
  1238   002EC0  A4D8               	btfss	status,2,c
  1239   002EC2  0E10               	movlw	high __smallconst
  1240   002EC4  6E42               	movwf	(sprintf@fmt+1)^0,c
  1241   002EC6  5042               	movf	(sprintf@fmt+1)^0,w,c
  1242   002EC8  A4D8               	btfss	status,2,c
  1243   002ECA  0E00               	movlw	low (__smallconst shr (0+16))
  1244   002ECC  6E43               	movwf	(sprintf@fmt+2)^0,c
  1245   002ECE  C053  F044         	movff	lcd_convert_uint16_string@value,?_sprintf+4
  1246   002ED2  C054  F045         	movff	lcd_convert_uint16_string@value+1,?_sprintf+5
  1247   002ED6  ECE1  F017         	call	_sprintf	;wreg free
  1248   002EDA                     l115:
  1249   002EDA  0012               	return		;funcret
  1250   002EDC                     __end_of_lcd_convert_uint16_string:
  1251                           	callstack 0
  1252                           
  1253 ;; *************** function _sprintf *****************
  1254 ;; Defined at:
  1255 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_sprintf.c"
  1256 ;; Parameters:    Size  Location     Type
  1257 ;;  s               1   63[COMRAM] PTR unsigned char 
  1258 ;;		 -> adc_res4_text(6), adc_res3_text(6), adc_res2_text(6), adc_res1_text(6), 
  1259 ;;  fmt             3   64[COMRAM] PTR const unsigned char 
  1260 ;;		 -> ROM(65535), STR_2(3), STR_1(3), 
  1261 ;; Auto vars:     Size  Location     Type
  1262 ;;  f              12   69[COMRAM] struct _IO_FILE
  1263 ;;  ret             2    0        int 
  1264 ;;  ap              1   81[COMRAM] PTR void [1]
  1265 ;;		 -> ?_sprintf(2), 
  1266 ;; Return value:  Size  Location     Type
  1267 ;;                  2   63[COMRAM] int 
  1268 ;; Registers used:
  1269 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1270 ;; Tracked objects:
  1271 ;;		On entry : 0/0
  1272 ;;		On exit  : 0/0
  1273 ;;		Unchanged: 0/0
  1274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1275 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1276 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1278 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1279 ;;Total ram usage:       19 bytes
  1280 ;; Hardware stack levels used: 1
  1281 ;; Hardware stack levels required when called: 9
  1282 ;; This function calls:
  1283 ;;		_vfprintf
  1284 ;; This function is called by:
  1285 ;;		_lcd_convert_uint16_string
  1286 ;;		_lcd_convert_uint8_string
  1287 ;;		_lcd_convert_uint32_string
  1288 ;; This function uses a non-reentrant model
  1289 ;;
  1290                           
  1291                           	psect	text2
  1292   002FC2                     __ptext2:
  1293                           	callstack 0
  1294   002FC2                     _sprintf:
  1295                           	callstack 20
  1296   002FC2  0E44               	movlw	low (?_sprintf+4)
  1297   002FC4  6E52               	movwf	sprintf@ap^0,c
  1298   002FC6  C040  F046         	movff	sprintf@s,sprintf@f
  1299   002FCA  0E00               	movlw	0
  1300   002FCC  6E4A               	movwf	(sprintf@f+4)^0,c
  1301   002FCE  0E00               	movlw	0
  1302   002FD0  6E49               	movwf	(sprintf@f+3)^0,c
  1303   002FD2  0E00               	movlw	0
  1304   002FD4  6E51               	movwf	(sprintf@f+11)^0,c
  1305   002FD6  0E00               	movlw	0
  1306   002FD8  6E50               	movwf	(sprintf@f+10)^0,c
  1307   002FDA  0E46               	movlw	low sprintf@f
  1308   002FDC  6E38               	movwf	vfprintf@fp^0,c
  1309   002FDE  C041  F039         	movff	sprintf@fmt,vfprintf@fmt
  1310   002FE2  C042  F03A         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1311   002FE6  C043  F03B         	movff	sprintf@fmt+2,vfprintf@fmt+2
  1312   002FEA  0E52               	movlw	low sprintf@ap
  1313   002FEC  6E3C               	movwf	vfprintf@ap^0,c
  1314   002FEE  EC18  F017         	call	_vfprintf	;wreg free
  1315   002FF2  5040               	movf	sprintf@s^0,w,c
  1316   002FF4  2449               	addwf	(sprintf@f+3)^0,w,c
  1317   002FF6  6ED9               	movwf	fsr2l,c
  1318   002FF8  6ADA               	clrf	fsr2h,c
  1319   002FFA  6ADF               	clrf	indf2,c
  1320   002FFC  0012               	return		;funcret
  1321   002FFE                     __end_of_sprintf:
  1322                           	callstack 0
  1323                           
  1324 ;; *************** function _vfprintf *****************
  1325 ;; Defined at:
  1326 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  1327 ;; Parameters:    Size  Location     Type
  1328 ;;  fp              1   55[COMRAM] PTR struct _IO_FILE
  1329 ;;		 -> sprintf@f(12), 
  1330 ;;  fmt             3   56[COMRAM] PTR const unsigned char 
  1331 ;;		 -> ROM(65535), STR_2(3), STR_1(3), 
  1332 ;;  ap              1   59[COMRAM] PTR PTR void 
  1333 ;;		 -> sprintf@ap(1), 
  1334 ;; Auto vars:     Size  Location     Type
  1335 ;;  cfmt            3   60[COMRAM] PTR unsigned char 
  1336 ;;		 -> ROM(65535), STR_2(3), STR_1(3), 
  1337 ;; Return value:  Size  Location     Type
  1338 ;;                  2   55[COMRAM] int 
  1339 ;; Registers used:
  1340 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1341 ;; Tracked objects:
  1342 ;;		On entry : 0/0
  1343 ;;		On exit  : 0/0
  1344 ;;		Unchanged: 0/0
  1345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1346 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1347 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1349 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1350 ;;Total ram usage:        8 bytes
  1351 ;; Hardware stack levels used: 1
  1352 ;; Hardware stack levels required when called: 8
  1353 ;; This function calls:
  1354 ;;		_vfpfcnvrt
  1355 ;; This function is called by:
  1356 ;;		_sprintf
  1357 ;; This function uses a non-reentrant model
  1358 ;;
  1359                           
  1360                           	psect	text3
  1361   002E30                     __ptext3:
  1362                           	callstack 0
  1363   002E30                     _vfprintf:
  1364                           	callstack 20
  1365   002E30                     
  1366                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1367   002E30  C039  F03D         	movff	vfprintf@fmt,vfprintf@cfmt
  1368   002E34  C03A  F03E         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1369   002E38  C03B  F03F         	movff	vfprintf@fmt+2,vfprintf@cfmt+2
  1370   002E3C                     
  1371                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1824:     nout = 
      +                          0;
  1372   002E3C  0E00               	movlw	0
  1373   002E3E  6E6D               	movwf	(_nout+1)^0,c
  1374   002E40  0E00               	movlw	0
  1375   002E42  6E6C               	movwf	_nout^0,c
  1376                           
  1377                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1378   002E44  EF30  F017         	goto	l3626
  1379   002E48                     l3624:
  1380                           
  1381                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1828:         nou
      +                          t +=
  1382   002E48  C038  F027         	movff	vfprintf@fp,vfpfcnvrt@fp
  1383   002E4C  0E3D               	movlw	low vfprintf@cfmt
  1384   002E4E  6E28               	movwf	vfpfcnvrt@fmt^0,c
  1385   002E50  C03C  F029         	movff	vfprintf@ap,vfpfcnvrt@ap
  1386   002E54  EC15  F008         	call	_vfpfcnvrt	;wreg free
  1387   002E58  5027               	movf	?_vfpfcnvrt^0,w,c
  1388   002E5A  266C               	addwf	_nout^0,f,c
  1389   002E5C  5028               	movf	(?_vfpfcnvrt+1)^0,w,c
  1390   002E5E  226D               	addwfc	(_nout+1)^0,f,c
  1391   002E60                     l3626:
  1392                           
  1393                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1394   002E60  C03D  FFF6         	movff	vfprintf@cfmt,tblptrl
  1395   002E64  C03E  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1396   002E68  C03F  FFF8         	movff	vfprintf@cfmt+2,tblptru
  1397   002E6C  0008               	tblrd		*
  1398   002E6E  50F5               	movf	tablat,w,c
  1399   002E70  0900               	iorlw	0
  1400   002E72  A4D8               	btfss	status,2,c
  1401   002E74  EF3E  F017         	goto	u3101
  1402   002E78  EF40  F017         	goto	u3100
  1403   002E7C                     u3101:
  1404   002E7C  EF24  F017         	goto	l3624
  1405   002E80                     u3100:
  1406   002E80                     
  1407                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1408   002E80  0E00               	movlw	0
  1409   002E82  6E39               	movwf	(?_vfprintf+1)^0,c
  1410   002E84  0E00               	movlw	0
  1411   002E86  6E38               	movwf	?_vfprintf^0,c
  1412   002E88  0012               	return		;funcret
  1413   002E8A                     __end_of_vfprintf:
  1414                           	callstack 0
  1415                           
  1416 ;; *************** function _vfpfcnvrt *****************
  1417 ;; Defined at:
  1418 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  1419 ;; Parameters:    Size  Location     Type
  1420 ;;  fp              1   38[COMRAM] PTR struct _IO_FILE
  1421 ;;		 -> sprintf@f(12), 
  1422 ;;  fmt             1   39[COMRAM] PTR PTR unsigned char 
  1423 ;;		 -> vfprintf@cfmt(3), 
  1424 ;;  ap              1   40[COMRAM] PTR PTR void 
  1425 ;;		 -> sprintf@ap(1), 
  1426 ;; Auto vars:     Size  Location     Type
  1427 ;;  convarg         4   47[COMRAM] struct .
  1428 ;;  cp              3   52[COMRAM] PTR unsigned char 
  1429 ;;		 -> ROM(65535), STR_2(3), STR_1(3), 
  1430 ;;  c               1   51[COMRAM] unsigned char 
  1431 ;;  done            1   46[COMRAM] _Bool 
  1432 ;; Return value:  Size  Location     Type
  1433 ;;                  2   38[COMRAM] int 
  1434 ;; Registers used:
  1435 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1436 ;; Tracked objects:
  1437 ;;		On entry : 0/0
  1438 ;;		On exit  : 0/0
  1439 ;;		Unchanged: 0/0
  1440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1441 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1442 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1443 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1444 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1445 ;;Total ram usage:       17 bytes
  1446 ;; Hardware stack levels used: 1
  1447 ;; Hardware stack levels required when called: 7
  1448 ;; This function calls:
  1449 ;;		_ctoa
  1450 ;;		_dtoa
  1451 ;;		_fputc
  1452 ;;		_otoa
  1453 ;;		_read_prec_or_width
  1454 ;;		_utoa
  1455 ;;		_xtoa
  1456 ;; This function is called by:
  1457 ;;		_vfprintf
  1458 ;; This function uses a non-reentrant model
  1459 ;;
  1460                           
  1461                           	psect	text4
  1462   00102A                     __ptext4:
  1463                           	callstack 0
  1464   00102A                     _vfpfcnvrt:
  1465                           	callstack 20
  1466   00102A                     
  1467                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1468   00102A  5028               	movf	vfpfcnvrt@fmt^0,w,c
  1469   00102C  6ED9               	movwf	fsr2l,c
  1470   00102E  6ADA               	clrf	fsr2h,c
  1471   001030  CFDE F02A          	movff	postinc2,??_vfpfcnvrt
  1472   001034  CFDE F02B          	movff	postinc2,??_vfpfcnvrt+1
  1473   001038  CFDE F02C          	movff	postinc2,??_vfpfcnvrt+2
  1474   00103C  C02A  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1475   001040  C02B  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1476   001044  C02C  FFF8         	movff	??_vfpfcnvrt+2,tblptru
  1477   001048  0008               	tblrd		*
  1478   00104A  50F5               	movf	tablat,w,c
  1479   00104C  0A25               	xorlw	37
  1480   00104E  A4D8               	btfss	status,2,c
  1481   001050  EF2C  F008         	goto	u2841
  1482   001054  EF2E  F008         	goto	u2840
  1483   001058                     u2841:
  1484   001058  EFE8  F00B         	goto	l3506
  1485   00105C                     u2840:
  1486   00105C                     
  1487                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1488   00105C  5028               	movf	vfpfcnvrt@fmt^0,w,c
  1489   00105E  6ED9               	movwf	fsr2l,c
  1490   001060  6ADA               	clrf	fsr2h,c
  1491   001062  2ADE               	incf	postinc2,f,c
  1492   001064  0E00               	movlw	0
  1493   001066  22DE               	addwfc	postinc2,f,c
  1494   001068  22DE               	addwfc	postinc2,f,c
  1495   00106A                     
  1496                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1497   00106A  0E00               	movlw	0
  1498   00106C  6E6F               	movwf	(_width+1)^0,c
  1499   00106E  0E00               	movlw	0
  1500   001070  6E6E               	movwf	_width^0,c
  1501   001072  C06E  F074         	movff	_width,_flags
  1502   001076                     
  1503                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1504   001076  6870               	setf	_prec^0,c
  1505   001078  6871               	setf	(_prec+1)^0,c
  1506   00107A                     
  1507                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
  1508   00107A  0E00               	movlw	0
  1509   00107C  6E2F               	movwf	vfpfcnvrt@done^0,c
  1510                           
  1511                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  1512   00107E  EF82  F008         	goto	l3354
  1513   001082                     l3328:
  1514                           
  1515                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1214:            
      +                                   flags |= (1 << 0);
  1516   001082  8074               	bsf	_flags^0,0,c
  1517   001084                     l3330:
  1518                           
  1519                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1215:            
      +                                   ++*fmt;
  1520   001084  5028               	movf	vfpfcnvrt@fmt^0,w,c
  1521   001086  6ED9               	movwf	fsr2l,c
  1522   001088  6ADA               	clrf	fsr2h,c
  1523   00108A  2ADE               	incf	postinc2,f,c
  1524   00108C  0E00               	movlw	0
  1525   00108E  22DE               	addwfc	postinc2,f,c
  1526   001090  22DE               	addwfc	postinc2,f,c
  1527                           
  1528                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1216:            
      +                                   break;
  1529   001092  EF82  F008         	goto	l3354
  1530   001096                     l3332:
  1531                           
  1532                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
  1533   001096  8274               	bsf	_flags^0,1,c
  1534   001098  EF42  F008         	goto	l3330
  1535   00109C                     l3336:
  1536                           
  1537                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1226:            
      +                                   flags |= (1 << 2);
  1538   00109C  8474               	bsf	_flags^0,2,c
  1539   00109E  EF42  F008         	goto	l3330
  1540   0010A2                     l3340:
  1541                           
  1542                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1232:            
      +                                   flags |= (1 << 3);
  1543   0010A2  8674               	bsf	_flags^0,3,c
  1544   0010A4  EF42  F008         	goto	l3330
  1545   0010A8                     l3344:
  1546                           
  1547                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1238:            
      +                                   flags |= (1 << 4);
  1548   0010A8  8874               	bsf	_flags^0,4,c
  1549   0010AA  EF42  F008         	goto	l3330
  1550   0010AE                     l3348:
  1551                           
  1552                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
  1553   0010AE  0E01               	movlw	1
  1554   0010B0  6E2F               	movwf	vfpfcnvrt@done^0,c
  1555                           
  1556                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
  1557   0010B2  EF82  F008         	goto	l3354
  1558   0010B6                     l3352:
  1559   0010B6  5028               	movf	vfpfcnvrt@fmt^0,w,c
  1560   0010B8  6ED9               	movwf	fsr2l,c
  1561   0010BA  6ADA               	clrf	fsr2h,c
  1562   0010BC  CFDE F02A          	movff	postinc2,??_vfpfcnvrt
  1563   0010C0  CFDE F02B          	movff	postinc2,??_vfpfcnvrt+1
  1564   0010C4  CFDE F02C          	movff	postinc2,??_vfpfcnvrt+2
  1565   0010C8  C02A  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1566   0010CC  C02B  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1567   0010D0  C02C  FFF8         	movff	??_vfpfcnvrt+2,tblptru
  1568   0010D4  0008               	tblrd		*
  1569   0010D6  50F5               	movf	tablat,w,c
  1570                           
  1571                           ; Switch size 1, requested type "simple"
  1572                           ; Number of cases is 5, Range of values is 32 to 48
  1573                           ; switch strategies available:
  1574                           ; Name         Instructions Cycles
  1575                           ; simple_byte           16     9 (average)
  1576                           ;	Chosen strategy is simple_byte
  1577   0010D8  0A20               	xorlw	32	; case 32
  1578   0010DA  B4D8               	btfsc	status,2,c
  1579   0010DC  EF51  F008         	goto	l3340
  1580   0010E0  0A03               	xorlw	3	; case 35
  1581   0010E2  B4D8               	btfsc	status,2,c
  1582   0010E4  EF54  F008         	goto	l3344
  1583   0010E8  0A08               	xorlw	8	; case 43
  1584   0010EA  B4D8               	btfsc	status,2,c
  1585   0010EC  EF4E  F008         	goto	l3336
  1586   0010F0  0A06               	xorlw	6	; case 45
  1587   0010F2  B4D8               	btfsc	status,2,c
  1588   0010F4  EF41  F008         	goto	l3328
  1589   0010F8  0A1D               	xorlw	29	; case 48
  1590   0010FA  B4D8               	btfsc	status,2,c
  1591   0010FC  EF4B  F008         	goto	l3332
  1592   001100  EF57  F008         	goto	l3348
  1593   001104                     l3354:
  1594                           
  1595                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  1596   001104  502F               	movf	vfpfcnvrt@done^0,w,c
  1597   001106  B4D8               	btfsc	status,2,c
  1598   001108  EF88  F008         	goto	u2851
  1599   00110C  EF8A  F008         	goto	u2850
  1600   001110                     u2851:
  1601   001110  EF5B  F008         	goto	l3352
  1602   001114                     u2850:
  1603   001114                     
  1604                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1248:         if 
      +                          (flags & (1 << 0)) {
  1605   001114  A074               	btfss	_flags^0,0,c
  1606   001116  EF8F  F008         	goto	u2861
  1607   00111A  EF91  F008         	goto	u2860
  1608   00111E                     u2861:
  1609   00111E  EF92  F008         	goto	l3358
  1610   001122                     u2860:
  1611   001122                     
  1612                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1249:            
      +                           flags &= ~(1 << 1);
  1613   001122  9274               	bcf	_flags^0,1,c
  1614   001124                     l3358:
  1615                           
  1616                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
  1617   001124  C028  F007         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  1618   001128  C029  F008         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  1619   00112C  EC46  F012         	call	_read_prec_or_width	;wreg free
  1620   001130  C007  F06E         	movff	?_read_prec_or_width,_width
  1621   001134  C008  F06F         	movff	?_read_prec_or_width+1,_width+1
  1622   001138                     
  1623                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
  1624   001138  BE6F               	btfsc	(_width+1)^0,7,c
  1625   00113A  EFA3  F008         	goto	u2870
  1626   00113E  EFA1  F008         	goto	u2871
  1627   001142                     u2871:
  1628   001142  EFA8  F008         	goto	l3364
  1629   001146                     u2870:
  1630   001146                     
  1631                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
  1632   001146  8074               	bsf	_flags^0,0,c
  1633                           
  1634                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
  1635   001148  6C6E               	negf	_width^0,c
  1636   00114A  1E6F               	comf	(_width+1)^0,f,c
  1637   00114C  B0D8               	btfsc	status,0,c
  1638   00114E  2A6F               	incf	(_width+1)^0,f,c
  1639   001150                     l3364:
  1640                           
  1641                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
  1642   001150  5028               	movf	vfpfcnvrt@fmt^0,w,c
  1643   001152  6ED9               	movwf	fsr2l,c
  1644   001154  6ADA               	clrf	fsr2h,c
  1645   001156  CFDE F02A          	movff	postinc2,??_vfpfcnvrt
  1646   00115A  CFDE F02B          	movff	postinc2,??_vfpfcnvrt+1
  1647   00115E  CFDE F02C          	movff	postinc2,??_vfpfcnvrt+2
  1648   001162  C02A  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1649   001166  C02B  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1650   00116A  C02C  FFF8         	movff	??_vfpfcnvrt+2,tblptru
  1651   00116E  0008               	tblrd		*
  1652   001170  50F5               	movf	tablat,w,c
  1653   001172  0A2E               	xorlw	46
  1654   001174  A4D8               	btfss	status,2,c
  1655   001176  EFBF  F008         	goto	u2881
  1656   00117A  EFC1  F008         	goto	u2880
  1657   00117E                     u2881:
  1658   00117E  EFD2  F008         	goto	l3370
  1659   001182                     u2880:
  1660   001182                     
  1661                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
  1662   001182  5028               	movf	vfpfcnvrt@fmt^0,w,c
  1663   001184  6ED9               	movwf	fsr2l,c
  1664   001186  6ADA               	clrf	fsr2h,c
  1665   001188  2ADE               	incf	postinc2,f,c
  1666   00118A  0E00               	movlw	0
  1667   00118C  22DE               	addwfc	postinc2,f,c
  1668   00118E  22DE               	addwfc	postinc2,f,c
  1669   001190                     
  1670                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  1671   001190  C028  F007         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  1672   001194  C029  F008         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  1673   001198  EC46  F012         	call	_read_prec_or_width	;wreg free
  1674   00119C  C007  F070         	movff	?_read_prec_or_width,_prec
  1675   0011A0  C008  F071         	movff	?_read_prec_or_width+1,_prec+1
  1676   0011A4                     l3370:
  1677                           
  1678                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1273:         if 
      +                          ((*fmt)[0] == 'c') {
  1679   0011A4  5028               	movf	vfpfcnvrt@fmt^0,w,c
  1680   0011A6  6ED9               	movwf	fsr2l,c
  1681   0011A8  6ADA               	clrf	fsr2h,c
  1682   0011AA  CFDE F02A          	movff	postinc2,??_vfpfcnvrt
  1683   0011AE  CFDE F02B          	movff	postinc2,??_vfpfcnvrt+1
  1684   0011B2  CFDE F02C          	movff	postinc2,??_vfpfcnvrt+2
  1685   0011B6  C02A  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1686   0011BA  C02B  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1687   0011BE  C02C  FFF8         	movff	??_vfpfcnvrt+2,tblptru
  1688   0011C2  0008               	tblrd		*
  1689   0011C4  50F5               	movf	tablat,w,c
  1690   0011C6  0A63               	xorlw	99
  1691   0011C8  A4D8               	btfss	status,2,c
  1692   0011CA  EFE9  F008         	goto	u2891
  1693   0011CE  EFEB  F008         	goto	u2890
  1694   0011D2                     u2891:
  1695   0011D2  EF08  F009         	goto	l3380
  1696   0011D6                     u2890:
  1697   0011D6                     
  1698                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1274:            
      +                           ++*fmt;
  1699   0011D6  5028               	movf	vfpfcnvrt@fmt^0,w,c
  1700   0011D8  6ED9               	movwf	fsr2l,c
  1701   0011DA  6ADA               	clrf	fsr2h,c
  1702   0011DC  2ADE               	incf	postinc2,f,c
  1703   0011DE  0E00               	movlw	0
  1704   0011E0  22DE               	addwfc	postinc2,f,c
  1705   0011E2  22DE               	addwfc	postinc2,f,c
  1706   0011E4                     
  1707                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1275:            
      +                           c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  1708   0011E4  5029               	movf	vfpfcnvrt@ap^0,w,c
  1709   0011E6  6ED9               	movwf	fsr2l,c
  1710   0011E8  6ADA               	clrf	fsr2h,c
  1711   0011EA  50DF               	movf	indf2,w,c
  1712   0011EC  2ADF               	incf	indf2,f,c
  1713   0011EE  2ADF               	incf	indf2,f,c
  1714   0011F0  6ED9               	movwf	fsr2l,c
  1715   0011F2  6ADA               	clrf	fsr2h,c
  1716   0011F4  50DF               	movf	indf2,w,c
  1717   0011F6  6E34               	movwf	vfpfcnvrt@c^0,c
  1718   0011F8                     
  1719                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1284:            
      +                           return (int) ctoa(fp, c);
  1720   0011F8  C027  F009         	movff	vfpfcnvrt@fp,ctoa@fp
  1721   0011FC  C034  F00A         	movff	vfpfcnvrt@c,ctoa@c
  1722   001200  ECAF  F012         	call	_ctoa	;wreg free
  1723   001204  C009  F027         	movff	?_ctoa,?_vfpfcnvrt
  1724   001208  C00A  F028         	movff	?_ctoa+1,?_vfpfcnvrt+1
  1725   00120C  EF08  F00C         	goto	l1293
  1726   001210                     l3380:
  1727                           
  1728                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  1729   001210  5028               	movf	vfpfcnvrt@fmt^0,w,c
  1730   001212  6ED9               	movwf	fsr2l,c
  1731   001214  6ADA               	clrf	fsr2h,c
  1732   001216  CFDE F035          	movff	postinc2,vfpfcnvrt@cp
  1733   00121A  CFDE F036          	movff	postinc2,vfpfcnvrt@cp+1
  1734   00121E  CFDD F037          	movff	postdec2,vfpfcnvrt@cp+2
  1735   001222                     
  1736                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1293:   c = *cp;
  1737   001222  C035  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1738   001226  C036  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1739   00122A  C037  FFF8         	movff	vfpfcnvrt@cp+2,tblptru
  1740   00122E  0008               	tblrd		*
  1741   001230  CFF5 F034          	movff	tablat,vfpfcnvrt@c
  1742                           
  1743                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1294:   switch(c)
      +                           {
  1744   001234  EF44  F009         	goto	l3400
  1745   001238                     l3384:
  1746                           
  1747                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1298:     cp++;
  1748   001238  0E01               	movlw	1
  1749   00123A  2635               	addwf	vfpfcnvrt@cp^0,f,c
  1750   00123C  0E00               	movlw	0
  1751   00123E  2236               	addwfc	(vfpfcnvrt@cp+1)^0,f,c
  1752   001240  0E00               	movlw	0
  1753   001242  2237               	addwfc	(vfpfcnvrt@cp+2)^0,f,c
  1754   001244                     
  1755                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1300:     if (*cp
      +                           == 'h') {
  1756   001244  C035  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1757   001248  C036  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1758   00124C  C037  FFF8         	movff	vfpfcnvrt@cp+2,tblptru
  1759   001250  0008               	tblrd		*
  1760   001252  50F5               	movf	tablat,w,c
  1761   001254  0A68               	xorlw	104
  1762   001256  A4D8               	btfss	status,2,c
  1763   001258  EF30  F009         	goto	u2901
  1764   00125C  EF32  F009         	goto	u2900
  1765   001260                     u2901:
  1766   001260  EF6F  F009         	goto	l3402
  1767   001264                     u2900:
  1768   001264                     
  1769                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1301:      c = 'H
      +                          ';
  1770   001264  0E48               	movlw	72
  1771   001266  6E34               	movwf	vfpfcnvrt@c^0,c
  1772   001268                     l3390:
  1773                           
  1774                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1302:      cp++;
  1775   001268  0E01               	movlw	1
  1776   00126A  2635               	addwf	vfpfcnvrt@cp^0,f,c
  1777   00126C  0E00               	movlw	0
  1778   00126E  2236               	addwfc	(vfpfcnvrt@cp+1)^0,f,c
  1779   001270  0E00               	movlw	0
  1780   001272  2237               	addwfc	(vfpfcnvrt@cp+2)^0,f,c
  1781   001274  EF6F  F009         	goto	l3402
  1782   001278                     l1303:
  1783   001278                     l3394:
  1784                           
  1785                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1350:     c = 'i'
      +                          ;
  1786   001278  0E69               	movlw	105
  1787   00127A  6E34               	movwf	vfpfcnvrt@c^0,c
  1788                           
  1789                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1351:     break;
  1790   00127C  EF6F  F009         	goto	l3402
  1791   001280                     l3396:
  1792                           
  1793                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1353:     c = 0;
  1794   001280  0E00               	movlw	0
  1795   001282  6E34               	movwf	vfpfcnvrt@c^0,c
  1796                           
  1797                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1354:     break;
  1798   001284  EF6F  F009         	goto	l3402
  1799   001288                     l3400:
  1800   001288  5034               	movf	vfpfcnvrt@c^0,w,c
  1801                           
  1802                           ; Switch size 1, requested type "simple"
  1803                           ; Number of cases is 10, Range of values is 88 to 122
  1804                           ; switch strategies available:
  1805                           ; Name         Instructions Cycles
  1806                           ; simple_byte           31    16 (average)
  1807                           ;	Chosen strategy is simple_byte
  1808   00128A  0A58               	xorlw	88	; case 88
  1809   00128C  B4D8               	btfsc	status,2,c
  1810   00128E  EF3C  F009         	goto	l3394
  1811   001292  0A3C               	xorlw	60	; case 100
  1812   001294  B4D8               	btfsc	status,2,c
  1813   001296  EF3C  F009         	goto	l3394
  1814   00129A  0A0C               	xorlw	12	; case 104
  1815   00129C  B4D8               	btfsc	status,2,c
  1816   00129E  EF1C  F009         	goto	l3384
  1817   0012A2  0A01               	xorlw	1	; case 105
  1818   0012A4  B4D8               	btfsc	status,2,c
  1819   0012A6  EF3C  F009         	goto	l3394
  1820   0012AA  0A07               	xorlw	7	; case 110
  1821   0012AC  B4D8               	btfsc	status,2,c
  1822   0012AE  EF3C  F009         	goto	l3394
  1823   0012B2  0A01               	xorlw	1	; case 111
  1824   0012B4  B4D8               	btfsc	status,2,c
  1825   0012B6  EF3C  F009         	goto	l1303
  1826   0012BA  0A1B               	xorlw	27	; case 116
  1827   0012BC  B4D8               	btfsc	status,2,c
  1828   0012BE  EF34  F009         	goto	l3390
  1829   0012C2  0A01               	xorlw	1	; case 117
  1830   0012C4  B4D8               	btfsc	status,2,c
  1831   0012C6  EF3C  F009         	goto	l3394
  1832   0012CA  0A0D               	xorlw	13	; case 120
  1833   0012CC  B4D8               	btfsc	status,2,c
  1834   0012CE  EF3C  F009         	goto	l3394
  1835   0012D2  0A02               	xorlw	2	; case 122
  1836   0012D4  B4D8               	btfsc	status,2,c
  1837   0012D6  EF34  F009         	goto	l3390
  1838   0012DA  EF40  F009         	goto	l3396
  1839   0012DE                     l3402:
  1840                           
  1841                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1842   0012DE  C035  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1843   0012E2  C036  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1844   0012E6  C037  FFF8         	movff	vfpfcnvrt@cp+2,tblptru
  1845   0012EA  0008               	tblrd		*
  1846   0012EC  50F5               	movf	tablat,w,c
  1847   0012EE  0A64               	xorlw	100
  1848   0012F0  B4D8               	btfsc	status,2,c
  1849   0012F2  EF7D  F009         	goto	u2911
  1850   0012F6  EF7F  F009         	goto	u2910
  1851   0012FA                     u2911:
  1852   0012FA  EFD8  F009         	goto	l3418
  1853   0012FE                     u2910:
  1854   0012FE  C035  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1855   001302  C036  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1856   001306  C037  FFF8         	movff	vfpfcnvrt@cp+2,tblptru
  1857   00130A  0008               	tblrd		*
  1858   00130C  50F5               	movf	tablat,w,c
  1859   00130E  0A69               	xorlw	105
  1860   001310  A4D8               	btfss	status,2,c
  1861   001312  EF8D  F009         	goto	u2921
  1862   001316  EF8F  F009         	goto	u2920
  1863   00131A                     u2921:
  1864   00131A  EF15  F00A         	goto	l3426
  1865   00131E                     u2920:
  1866   00131E  EFD8  F009         	goto	l3418
  1867   001322                     l3406:
  1868                           
  1869                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1365:      convar
      +                          g.sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1870   001322  5029               	movf	vfpfcnvrt@ap^0,w,c
  1871   001324  6ED9               	movwf	fsr2l,c
  1872   001326  6ADA               	clrf	fsr2h,c
  1873   001328  0E02               	movlw	2
  1874   00132A  26DF               	addwf	indf2,f,c
  1875   00132C  5CDF               	subwf	indf2,w,c
  1876   00132E  6ED9               	movwf	fsr2l,c
  1877   001330  6ADA               	clrf	fsr2h,c
  1878   001332  CFDE F030          	movff	postinc2,vfpfcnvrt@convarg
  1879   001336  CFDE F031          	movff	postinc2,vfpfcnvrt@convarg+1
  1880                           
  1881                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1366:      break;
  1882   00133A  EFEF  F009         	goto	l3420
  1883   00133E                     l3408:
  1884                           
  1885                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1369:      convar
      +                          g.sint = (vfpf_sint_t)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
  1886   00133E  5029               	movf	vfpfcnvrt@ap^0,w,c
  1887   001340  6ED9               	movwf	fsr2l,c
  1888   001342  6ADA               	clrf	fsr2h,c
  1889   001344  0E02               	movlw	2
  1890   001346  26DF               	addwf	indf2,f,c
  1891   001348  5CDF               	subwf	indf2,w,c
  1892   00134A  6ED9               	movwf	fsr2l,c
  1893   00134C  6ADA               	clrf	fsr2h,c
  1894   00134E  CFDE F030          	movff	postinc2,vfpfcnvrt@convarg
  1895   001352  CFDE F031          	movff	postinc2,vfpfcnvrt@convarg+1
  1896                           
  1897                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1370:      break;
  1898   001356  EFEF  F009         	goto	l3420
  1899   00135A                     l3410:
  1900                           
  1901                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1374:      convar
      +                          g.sint = (vfpf_sint_t)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
  1902   00135A  5029               	movf	vfpfcnvrt@ap^0,w,c
  1903   00135C  6ED9               	movwf	fsr2l,c
  1904   00135E  6ADA               	clrf	fsr2h,c
  1905   001360  50DF               	movf	indf2,w,c
  1906   001362  2ADF               	incf	indf2,f,c
  1907   001364  2ADF               	incf	indf2,f,c
  1908   001366  6ED9               	movwf	fsr2l,c
  1909   001368  6ADA               	clrf	fsr2h,c
  1910   00136A  50DF               	movf	indf2,w,c
  1911   00136C  6E30               	movwf	vfpfcnvrt@convarg^0,c
  1912   00136E  6A31               	clrf	(vfpfcnvrt@convarg+1)^0,c
  1913   001370  BE30               	btfsc	vfpfcnvrt@convarg^0,7,c
  1914   001372  0631               	decf	(vfpfcnvrt@convarg+1)^0,f,c
  1915                           
  1916                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1375:      break;
  1917   001374  EFEF  F009         	goto	l3420
  1918   001378                     l3412:
  1919                           
  1920                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1389:      convar
      +                          g.sint = (vfpf_sint_t)(*(ptrdiff_t *)__va_arg(*(ptrdiff_t **)ap, (ptrdiff_t)0));
  1921   001378  5029               	movf	vfpfcnvrt@ap^0,w,c
  1922   00137A  6ED9               	movwf	fsr2l,c
  1923   00137C  6ADA               	clrf	fsr2h,c
  1924   00137E  0E02               	movlw	2
  1925   001380  26DF               	addwf	indf2,f,c
  1926   001382  5CDF               	subwf	indf2,w,c
  1927   001384  6ED9               	movwf	fsr2l,c
  1928   001386  6ADA               	clrf	fsr2h,c
  1929   001388  CFDE F030          	movff	postinc2,vfpfcnvrt@convarg
  1930   00138C  CFDE F031          	movff	postinc2,vfpfcnvrt@convarg+1
  1931                           
  1932                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1390:      break;
  1933   001390  EFEF  F009         	goto	l3420
  1934   001394                     l3414:
  1935                           
  1936                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1399:      convar
      +                          g.sint = (vfpf_sint_t)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  1937   001394  5029               	movf	vfpfcnvrt@ap^0,w,c
  1938   001396  6ED9               	movwf	fsr2l,c
  1939   001398  6ADA               	clrf	fsr2h,c
  1940   00139A  0E02               	movlw	2
  1941   00139C  26DF               	addwf	indf2,f,c
  1942   00139E  5CDF               	subwf	indf2,w,c
  1943   0013A0  6ED9               	movwf	fsr2l,c
  1944   0013A2  6ADA               	clrf	fsr2h,c
  1945   0013A4  CFDE F030          	movff	postinc2,vfpfcnvrt@convarg
  1946   0013A8  CFDE F031          	movff	postinc2,vfpfcnvrt@convarg+1
  1947                           
  1948                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1400:      break;
  1949   0013AC  EFEF  F009         	goto	l3420
  1950   0013B0                     l3418:
  1951   0013B0  5034               	movf	vfpfcnvrt@c^0,w,c
  1952                           
  1953                           ; Switch size 1, requested type "simple"
  1954                           ; Number of cases is 5, Range of values is 72 to 122
  1955                           ; switch strategies available:
  1956                           ; Name         Instructions Cycles
  1957                           ; simple_byte           16     9 (average)
  1958                           ;	Chosen strategy is simple_byte
  1959   0013B2  0A48               	xorlw	72	; case 72
  1960   0013B4  B4D8               	btfsc	status,2,c
  1961   0013B6  EFAD  F009         	goto	l3410
  1962   0013BA  0A20               	xorlw	32	; case 104
  1963   0013BC  B4D8               	btfsc	status,2,c
  1964   0013BE  EF9F  F009         	goto	l3408
  1965   0013C2  0A01               	xorlw	1	; case 105
  1966   0013C4  B4D8               	btfsc	status,2,c
  1967   0013C6  EF91  F009         	goto	l3406
  1968   0013CA  0A1D               	xorlw	29	; case 116
  1969   0013CC  B4D8               	btfsc	status,2,c
  1970   0013CE  EFBC  F009         	goto	l3412
  1971   0013D2  0A0E               	xorlw	14	; case 122
  1972   0013D4  B4D8               	btfsc	status,2,c
  1973   0013D6  EFCA  F009         	goto	l3414
  1974   0013DA  EFEF  F009         	goto	l3420
  1975   0013DE                     l3420:
  1976                           
  1977                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  1978   0013DE  0E01               	movlw	1
  1979   0013E0  6E2A               	movwf	??_vfpfcnvrt^0,c
  1980   0013E2  0E00               	movlw	0
  1981   0013E4  6E2B               	movwf	(??_vfpfcnvrt+1)^0,c
  1982   0013E6  502A               	movf	??_vfpfcnvrt^0,w,c
  1983   0013E8  2435               	addwf	vfpfcnvrt@cp^0,w,c
  1984   0013EA  6E2C               	movwf	(??_vfpfcnvrt+2)^0,c
  1985   0013EC  502B               	movf	(??_vfpfcnvrt+1)^0,w,c
  1986   0013EE  2036               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  1987   0013F0  6E2D               	movwf	(??_vfpfcnvrt+3)^0,c
  1988   0013F2  0E00               	movlw	0
  1989   0013F4  BE2B               	btfsc	(??_vfpfcnvrt+1)^0,7,c
  1990   0013F6  0EFF               	movlw	255
  1991   0013F8  2037               	addwfc	(vfpfcnvrt@cp+2)^0,w,c
  1992   0013FA  6E2E               	movwf	(??_vfpfcnvrt+4)^0,c
  1993   0013FC  5028               	movf	vfpfcnvrt@fmt^0,w,c
  1994   0013FE  6ED9               	movwf	fsr2l,c
  1995   001400  6ADA               	clrf	fsr2h,c
  1996   001402  C02C  FFDE         	movff	??_vfpfcnvrt+2,postinc2
  1997   001406  C02D  FFDE         	movff	??_vfpfcnvrt+3,postinc2
  1998   00140A  C02E  FFDE         	movff	??_vfpfcnvrt+4,postinc2
  1999   00140E                     
  2000                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          int) dtoa(fp, convarg.sint);
  2001   00140E  C027  F015         	movff	vfpfcnvrt@fp,dtoa@fp
  2002   001412  C030  F016         	movff	vfpfcnvrt@convarg,dtoa@d
  2003   001416  C031  F017         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2004   00141A  EC02  F00E         	call	_dtoa	;wreg free
  2005   00141E  C015  F027         	movff	?_dtoa,?_vfpfcnvrt
  2006   001422  C016  F028         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2007   001426  EF08  F00C         	goto	l1293
  2008   00142A                     l3426:
  2009   00142A  C035  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2010   00142E  C036  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2011   001432  C037  FFF8         	movff	vfpfcnvrt@cp+2,tblptru
  2012   001436  0008               	tblrd		*
  2013   001438  50F5               	movf	tablat,w,c
  2014   00143A  0A78               	xorlw	120
  2015   00143C  B4D8               	btfsc	status,2,c
  2016   00143E  EF23  F00A         	goto	u2931
  2017   001442  EF25  F00A         	goto	u2930
  2018   001446                     u2931:
  2019   001446  EF9E  F00A         	goto	l3446
  2020   00144A                     u2930:
  2021   00144A  C035  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2022   00144E  C036  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2023   001452  C037  FFF8         	movff	vfpfcnvrt@cp+2,tblptru
  2024   001456  0008               	tblrd		*
  2025   001458  50F5               	movf	tablat,w,c
  2026   00145A  0A58               	xorlw	88
  2027   00145C  B4D8               	btfsc	status,2,c
  2028   00145E  EF33  F00A         	goto	u2941
  2029   001462  EF35  F00A         	goto	u2940
  2030   001466                     u2941:
  2031   001466  EF9E  F00A         	goto	l3446
  2032   00146A                     u2940:
  2033   00146A  C035  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2034   00146E  C036  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2035   001472  C037  FFF8         	movff	vfpfcnvrt@cp+2,tblptru
  2036   001476  0008               	tblrd		*
  2037   001478  50F5               	movf	tablat,w,c
  2038   00147A  0A6F               	xorlw	111
  2039   00147C  B4D8               	btfsc	status,2,c
  2040   00147E  EF43  F00A         	goto	u2951
  2041   001482  EF45  F00A         	goto	u2950
  2042   001486                     u2951:
  2043   001486  EF9E  F00A         	goto	l3446
  2044   00148A                     u2950:
  2045   00148A  C035  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2046   00148E  C036  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2047   001492  C037  FFF8         	movff	vfpfcnvrt@cp+2,tblptru
  2048   001496  0008               	tblrd		*
  2049   001498  50F5               	movf	tablat,w,c
  2050   00149A  0A75               	xorlw	117
  2051   00149C  A4D8               	btfss	status,2,c
  2052   00149E  EF53  F00A         	goto	u2961
  2053   0014A2  EF55  F00A         	goto	u2960
  2054   0014A6                     u2961:
  2055   0014A6  EF1C  F00B         	goto	l3466
  2056   0014AA                     u2960:
  2057   0014AA  EF9E  F00A         	goto	l3446
  2058   0014AE                     l3434:
  2059                           
  2060                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1456:      convar
      +                          g.uint = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (un
      +                          signed int)0));
  2061   0014AE  5029               	movf	vfpfcnvrt@ap^0,w,c
  2062   0014B0  6ED9               	movwf	fsr2l,c
  2063   0014B2  6ADA               	clrf	fsr2h,c
  2064   0014B4  0E02               	movlw	2
  2065   0014B6  26DF               	addwf	indf2,f,c
  2066   0014B8  5CDF               	subwf	indf2,w,c
  2067   0014BA  6ED9               	movwf	fsr2l,c
  2068   0014BC  6ADA               	clrf	fsr2h,c
  2069   0014BE  CFDE F030          	movff	postinc2,vfpfcnvrt@convarg
  2070   0014C2  CFDE F031          	movff	postinc2,vfpfcnvrt@convarg+1
  2071                           
  2072                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1457:      break;
  2073   0014C6  EFB5  F00A         	goto	l3448
  2074   0014CA                     l3436:
  2075                           
  2076                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1460:      convar
      +                          g.uint = (vfpf_uint_t)(unsigned short)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (
      +                          unsigned int)0));
  2077   0014CA  5029               	movf	vfpfcnvrt@ap^0,w,c
  2078   0014CC  6ED9               	movwf	fsr2l,c
  2079   0014CE  6ADA               	clrf	fsr2h,c
  2080   0014D0  0E02               	movlw	2
  2081   0014D2  26DF               	addwf	indf2,f,c
  2082   0014D4  5CDF               	subwf	indf2,w,c
  2083   0014D6  6ED9               	movwf	fsr2l,c
  2084   0014D8  6ADA               	clrf	fsr2h,c
  2085   0014DA  CFDE F030          	movff	postinc2,vfpfcnvrt@convarg
  2086   0014DE  CFDE F031          	movff	postinc2,vfpfcnvrt@convarg+1
  2087                           
  2088                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1461:      break;
  2089   0014E2  EFB5  F00A         	goto	l3448
  2090   0014E6                     l3438:
  2091                           
  2092                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1465:      convar
      +                          g.uint = (vfpf_uint_t)(unsigned char)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (u
      +                          nsigned int)0));
  2093   0014E6  5029               	movf	vfpfcnvrt@ap^0,w,c
  2094   0014E8  6ED9               	movwf	fsr2l,c
  2095   0014EA  6ADA               	clrf	fsr2h,c
  2096   0014EC  50DF               	movf	indf2,w,c
  2097   0014EE  2ADF               	incf	indf2,f,c
  2098   0014F0  2ADF               	incf	indf2,f,c
  2099   0014F2  6ED9               	movwf	fsr2l,c
  2100   0014F4  6ADA               	clrf	fsr2h,c
  2101   0014F6  50DF               	movf	indf2,w,c
  2102   0014F8  6E2A               	movwf	??_vfpfcnvrt^0,c
  2103   0014FA  502A               	movf	??_vfpfcnvrt^0,w,c
  2104   0014FC  6E30               	movwf	vfpfcnvrt@convarg^0,c
  2105   0014FE  6A31               	clrf	(vfpfcnvrt@convarg+1)^0,c
  2106                           
  2107                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1466:      break;
  2108   001500  EFB5  F00A         	goto	l3448
  2109   001504                     l3440:
  2110                           
  2111                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1480:      convar
      +                          g.uint = (vfpf_uint_t)(*(ptrdiff_t *)__va_arg(*(ptrdiff_t **)ap, (ptrdiff_t)0));
  2112   001504  5029               	movf	vfpfcnvrt@ap^0,w,c
  2113   001506  6ED9               	movwf	fsr2l,c
  2114   001508  6ADA               	clrf	fsr2h,c
  2115   00150A  0E02               	movlw	2
  2116   00150C  26DF               	addwf	indf2,f,c
  2117   00150E  5CDF               	subwf	indf2,w,c
  2118   001510  6ED9               	movwf	fsr2l,c
  2119   001512  6ADA               	clrf	fsr2h,c
  2120   001514  CFDE F030          	movff	postinc2,vfpfcnvrt@convarg
  2121   001518  CFDE F031          	movff	postinc2,vfpfcnvrt@convarg+1
  2122                           
  2123                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1481:      break;
  2124   00151C  EFB5  F00A         	goto	l3448
  2125   001520                     l3442:
  2126                           
  2127                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1490:      convar
      +                          g.uint = (vfpf_uint_t)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  2128   001520  5029               	movf	vfpfcnvrt@ap^0,w,c
  2129   001522  6ED9               	movwf	fsr2l,c
  2130   001524  6ADA               	clrf	fsr2h,c
  2131   001526  0E02               	movlw	2
  2132   001528  26DF               	addwf	indf2,f,c
  2133   00152A  5CDF               	subwf	indf2,w,c
  2134   00152C  6ED9               	movwf	fsr2l,c
  2135   00152E  6ADA               	clrf	fsr2h,c
  2136   001530  CFDE F030          	movff	postinc2,vfpfcnvrt@convarg
  2137   001534  CFDE F031          	movff	postinc2,vfpfcnvrt@convarg+1
  2138                           
  2139                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1491:      break;
  2140   001538  EFB5  F00A         	goto	l3448
  2141   00153C                     l3446:
  2142   00153C  5034               	movf	vfpfcnvrt@c^0,w,c
  2143                           
  2144                           ; Switch size 1, requested type "simple"
  2145                           ; Number of cases is 5, Range of values is 72 to 122
  2146                           ; switch strategies available:
  2147                           ; Name         Instructions Cycles
  2148                           ; simple_byte           16     9 (average)
  2149                           ;	Chosen strategy is simple_byte
  2150   00153E  0A48               	xorlw	72	; case 72
  2151   001540  B4D8               	btfsc	status,2,c
  2152   001542  EF73  F00A         	goto	l3438
  2153   001546  0A20               	xorlw	32	; case 104
  2154   001548  B4D8               	btfsc	status,2,c
  2155   00154A  EF65  F00A         	goto	l3436
  2156   00154E  0A01               	xorlw	1	; case 105
  2157   001550  B4D8               	btfsc	status,2,c
  2158   001552  EF57  F00A         	goto	l3434
  2159   001556  0A1D               	xorlw	29	; case 116
  2160   001558  B4D8               	btfsc	status,2,c
  2161   00155A  EF82  F00A         	goto	l3440
  2162   00155E  0A0E               	xorlw	14	; case 122
  2163   001560  B4D8               	btfsc	status,2,c
  2164   001562  EF90  F00A         	goto	l3442
  2165   001566  EFB5  F00A         	goto	l3448
  2166   00156A                     l3448:
  2167                           
  2168                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
  2169   00156A  0E01               	movlw	1
  2170   00156C  6E2A               	movwf	??_vfpfcnvrt^0,c
  2171   00156E  0E00               	movlw	0
  2172   001570  6E2B               	movwf	(??_vfpfcnvrt+1)^0,c
  2173   001572  502A               	movf	??_vfpfcnvrt^0,w,c
  2174   001574  2435               	addwf	vfpfcnvrt@cp^0,w,c
  2175   001576  6E2C               	movwf	(??_vfpfcnvrt+2)^0,c
  2176   001578  502B               	movf	(??_vfpfcnvrt+1)^0,w,c
  2177   00157A  2036               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  2178   00157C  6E2D               	movwf	(??_vfpfcnvrt+3)^0,c
  2179   00157E  0E00               	movlw	0
  2180   001580  BE2B               	btfsc	(??_vfpfcnvrt+1)^0,7,c
  2181   001582  0EFF               	movlw	255
  2182   001584  2037               	addwfc	(vfpfcnvrt@cp+2)^0,w,c
  2183   001586  6E2E               	movwf	(??_vfpfcnvrt+4)^0,c
  2184   001588  5028               	movf	vfpfcnvrt@fmt^0,w,c
  2185   00158A  6ED9               	movwf	fsr2l,c
  2186   00158C  6ADA               	clrf	fsr2h,c
  2187   00158E  C02C  FFDE         	movff	??_vfpfcnvrt+2,postinc2
  2188   001592  C02D  FFDE         	movff	??_vfpfcnvrt+3,postinc2
  2189   001596  C02E  FFDE         	movff	??_vfpfcnvrt+4,postinc2
  2190                           
  2191                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
  2192   00159A  EF02  F00B         	goto	l3464
  2193   00159E                     l3450:
  2194                           
  2195                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1519:      return
      +                           (int) otoa(fp, convarg.uint);
  2196   00159E  C027  F015         	movff	vfpfcnvrt@fp,otoa@fp
  2197   0015A2  C030  F016         	movff	vfpfcnvrt@convarg,otoa@d
  2198   0015A6  C031  F017         	movff	vfpfcnvrt@convarg+1,otoa@d+1
  2199   0015AA  ECEC  F00E         	call	_otoa	;wreg free
  2200   0015AE  C015  F027         	movff	?_otoa,?_vfpfcnvrt
  2201   0015B2  C016  F028         	movff	?_otoa+1,?_vfpfcnvrt+1
  2202   0015B6  EF08  F00C         	goto	l1293
  2203   0015BA                     l3454:
  2204                           
  2205                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1542:      return
      +                           (int) utoa(fp, convarg.uint);
  2206   0015BA  C027  F015         	movff	vfpfcnvrt@fp,utoa@fp
  2207   0015BE  C030  F016         	movff	vfpfcnvrt@convarg,utoa@d
  2208   0015C2  C031  F017         	movff	vfpfcnvrt@convarg+1,utoa@d+1
  2209   0015C6  ECC8  F010         	call	_utoa	;wreg free
  2210   0015CA  C015  F027         	movff	?_utoa,?_vfpfcnvrt
  2211   0015CE  C016  F028         	movff	?_utoa+1,?_vfpfcnvrt+1
  2212   0015D2  EF08  F00C         	goto	l1293
  2213   0015D6                     l3458:
  2214                           
  2215                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1586:      return
      +                           (int) xtoa(fp,convarg.uint,*cp);
  2216   0015D6  C027  F015         	movff	vfpfcnvrt@fp,xtoa@fp
  2217   0015DA  C030  F016         	movff	vfpfcnvrt@convarg,xtoa@d
  2218   0015DE  C031  F017         	movff	vfpfcnvrt@convarg+1,xtoa@d+1
  2219   0015E2  C035  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2220   0015E6  C036  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2221   0015EA  C037  FFF8         	movff	vfpfcnvrt@cp+2,tblptru
  2222   0015EE  0008               	tblrd		*
  2223   0015F0  CFF5 F018          	movff	tablat,xtoa@x
  2224   0015F4  EC09  F00C         	call	_xtoa	;wreg free
  2225   0015F8  C015  F027         	movff	?_xtoa,?_vfpfcnvrt
  2226   0015FC  C016  F028         	movff	?_xtoa+1,?_vfpfcnvrt+1
  2227   001600  EF08  F00C         	goto	l1293
  2228   001604                     l3464:
  2229   001604  C035  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2230   001608  C036  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2231   00160C  C037  FFF8         	movff	vfpfcnvrt@cp+2,tblptru
  2232   001610  0008               	tblrd		*
  2233   001612  50F5               	movf	tablat,w,c
  2234                           
  2235                           ; Switch size 1, requested type "simple"
  2236                           ; Number of cases is 4, Range of values is 88 to 120
  2237                           ; switch strategies available:
  2238                           ; Name         Instructions Cycles
  2239                           ; simple_byte           13     7 (average)
  2240                           ;	Chosen strategy is simple_byte
  2241   001614  0A58               	xorlw	88	; case 88
  2242   001616  B4D8               	btfsc	status,2,c
  2243   001618  EFEB  F00A         	goto	l3458
  2244   00161C  0A37               	xorlw	55	; case 111
  2245   00161E  B4D8               	btfsc	status,2,c
  2246   001620  EFCF  F00A         	goto	l3450
  2247   001624  0A1A               	xorlw	26	; case 117
  2248   001626  B4D8               	btfsc	status,2,c
  2249   001628  EFDD  F00A         	goto	l3454
  2250   00162C  0A0D               	xorlw	13	; case 120
  2251   00162E  B4D8               	btfsc	status,2,c
  2252   001630  EFEB  F00A         	goto	l3458
  2253   001634  EF1C  F00B         	goto	l3466
  2254   001638                     l3466:
  2255                           
  2256                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1595:   if (*cp =
      +                          = 'n') {
  2257   001638  C035  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2258   00163C  C036  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2259   001640  C037  FFF8         	movff	vfpfcnvrt@cp+2,tblptru
  2260   001644  0008               	tblrd		*
  2261   001646  50F5               	movf	tablat,w,c
  2262   001648  0A6E               	xorlw	110
  2263   00164A  A4D8               	btfss	status,2,c
  2264   00164C  EF2A  F00B         	goto	u2971
  2265   001650  EF2C  F00B         	goto	u2970
  2266   001654                     u2971:
  2267   001654  EFB1  F00B         	goto	l3490
  2268   001658                     u2970:
  2269   001658  EF7C  F00B         	goto	l3482
  2270   00165C                     l3470:
  2271                           
  2272                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1599:      *(*(in
      +                          t* *)__va_arg(*(int* **)ap, (int*)0)) = (int) nout;
  2273   00165C  5029               	movf	vfpfcnvrt@ap^0,w,c
  2274   00165E  6ED9               	movwf	fsr2l,c
  2275   001660  6ADA               	clrf	fsr2h,c
  2276   001662  50DF               	movf	indf2,w,c
  2277   001664  2ADF               	incf	indf2,f,c
  2278   001666  6ED9               	movwf	fsr2l,c
  2279   001668  6ADA               	clrf	fsr2h,c
  2280   00166A  50DF               	movf	indf2,w,c
  2281   00166C  6ED9               	movwf	fsr2l,c
  2282   00166E  6ADA               	clrf	fsr2h,c
  2283   001670  C06C  FFDE         	movff	_nout,postinc2
  2284   001674  C06D  FFDD         	movff	_nout+1,postdec2
  2285                           
  2286                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1600:      break;
  2287   001678  EF93  F00B         	goto	l3484
  2288   00167C                     l3472:
  2289                           
  2290                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1603:      *(*(sh
      +                          ort* *)__va_arg(*(short* **)ap, (short*)0)) = (short) nout;
  2291   00167C  5029               	movf	vfpfcnvrt@ap^0,w,c
  2292   00167E  6ED9               	movwf	fsr2l,c
  2293   001680  6ADA               	clrf	fsr2h,c
  2294   001682  50DF               	movf	indf2,w,c
  2295   001684  2ADF               	incf	indf2,f,c
  2296   001686  6ED9               	movwf	fsr2l,c
  2297   001688  6ADA               	clrf	fsr2h,c
  2298   00168A  50DF               	movf	indf2,w,c
  2299   00168C  6ED9               	movwf	fsr2l,c
  2300   00168E  6ADA               	clrf	fsr2h,c
  2301   001690  C06C  FFDE         	movff	_nout,postinc2
  2302   001694  C06D  FFDD         	movff	_nout+1,postdec2
  2303                           
  2304                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1604:      break;
  2305   001698  EF93  F00B         	goto	l3484
  2306   00169C                     l3474:
  2307                           
  2308                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1608:      *(*(si
      +                          gned char* *)__va_arg(*(signed char* **)ap, (signed char*)0)) = (signed char) nout;
  2309   00169C  5029               	movf	vfpfcnvrt@ap^0,w,c
  2310   00169E  6ED9               	movwf	fsr2l,c
  2311   0016A0  6ADA               	clrf	fsr2h,c
  2312   0016A2  50DF               	movf	indf2,w,c
  2313   0016A4  2ADF               	incf	indf2,f,c
  2314   0016A6  6ED9               	movwf	fsr2l,c
  2315   0016A8  6ADA               	clrf	fsr2h,c
  2316   0016AA  50DF               	movf	indf2,w,c
  2317   0016AC  6ED9               	movwf	fsr2l,c
  2318   0016AE  6ADA               	clrf	fsr2h,c
  2319   0016B0  C06C  FFDF         	movff	_nout,indf2
  2320                           
  2321                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1609:      break;
  2322   0016B4  EF93  F00B         	goto	l3484
  2323   0016B8                     l3476:
  2324                           
  2325                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1623:      *(*(pt
      +                          rdiff_t* *)__va_arg(*(ptrdiff_t* **)ap, (ptrdiff_t*)0)) = (ptrdiff_t) nout;
  2326   0016B8  5029               	movf	vfpfcnvrt@ap^0,w,c
  2327   0016BA  6ED9               	movwf	fsr2l,c
  2328   0016BC  6ADA               	clrf	fsr2h,c
  2329   0016BE  50DF               	movf	indf2,w,c
  2330   0016C0  2ADF               	incf	indf2,f,c
  2331   0016C2  6ED9               	movwf	fsr2l,c
  2332   0016C4  6ADA               	clrf	fsr2h,c
  2333   0016C6  50DF               	movf	indf2,w,c
  2334   0016C8  6ED9               	movwf	fsr2l,c
  2335   0016CA  6ADA               	clrf	fsr2h,c
  2336   0016CC  C06C  FFDE         	movff	_nout,postinc2
  2337   0016D0  C06D  FFDD         	movff	_nout+1,postdec2
  2338                           
  2339                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1624:      break;
  2340   0016D4  EF93  F00B         	goto	l3484
  2341   0016D8                     l3478:
  2342                           
  2343                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1633:      *(*(si
      +                          ze_t* *)__va_arg(*(size_t* **)ap, (size_t*)0)) = (size_t) nout;
  2344   0016D8  5029               	movf	vfpfcnvrt@ap^0,w,c
  2345   0016DA  6ED9               	movwf	fsr2l,c
  2346   0016DC  6ADA               	clrf	fsr2h,c
  2347   0016DE  50DF               	movf	indf2,w,c
  2348   0016E0  2ADF               	incf	indf2,f,c
  2349   0016E2  6ED9               	movwf	fsr2l,c
  2350   0016E4  6ADA               	clrf	fsr2h,c
  2351   0016E6  50DF               	movf	indf2,w,c
  2352   0016E8  6ED9               	movwf	fsr2l,c
  2353   0016EA  6ADA               	clrf	fsr2h,c
  2354   0016EC  C06C  FFDE         	movff	_nout,postinc2
  2355   0016F0  C06D  FFDD         	movff	_nout+1,postdec2
  2356                           
  2357                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1634:      break;
  2358   0016F4  EF93  F00B         	goto	l3484
  2359   0016F8                     l3482:
  2360   0016F8  5034               	movf	vfpfcnvrt@c^0,w,c
  2361                           
  2362                           ; Switch size 1, requested type "simple"
  2363                           ; Number of cases is 5, Range of values is 72 to 122
  2364                           ; switch strategies available:
  2365                           ; Name         Instructions Cycles
  2366                           ; simple_byte           16     9 (average)
  2367                           ;	Chosen strategy is simple_byte
  2368   0016FA  0A48               	xorlw	72	; case 72
  2369   0016FC  B4D8               	btfsc	status,2,c
  2370   0016FE  EF4E  F00B         	goto	l3474
  2371   001702  0A20               	xorlw	32	; case 104
  2372   001704  B4D8               	btfsc	status,2,c
  2373   001706  EF3E  F00B         	goto	l3472
  2374   00170A  0A01               	xorlw	1	; case 105
  2375   00170C  B4D8               	btfsc	status,2,c
  2376   00170E  EF2E  F00B         	goto	l3470
  2377   001712  0A1D               	xorlw	29	; case 116
  2378   001714  B4D8               	btfsc	status,2,c
  2379   001716  EF5C  F00B         	goto	l3476
  2380   00171A  0A0E               	xorlw	14	; case 122
  2381   00171C  B4D8               	btfsc	status,2,c
  2382   00171E  EF6C  F00B         	goto	l3478
  2383   001722  EF93  F00B         	goto	l3484
  2384   001726                     l3484:
  2385                           
  2386                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1640:    *fmt = c
      +                          p+1;
  2387   001726  0E01               	movlw	1
  2388   001728  6E2A               	movwf	??_vfpfcnvrt^0,c
  2389   00172A  0E00               	movlw	0
  2390   00172C  6E2B               	movwf	(??_vfpfcnvrt+1)^0,c
  2391   00172E  502A               	movf	??_vfpfcnvrt^0,w,c
  2392   001730  2435               	addwf	vfpfcnvrt@cp^0,w,c
  2393   001732  6E2C               	movwf	(??_vfpfcnvrt+2)^0,c
  2394   001734  502B               	movf	(??_vfpfcnvrt+1)^0,w,c
  2395   001736  2036               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  2396   001738  6E2D               	movwf	(??_vfpfcnvrt+3)^0,c
  2397   00173A  0E00               	movlw	0
  2398   00173C  BE2B               	btfsc	(??_vfpfcnvrt+1)^0,7,c
  2399   00173E  0EFF               	movlw	255
  2400   001740  2037               	addwfc	(vfpfcnvrt@cp+2)^0,w,c
  2401   001742  6E2E               	movwf	(??_vfpfcnvrt+4)^0,c
  2402   001744  5028               	movf	vfpfcnvrt@fmt^0,w,c
  2403   001746  6ED9               	movwf	fsr2l,c
  2404   001748  6ADA               	clrf	fsr2h,c
  2405   00174A  C02C  FFDE         	movff	??_vfpfcnvrt+2,postinc2
  2406   00174E  C02D  FFDE         	movff	??_vfpfcnvrt+3,postinc2
  2407   001752  C02E  FFDE         	movff	??_vfpfcnvrt+4,postinc2
  2408   001756                     l3486:
  2409                           
  2410                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1641:    return (
      +                          int) 0;
  2411   001756  0E00               	movlw	0
  2412   001758  6E28               	movwf	(?_vfpfcnvrt+1)^0,c
  2413   00175A  0E00               	movlw	0
  2414   00175C  6E27               	movwf	?_vfpfcnvrt^0,c
  2415   00175E  EF08  F00C         	goto	l1293
  2416   001762                     l3490:
  2417                           
  2418                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1798:         if 
      +                          ((*fmt)[0] == '%') {
  2419   001762  5028               	movf	vfpfcnvrt@fmt^0,w,c
  2420   001764  6ED9               	movwf	fsr2l,c
  2421   001766  6ADA               	clrf	fsr2h,c
  2422   001768  CFDE F02A          	movff	postinc2,??_vfpfcnvrt
  2423   00176C  CFDE F02B          	movff	postinc2,??_vfpfcnvrt+1
  2424   001770  CFDE F02C          	movff	postinc2,??_vfpfcnvrt+2
  2425   001774  C02A  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2426   001778  C02B  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2427   00177C  C02C  FFF8         	movff	??_vfpfcnvrt+2,tblptru
  2428   001780  0008               	tblrd		*
  2429   001782  50F5               	movf	tablat,w,c
  2430   001784  0A25               	xorlw	37
  2431   001786  A4D8               	btfss	status,2,c
  2432   001788  EFC8  F00B         	goto	u2981
  2433   00178C  EFCA  F00B         	goto	u2980
  2434   001790                     u2981:
  2435   001790  EFDF  F00B         	goto	l3500
  2436   001794                     u2980:
  2437   001794                     
  2438                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1799:            
      +                           ++*fmt;
  2439   001794  5028               	movf	vfpfcnvrt@fmt^0,w,c
  2440   001796  6ED9               	movwf	fsr2l,c
  2441   001798  6ADA               	clrf	fsr2h,c
  2442   00179A  2ADE               	incf	postinc2,f,c
  2443   00179C  0E00               	movlw	0
  2444   00179E  22DE               	addwfc	postinc2,f,c
  2445   0017A0  22DE               	addwfc	postinc2,f,c
  2446   0017A2                     
  2447                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1800:            
      +                           fputc((int)'%', fp);
  2448   0017A2  0E00               	movlw	0
  2449   0017A4  6E02               	movwf	(fputc@c+1)^0,c
  2450   0017A6  0E25               	movlw	37
  2451   0017A8  6E01               	movwf	fputc@c^0,c
  2452   0017AA  C027  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2453   0017AE  ECCD  F013         	call	_fputc	;wreg free
  2454   0017B2                     l3496:
  2455                           
  2456                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1801:            
      +                           return (int) 1;
  2457   0017B2  0E00               	movlw	0
  2458   0017B4  6E28               	movwf	(?_vfpfcnvrt+1)^0,c
  2459   0017B6  0E01               	movlw	1
  2460   0017B8  6E27               	movwf	?_vfpfcnvrt^0,c
  2461   0017BA  EF08  F00C         	goto	l1293
  2462   0017BE                     l3500:
  2463                           
  2464                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2465   0017BE  5028               	movf	vfpfcnvrt@fmt^0,w,c
  2466   0017C0  6ED9               	movwf	fsr2l,c
  2467   0017C2  6ADA               	clrf	fsr2h,c
  2468   0017C4  2ADE               	incf	postinc2,f,c
  2469   0017C6  0E00               	movlw	0
  2470   0017C8  22DE               	addwfc	postinc2,f,c
  2471   0017CA  22DE               	addwfc	postinc2,f,c
  2472   0017CC  EFAB  F00B         	goto	l3486
  2473   0017D0                     l3506:
  2474                           
  2475                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2476   0017D0  5028               	movf	vfpfcnvrt@fmt^0,w,c
  2477   0017D2  6ED9               	movwf	fsr2l,c
  2478   0017D4  6ADA               	clrf	fsr2h,c
  2479   0017D6  CFDE F02A          	movff	postinc2,??_vfpfcnvrt
  2480   0017DA  CFDE F02B          	movff	postinc2,??_vfpfcnvrt+1
  2481   0017DE  CFDE F02C          	movff	postinc2,??_vfpfcnvrt+2
  2482   0017E2  C02A  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2483   0017E6  C02B  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2484   0017EA  C02C  FFF8         	movff	??_vfpfcnvrt+2,tblptru
  2485   0017EE  0008               	tblrd		*
  2486   0017F0  50F5               	movf	tablat,w,c
  2487   0017F2  6E01               	movwf	fputc@c^0,c
  2488   0017F4  6A02               	clrf	(fputc@c+1)^0,c
  2489   0017F6  C027  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2490   0017FA  ECCD  F013         	call	_fputc	;wreg free
  2491   0017FE                     
  2492                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1812:     ++*fmt;
  2493   0017FE  5028               	movf	vfpfcnvrt@fmt^0,w,c
  2494   001800  6ED9               	movwf	fsr2l,c
  2495   001802  6ADA               	clrf	fsr2h,c
  2496   001804  2ADE               	incf	postinc2,f,c
  2497   001806  0E00               	movlw	0
  2498   001808  22DE               	addwfc	postinc2,f,c
  2499   00180A  22DE               	addwfc	postinc2,f,c
  2500   00180C  EFD9  F00B         	goto	l3496
  2501   001810                     l1293:
  2502   001810  0012               	return		;funcret
  2503   001812                     __end_of_vfpfcnvrt:
  2504                           	callstack 0
  2505                           
  2506 ;; *************** function _xtoa *****************
  2507 ;; Defined at:
  2508 ;;		line 1052 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  2509 ;; Parameters:    Size  Location     Type
  2510 ;;  fp              1   20[COMRAM] PTR struct _IO_FILE
  2511 ;;		 -> sprintf@f(12), 
  2512 ;;  d               2   21[COMRAM] unsigned int 
  2513 ;;  x               1   23[COMRAM] unsigned char 
  2514 ;; Auto vars:     Size  Location     Type
  2515 ;;  i               2   36[COMRAM] int 
  2516 ;;  w               2   32[COMRAM] int 
  2517 ;;  p               2   30[COMRAM] int 
  2518 ;;  c               1   35[COMRAM] unsigned char 
  2519 ;;  d_nonzero       1   34[COMRAM] _Bool 
  2520 ;;  a               1   29[COMRAM] unsigned char 
  2521 ;; Return value:  Size  Location     Type
  2522 ;;                  2   20[COMRAM] int 
  2523 ;; Registers used:
  2524 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2525 ;; Tracked objects:
  2526 ;;		On entry : 0/0
  2527 ;;		On exit  : 0/0
  2528 ;;		Unchanged: 0/0
  2529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2530 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2531 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2532 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2533 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2534 ;;Total ram usage:       18 bytes
  2535 ;; Hardware stack levels used: 1
  2536 ;; Hardware stack levels required when called: 6
  2537 ;; This function calls:
  2538 ;;		_pad
  2539 ;; This function is called by:
  2540 ;;		_vfpfcnvrt
  2541 ;; This function uses a non-reentrant model
  2542 ;;
  2543                           
  2544                           	psect	text5
  2545   001812                     __ptext5:
  2546                           	callstack 0
  2547   001812                     _xtoa:
  2548                           	callstack 20
  2549   001812                     
  2550                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1076:     if (!(p
      +                          rec < 0)) {
  2551   001812  BE71               	btfsc	(_prec+1)^0,7,c
  2552   001814  EF0E  F00C         	goto	u2591
  2553   001818  EF10  F00C         	goto	u2590
  2554   00181C                     u2591:
  2555   00181C  EF11  F00C         	goto	l3208
  2556   001820                     u2590:
  2557   001820                     
  2558                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1077:         fla
      +                          gs &= ~(1 << 1);
  2559   001820  9274               	bcf	_flags^0,1,c
  2560   001822                     l3208:
  2561                           
  2562                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1080:     p = (0 
      +                          <= prec) ? prec : 1;
  2563   001822  BE71               	btfsc	(_prec+1)^0,7,c
  2564   001824  EF18  F00C         	goto	u2600
  2565   001828  EF16  F00C         	goto	u2601
  2566   00182C                     u2601:
  2567   00182C  EF1E  F00C         	goto	l1248
  2568   001830                     u2600:
  2569   001830  0E00               	movlw	0
  2570   001832  6E20               	movwf	(xtoa@p+1)^0,c
  2571   001834  0E01               	movlw	1
  2572   001836  6E1F               	movwf	xtoa@p^0,c
  2573   001838  EF22  F00C         	goto	l1250
  2574   00183C                     l1248:
  2575   00183C  C070  F01F         	movff	_prec,xtoa@p
  2576   001840  C071  F020         	movff	_prec+1,xtoa@p+1
  2577   001844                     l1250:
  2578                           
  2579                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1082:     w = wid
      +                          th;
  2580   001844  C06E  F021         	movff	_width,xtoa@w
  2581   001848  C06F  F022         	movff	_width+1,xtoa@w+1
  2582   00184C                     
  2583                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1084:  d_nonzero 
      +                          = d != 0;
  2584   00184C  5016               	movf	xtoa@d^0,w,c
  2585   00184E  1017               	iorwf	(xtoa@d+1)^0,w,c
  2586   001850  A4D8               	btfss	status,2,c
  2587   001852  EF2D  F00C         	goto	u2611
  2588   001856  EF30  F00C         	goto	u2610
  2589   00185A                     u2611:
  2590   00185A  0E01               	movlw	1
  2591   00185C  EF31  F00C         	goto	u2620
  2592   001860                     u2610:
  2593   001860  0E00               	movlw	0
  2594   001862                     u2620:
  2595   001862  6E23               	movwf	xtoa@d_nonzero^0,c
  2596   001864                     
  2597                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1085:     if ((fl
      +                          ags & (1 << 4)) && d_nonzero) {
  2598   001864  A874               	btfss	_flags^0,4,c
  2599   001866  EF37  F00C         	goto	u2631
  2600   00186A  EF39  F00C         	goto	u2630
  2601   00186E                     u2631:
  2602   00186E  EF45  F00C         	goto	l1251
  2603   001872                     u2630:
  2604   001872  5023               	movf	xtoa@d_nonzero^0,w,c
  2605   001874  B4D8               	btfsc	status,2,c
  2606   001876  EF3F  F00C         	goto	u2641
  2607   00187A  EF41  F00C         	goto	u2640
  2608   00187E                     u2641:
  2609   00187E  EF45  F00C         	goto	l1251
  2610   001882                     u2640:
  2611   001882                     
  2612                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1086:         w -
      +                          = 2;
  2613   001882  0EFE               	movlw	254
  2614   001884  2621               	addwf	xtoa@w^0,f,c
  2615   001886  0EFF               	movlw	255
  2616   001888  2222               	addwfc	(xtoa@w+1)^0,f,c
  2617   00188A                     l1251:
  2618                           
  2619                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1091:  a = x == '
      +                          x' ? 'a' : 'A';
  2620   00188A  0E78               	movlw	120
  2621   00188C  1818               	xorwf	xtoa@x^0,w,c
  2622   00188E  B4D8               	btfsc	status,2,c
  2623   001890  EF4C  F00C         	goto	u2651
  2624   001894  EF4E  F00C         	goto	u2650
  2625   001898                     u2651:
  2626   001898  EF54  F00C         	goto	l3222
  2627   00189C                     u2650:
  2628   00189C  0E00               	movlw	0
  2629   00189E  6E1D               	movwf	(_xtoa$1603+1)^0,c
  2630   0018A0  0E41               	movlw	65
  2631   0018A2  6E1C               	movwf	_xtoa$1603^0,c
  2632   0018A4  EF58  F00C         	goto	l3224
  2633   0018A8                     l3222:
  2634   0018A8  0E00               	movlw	0
  2635   0018AA  6E1D               	movwf	(_xtoa$1603+1)^0,c
  2636   0018AC  0E61               	movlw	97
  2637   0018AE  6E1C               	movwf	_xtoa$1603^0,c
  2638   0018B0                     l3224:
  2639   0018B0  C01C  F01E         	movff	_xtoa$1603,xtoa@a
  2640                           
  2641                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1095:     i = siz
      +                          eof(dbuf) - 1;
  2642   0018B4  0E00               	movlw	0
  2643   0018B6  6E26               	movwf	(xtoa@i+1)^0,c
  2644   0018B8  0E1F               	movlw	31
  2645   0018BA  6E25               	movwf	xtoa@i^0,c
  2646   0018BC                     
  2647                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1096:     dbuf[i]
      +                           = '\0';
  2648   0018BC  0E00               	movlw	0
  2649   0018BE  0100               	movlb	0	; () banked
  2650   0018C0  6F9F               	movwf	(_dbuf+31)& (0+255),b
  2651                           
  2652                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1097:     while (
      +                          !(i < 2) && (d != 0
  2653   0018C2  EF94  F00C         	goto	l3246
  2654   0018C6                     l3228:
  2655                           
  2656                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1106:     )) {;C:
      +                          \Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1107:         --i;
  2657   0018C6  0625               	decf	xtoa@i^0,f,c
  2658   0018C8  A0D8               	btfss	status,0,c
  2659   0018CA  0626               	decf	(xtoa@i+1)^0,f,c
  2660   0018CC                     
  2661                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1108:         c =
      +                           d & 0x0f;
  2662   0018CC  5016               	movf	xtoa@d^0,w,c
  2663   0018CE  0B0F               	andlw	15
  2664   0018D0  6E24               	movwf	xtoa@c^0,c
  2665   0018D2                     
  2666                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1109:   if (c < 1
      +                          0) {
  2667   0018D2  0E0A               	movlw	10
  2668   0018D4  6024               	cpfslt	xtoa@c^0,c
  2669   0018D6  EF6F  F00C         	goto	u2661
  2670   0018DA  EF71  F00C         	goto	u2660
  2671   0018DE                     u2661:
  2672   0018DE  EF75  F00C         	goto	l3236
  2673   0018E2                     u2660:
  2674   0018E2                     
  2675                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1110:    c += '0'
      +                          ;
  2676   0018E2  0E30               	movlw	48
  2677   0018E4  2624               	addwf	xtoa@c^0,f,c
  2678                           
  2679                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1111:   }
  2680   0018E6  EF78  F00C         	goto	l3238
  2681   0018EA                     l3236:
  2682                           
  2683                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1114:    c += a -
      +                           10;
  2684   0018EA  501E               	movf	xtoa@a^0,w,c
  2685   0018EC  0FF6               	addlw	246
  2686   0018EE  2624               	addwf	xtoa@c^0,f,c
  2687   0018F0                     l3238:
  2688                           
  2689                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1121:   dbuf[i] =
      +                           c;
  2690   0018F0  5025               	movf	xtoa@i^0,w,c
  2691   0018F2  0F80               	addlw	low _dbuf
  2692   0018F4  6ED9               	movwf	fsr2l,c
  2693   0018F6  6ADA               	clrf	fsr2h,c
  2694   0018F8  C024  FFDF         	movff	xtoa@c,indf2
  2695   0018FC                     
  2696                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1123:         --p
      +                          ;
  2697   0018FC  061F               	decf	xtoa@p^0,f,c
  2698   0018FE  A0D8               	btfss	status,0,c
  2699   001900  0620               	decf	(xtoa@p+1)^0,f,c
  2700   001902                     
  2701                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1127:         --w
      +                          ;
  2702   001902  0621               	decf	xtoa@w^0,f,c
  2703   001904  A0D8               	btfss	status,0,c
  2704   001906  0622               	decf	(xtoa@w+1)^0,f,c
  2705   001908                     
  2706                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1128:         d =
      +                           d >> 4;
  2707   001908  C016  F019         	movff	xtoa@d,??_xtoa
  2708   00190C  C017  F01A         	movff	xtoa@d+1,??_xtoa+1
  2709   001910  0E04               	movlw	4
  2710   001912  6E1B               	movwf	(??_xtoa+2)^0,c
  2711   001914                     u2675:
  2712   001914  90D8               	bcf	status,0,c
  2713   001916  321A               	rrcf	(??_xtoa+1)^0,f,c
  2714   001918  3219               	rrcf	??_xtoa^0,f,c
  2715   00191A  2E1B               	decfsz	(??_xtoa+2)^0,f,c
  2716   00191C  EF8A  F00C         	goto	u2675
  2717   001920  C019  F016         	movff	??_xtoa,xtoa@d
  2718   001924  C01A  F017         	movff	??_xtoa+1,xtoa@d+1
  2719   001928                     l3246:
  2720                           
  2721                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1097:     while (
      +                          !(i < 2) && (d != 0
  2722   001928  BE26               	btfsc	(xtoa@i+1)^0,7,c
  2723   00192A  EFA0  F00C         	goto	u2681
  2724   00192E  5026               	movf	(xtoa@i+1)^0,w,c
  2725   001930  E109               	bnz	u2680
  2726   001932  0E02               	movlw	2
  2727   001934  5C25               	subwf	xtoa@i^0,w,c
  2728   001936  A0D8               	btfss	status,0,c
  2729   001938  EFA0  F00C         	goto	u2681
  2730   00193C  EFA2  F00C         	goto	u2680
  2731   001940                     u2681:
  2732   001940  EFCC  F00C         	goto	l1264
  2733   001944                     u2680:
  2734   001944  5016               	movf	xtoa@d^0,w,c
  2735   001946  1017               	iorwf	(xtoa@d+1)^0,w,c
  2736   001948  A4D8               	btfss	status,2,c
  2737   00194A  EFA9  F00C         	goto	u2691
  2738   00194E  EFAB  F00C         	goto	u2690
  2739   001952                     u2691:
  2740   001952  EF63  F00C         	goto	l3228
  2741   001956                     u2690:
  2742   001956  BE20               	btfsc	(xtoa@p+1)^0,7,c
  2743   001958  EFB8  F00C         	goto	u2700
  2744   00195C  5020               	movf	(xtoa@p+1)^0,w,c
  2745   00195E  E106               	bnz	u2701
  2746   001960  041F               	decf	xtoa@p^0,w,c
  2747   001962  B0D8               	btfsc	status,0,c
  2748   001964  EFB6  F00C         	goto	u2701
  2749   001968  EFB8  F00C         	goto	u2700
  2750   00196C                     u2701:
  2751   00196C  EF63  F00C         	goto	l3228
  2752   001970                     u2700:
  2753   001970  BE22               	btfsc	(xtoa@w+1)^0,7,c
  2754   001972  EFC3  F00C         	goto	u2711
  2755   001976  5022               	movf	(xtoa@w+1)^0,w,c
  2756   001978  E108               	bnz	u2710
  2757   00197A  0421               	decf	xtoa@w^0,w,c
  2758   00197C  A0D8               	btfss	status,0,c
  2759   00197E  EFC3  F00C         	goto	u2711
  2760   001982  EFC5  F00C         	goto	u2710
  2761   001986                     u2711:
  2762   001986  EFCC  F00C         	goto	l1264
  2763   00198A                     u2710:
  2764   00198A  B274               	btfsc	_flags^0,1,c
  2765   00198C  EFCA  F00C         	goto	u2721
  2766   001990  EFCC  F00C         	goto	u2720
  2767   001994                     u2721:
  2768   001994  EF63  F00C         	goto	l3228
  2769   001998                     u2720:
  2770   001998                     l1264:
  2771                           
  2772                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1133:     if ((fl
      +                          ags & (1 << 4)) && d_nonzero
  2773   001998  A874               	btfss	_flags^0,4,c
  2774   00199A  EFD1  F00C         	goto	u2731
  2775   00199E  EFD3  F00C         	goto	u2730
  2776   0019A2                     u2731:
  2777   0019A2  EFF6  F00C         	goto	l3266
  2778   0019A6                     u2730:
  2779   0019A6  5023               	movf	xtoa@d_nonzero^0,w,c
  2780   0019A8  B4D8               	btfsc	status,2,c
  2781   0019AA  EFD9  F00C         	goto	u2741
  2782   0019AE  EFDB  F00C         	goto	u2740
  2783   0019B2                     u2741:
  2784   0019B2  EFF6  F00C         	goto	l3266
  2785   0019B6                     u2740:
  2786   0019B6  5070               	movf	_prec^0,w,c
  2787   0019B8  1071               	iorwf	(_prec+1)^0,w,c
  2788   0019BA  B4D8               	btfsc	status,2,c
  2789   0019BC  EFE2  F00C         	goto	u2751
  2790   0019C0  EFE4  F00C         	goto	u2750
  2791   0019C4                     u2751:
  2792   0019C4  EFF6  F00C         	goto	l3266
  2793   0019C8                     u2750:
  2794   0019C8                     
  2795                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1137:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1138:         --i;
  2796   0019C8  0625               	decf	xtoa@i^0,f,c
  2797   0019CA  A0D8               	btfss	status,0,c
  2798   0019CC  0626               	decf	(xtoa@i+1)^0,f,c
  2799   0019CE                     
  2800                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1140:         dbu
      +                          f[i] = x;
  2801   0019CE  5025               	movf	xtoa@i^0,w,c
  2802   0019D0  0F80               	addlw	low _dbuf
  2803   0019D2  6ED9               	movwf	fsr2l,c
  2804   0019D4  6ADA               	clrf	fsr2h,c
  2805   0019D6  C018  FFDF         	movff	xtoa@x,indf2
  2806   0019DA                     
  2807                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1146:         --i
      +                          ;
  2808   0019DA  0625               	decf	xtoa@i^0,f,c
  2809   0019DC  A0D8               	btfss	status,0,c
  2810   0019DE  0626               	decf	(xtoa@i+1)^0,f,c
  2811                           
  2812                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1147:         dbu
      +                          f[i] = '0';
  2813   0019E0  5025               	movf	xtoa@i^0,w,c
  2814   0019E2  0F80               	addlw	low _dbuf
  2815   0019E4  6ED9               	movwf	fsr2l,c
  2816   0019E6  6ADA               	clrf	fsr2h,c
  2817   0019E8  0E30               	movlw	48
  2818   0019EA  6EDF               	movwf	indf2,c
  2819   0019EC                     l3266:
  2820                           
  2821                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1152:     return 
      +                          (int) pad(fp, &dbuf[i], w);
  2822   0019EC  C015  F00E         	movff	xtoa@fp,pad@fp
  2823   0019F0  5025               	movf	xtoa@i^0,w,c
  2824   0019F2  0F80               	addlw	low _dbuf
  2825   0019F4  6E0F               	movwf	pad@buf^0,c
  2826   0019F6  C021  F010         	movff	xtoa@w,pad@p
  2827   0019FA  C022  F011         	movff	xtoa@w+1,pad@p+1
  2828   0019FE  EC73  F014         	call	_pad	;wreg free
  2829   001A02  C00E  F015         	movff	?_pad,?_xtoa
  2830   001A06  C00F  F016         	movff	?_pad+1,?_xtoa+1
  2831   001A0A  0012               	return		;funcret
  2832   001A0C                     __end_of_xtoa:
  2833                           	callstack 0
  2834                           
  2835 ;; *************** function _utoa *****************
  2836 ;; Defined at:
  2837 ;;		line 1001 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  2838 ;; Parameters:    Size  Location     Type
  2839 ;;  fp              1   20[COMRAM] PTR struct _IO_FILE
  2840 ;;		 -> sprintf@f(12), 
  2841 ;;  d               2   21[COMRAM] unsigned int 
  2842 ;; Auto vars:     Size  Location     Type
  2843 ;;  i               2   27[COMRAM] int 
  2844 ;;  w               2   25[COMRAM] int 
  2845 ;;  p               2   23[COMRAM] int 
  2846 ;; Return value:  Size  Location     Type
  2847 ;;                  2   20[COMRAM] int 
  2848 ;; Registers used:
  2849 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2850 ;; Tracked objects:
  2851 ;;		On entry : 0/0
  2852 ;;		On exit  : 0/0
  2853 ;;		Unchanged: 0/0
  2854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2855 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2856 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2858 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2859 ;;Total ram usage:        9 bytes
  2860 ;; Hardware stack levels used: 1
  2861 ;; Hardware stack levels required when called: 6
  2862 ;; This function calls:
  2863 ;;		___lwdiv
  2864 ;;		___lwmod
  2865 ;;		_pad
  2866 ;; This function is called by:
  2867 ;;		_vfpfcnvrt
  2868 ;; This function uses a non-reentrant model
  2869 ;;
  2870                           
  2871                           	psect	text6
  2872   002190                     __ptext6:
  2873                           	callstack 0
  2874   002190                     _utoa:
  2875                           	callstack 20
  2876   002190                     
  2877                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1001: static int 
      +                          utoa(FILE *fp, vfpf_uint_t d);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\commo
      +                          n\doprnt.c: 1002: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c
      +                          : 1003:     int i, w;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt
      +                          .c: 1005:  int p;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 
      +                          1013:     if (!(prec < 0)) {
  2878   002190  BE71               	btfsc	(_prec+1)^0,7,c
  2879   002192  EFCD  F010         	goto	u2521
  2880   002196  EFCF  F010         	goto	u2520
  2881   00219A                     u2521:
  2882   00219A  EFD0  F010         	goto	l3170
  2883   00219E                     u2520:
  2884   00219E                     
  2885                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1014:         fla
      +                          gs &= ~(1 << 1);
  2886   00219E  9274               	bcf	_flags^0,1,c
  2887   0021A0                     l3170:
  2888                           
  2889                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1017:     p = (0 
      +                          <= prec) ? prec : 1;
  2890   0021A0  BE71               	btfsc	(_prec+1)^0,7,c
  2891   0021A2  EFD7  F010         	goto	u2530
  2892   0021A6  EFD5  F010         	goto	u2531
  2893   0021AA                     u2531:
  2894   0021AA  EFDD  F010         	goto	l1233
  2895   0021AE                     u2530:
  2896   0021AE  0E00               	movlw	0
  2897   0021B0  6E19               	movwf	(utoa@p+1)^0,c
  2898   0021B2  0E01               	movlw	1
  2899   0021B4  6E18               	movwf	utoa@p^0,c
  2900   0021B6  EFE1  F010         	goto	l1235
  2901   0021BA                     l1233:
  2902   0021BA  C070  F018         	movff	_prec,utoa@p
  2903   0021BE  C071  F019         	movff	_prec+1,utoa@p+1
  2904   0021C2                     l1235:
  2905                           
  2906                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1019:     w = wid
      +                          th;
  2907   0021C2  C06E  F01A         	movff	_width,utoa@w
  2908   0021C6  C06F  F01B         	movff	_width+1,utoa@w+1
  2909   0021CA                     
  2910                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1022:     i = siz
      +                          eof(dbuf) - 1;
  2911   0021CA  0E00               	movlw	0
  2912   0021CC  6E1D               	movwf	(utoa@i+1)^0,c
  2913   0021CE  0E1F               	movlw	31
  2914   0021D0  6E1C               	movwf	utoa@i^0,c
  2915   0021D2                     
  2916                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1023:     dbuf[i]
      +                           = '\0';
  2917   0021D2  0E00               	movlw	0
  2918   0021D4  0100               	movlb	0	; () banked
  2919   0021D6  6F9F               	movwf	(_dbuf+31)& (0+255),b
  2920                           
  2921                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
  2922   0021D8  EF16  F011         	goto	l3188
  2923   0021DC                     l3178:
  2924                           
  2925                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1033:     )) {;C:
      +                          \Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1034:         --i;
  2926   0021DC  061C               	decf	utoa@i^0,f,c
  2927   0021DE  A0D8               	btfss	status,0,c
  2928   0021E0  061D               	decf	(utoa@i+1)^0,f,c
  2929   0021E2                     
  2930                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1035:         dbu
      +                          f[i] = '0' + (d % 10);
  2931   0021E2  501C               	movf	utoa@i^0,w,c
  2932   0021E4  0F80               	addlw	low _dbuf
  2933   0021E6  6ED9               	movwf	fsr2l,c
  2934   0021E8  6ADA               	clrf	fsr2h,c
  2935   0021EA  C016  F001         	movff	utoa@d,___lwmod@dividend
  2936   0021EE  C017  F002         	movff	utoa@d+1,___lwmod@dividend+1
  2937   0021F2  0E00               	movlw	0
  2938   0021F4  6E04               	movwf	(___lwmod@divisor+1)^0,c
  2939   0021F6  0E0A               	movlw	10
  2940   0021F8  6E03               	movwf	___lwmod@divisor^0,c
  2941   0021FA  EC85  F016         	call	___lwmod	;wreg free
  2942   0021FE  5001               	movf	?___lwmod^0,w,c
  2943   002200  0F30               	addlw	48
  2944   002202  6EDF               	movwf	indf2,c
  2945   002204                     
  2946                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1037:         --p
      +                          ;
  2947   002204  0618               	decf	utoa@p^0,f,c
  2948   002206  A0D8               	btfss	status,0,c
  2949   002208  0619               	decf	(utoa@p+1)^0,f,c
  2950   00220A                     
  2951                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1041:         --w
      +                          ;
  2952   00220A  061A               	decf	utoa@w^0,f,c
  2953   00220C  A0D8               	btfss	status,0,c
  2954   00220E  061B               	decf	(utoa@w+1)^0,f,c
  2955   002210                     
  2956                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1042:         d =
      +                           d / 10;
  2957   002210  C016  F001         	movff	utoa@d,___lwdiv@dividend
  2958   002214  C017  F002         	movff	utoa@d+1,___lwdiv@dividend+1
  2959   002218  0E00               	movlw	0
  2960   00221A  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  2961   00221C  0E0A               	movlw	10
  2962   00221E  6E03               	movwf	___lwdiv@divisor^0,c
  2963   002220  ECD7  F015         	call	___lwdiv	;wreg free
  2964   002224  C001  F016         	movff	?___lwdiv,utoa@d
  2965   002228  C002  F017         	movff	?___lwdiv+1,utoa@d+1
  2966   00222C                     l3188:
  2967                           
  2968                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
  2969   00222C  501C               	movf	utoa@i^0,w,c
  2970   00222E  101D               	iorwf	(utoa@i+1)^0,w,c
  2971   002230  B4D8               	btfsc	status,2,c
  2972   002232  EF1D  F011         	goto	u2541
  2973   002236  EF1F  F011         	goto	u2540
  2974   00223A                     u2541:
  2975   00223A  EF49  F011         	goto	l3198
  2976   00223E                     u2540:
  2977   00223E  5016               	movf	utoa@d^0,w,c
  2978   002240  1017               	iorwf	(utoa@d+1)^0,w,c
  2979   002242  A4D8               	btfss	status,2,c
  2980   002244  EF26  F011         	goto	u2551
  2981   002248  EF28  F011         	goto	u2550
  2982   00224C                     u2551:
  2983   00224C  EFEE  F010         	goto	l3178
  2984   002250                     u2550:
  2985   002250  BE19               	btfsc	(utoa@p+1)^0,7,c
  2986   002252  EF35  F011         	goto	u2560
  2987   002256  5019               	movf	(utoa@p+1)^0,w,c
  2988   002258  E106               	bnz	u2561
  2989   00225A  0418               	decf	utoa@p^0,w,c
  2990   00225C  B0D8               	btfsc	status,0,c
  2991   00225E  EF33  F011         	goto	u2561
  2992   002262  EF35  F011         	goto	u2560
  2993   002266                     u2561:
  2994   002266  EFEE  F010         	goto	l3178
  2995   00226A                     u2560:
  2996   00226A  BE1B               	btfsc	(utoa@w+1)^0,7,c
  2997   00226C  EF40  F011         	goto	u2571
  2998   002270  501B               	movf	(utoa@w+1)^0,w,c
  2999   002272  E108               	bnz	u2570
  3000   002274  041A               	decf	utoa@w^0,w,c
  3001   002276  A0D8               	btfss	status,0,c
  3002   002278  EF40  F011         	goto	u2571
  3003   00227C  EF42  F011         	goto	u2570
  3004   002280                     u2571:
  3005   002280  EF49  F011         	goto	l3198
  3006   002284                     u2570:
  3007   002284  B274               	btfsc	_flags^0,1,c
  3008   002286  EF47  F011         	goto	u2581
  3009   00228A  EF49  F011         	goto	u2580
  3010   00228E                     u2581:
  3011   00228E  EFEE  F010         	goto	l3178
  3012   002292                     u2580:
  3013   002292                     l3198:
  3014                           
  3015                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1046:     return 
      +                          (int) pad(fp, &dbuf[i], w);
  3016   002292  C015  F00E         	movff	utoa@fp,pad@fp
  3017   002296  501C               	movf	utoa@i^0,w,c
  3018   002298  0F80               	addlw	low _dbuf
  3019   00229A  6E0F               	movwf	pad@buf^0,c
  3020   00229C  C01A  F010         	movff	utoa@w,pad@p
  3021   0022A0  C01B  F011         	movff	utoa@w+1,pad@p+1
  3022   0022A4  EC73  F014         	call	_pad	;wreg free
  3023   0022A8  C00E  F015         	movff	?_pad,?_utoa
  3024   0022AC  C00F  F016         	movff	?_pad+1,?_utoa+1
  3025   0022B0  0012               	return		;funcret
  3026   0022B2                     __end_of_utoa:
  3027                           	callstack 0
  3028                           
  3029 ;; *************** function ___lwmod *****************
  3030 ;; Defined at:
  3031 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwmod.c"
  3032 ;; Parameters:    Size  Location     Type
  3033 ;;  dividend        2    0[COMRAM] unsigned int 
  3034 ;;  divisor         2    2[COMRAM] unsigned int 
  3035 ;; Auto vars:     Size  Location     Type
  3036 ;;  counter         1    4[COMRAM] unsigned char 
  3037 ;; Return value:  Size  Location     Type
  3038 ;;                  2    0[COMRAM] unsigned int 
  3039 ;; Registers used:
  3040 ;;		wreg, status,2, status,0
  3041 ;; Tracked objects:
  3042 ;;		On entry : 0/0
  3043 ;;		On exit  : 0/0
  3044 ;;		Unchanged: 0/0
  3045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3046 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3047 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3049 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3050 ;;Total ram usage:        5 bytes
  3051 ;; Hardware stack levels used: 1
  3052 ;; Hardware stack levels required when called: 2
  3053 ;; This function calls:
  3054 ;;		Nothing
  3055 ;; This function is called by:
  3056 ;;		_utoa
  3057 ;; This function uses a non-reentrant model
  3058 ;;
  3059                           
  3060                           	psect	text7
  3061   002D0A                     __ptext7:
  3062                           	callstack 0
  3063   002D0A                     ___lwmod:
  3064                           	callstack 23
  3065   002D0A  5003               	movf	___lwmod@divisor^0,w,c
  3066   002D0C  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  3067   002D0E  B4D8               	btfsc	status,2,c
  3068   002D10  EF8C  F016         	goto	u2101
  3069   002D14  EF8E  F016         	goto	u2100
  3070   002D18                     u2101:
  3071   002D18  EFB2  F016         	goto	l957
  3072   002D1C                     u2100:
  3073   002D1C  0E01               	movlw	1
  3074   002D1E  6E05               	movwf	___lwmod@counter^0,c
  3075   002D20  EF96  F016         	goto	l2966
  3076   002D24                     l2964:
  3077   002D24  90D8               	bcf	status,0,c
  3078   002D26  3603               	rlcf	___lwmod@divisor^0,f,c
  3079   002D28  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  3080   002D2A  2A05               	incf	___lwmod@counter^0,f,c
  3081   002D2C                     l2966:
  3082   002D2C  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  3083   002D2E  EF9B  F016         	goto	u2111
  3084   002D32  EF9D  F016         	goto	u2110
  3085   002D36                     u2111:
  3086   002D36  EF92  F016         	goto	l2964
  3087   002D3A                     u2110:
  3088   002D3A                     l2968:
  3089   002D3A  5003               	movf	___lwmod@divisor^0,w,c
  3090   002D3C  5C01               	subwf	___lwmod@dividend^0,w,c
  3091   002D3E  5004               	movf	(___lwmod@divisor+1)^0,w,c
  3092   002D40  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  3093   002D42  A0D8               	btfss	status,0,c
  3094   002D44  EFA6  F016         	goto	u2121
  3095   002D48  EFA8  F016         	goto	u2120
  3096   002D4C                     u2121:
  3097   002D4C  EFAC  F016         	goto	l2972
  3098   002D50                     u2120:
  3099   002D50  5003               	movf	___lwmod@divisor^0,w,c
  3100   002D52  5E01               	subwf	___lwmod@dividend^0,f,c
  3101   002D54  5004               	movf	(___lwmod@divisor+1)^0,w,c
  3102   002D56  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  3103   002D58                     l2972:
  3104   002D58  90D8               	bcf	status,0,c
  3105   002D5A  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  3106   002D5C  3203               	rrcf	___lwmod@divisor^0,f,c
  3107   002D5E  2E05               	decfsz	___lwmod@counter^0,f,c
  3108   002D60  EF9D  F016         	goto	l2968
  3109   002D64                     l957:
  3110   002D64  C001  F001         	movff	___lwmod@dividend,?___lwmod
  3111   002D68  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  3112   002D6C  0012               	return		;funcret
  3113   002D6E                     __end_of___lwmod:
  3114                           	callstack 0
  3115                           
  3116 ;; *************** function ___lwdiv *****************
  3117 ;; Defined at:
  3118 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwdiv.c"
  3119 ;; Parameters:    Size  Location     Type
  3120 ;;  dividend        2    0[COMRAM] unsigned int 
  3121 ;;  divisor         2    2[COMRAM] unsigned int 
  3122 ;; Auto vars:     Size  Location     Type
  3123 ;;  quotient        2    4[COMRAM] unsigned int 
  3124 ;;  counter         1    6[COMRAM] unsigned char 
  3125 ;; Return value:  Size  Location     Type
  3126 ;;                  2    0[COMRAM] unsigned int 
  3127 ;; Registers used:
  3128 ;;		wreg, status,2, status,0
  3129 ;; Tracked objects:
  3130 ;;		On entry : 0/0
  3131 ;;		On exit  : 0/0
  3132 ;;		Unchanged: 0/0
  3133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3134 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3135 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3137 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3138 ;;Total ram usage:        7 bytes
  3139 ;; Hardware stack levels used: 1
  3140 ;; Hardware stack levels required when called: 2
  3141 ;; This function calls:
  3142 ;;		Nothing
  3143 ;; This function is called by:
  3144 ;;		_utoa
  3145 ;; This function uses a non-reentrant model
  3146 ;;
  3147                           
  3148                           	psect	text8
  3149   002BAE                     __ptext8:
  3150                           	callstack 0
  3151   002BAE                     ___lwdiv:
  3152                           	callstack 23
  3153   002BAE  0E00               	movlw	0
  3154   002BB0  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  3155   002BB2  0E00               	movlw	0
  3156   002BB4  6E05               	movwf	___lwdiv@quotient^0,c
  3157   002BB6  5003               	movf	___lwdiv@divisor^0,w,c
  3158   002BB8  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3159   002BBA  B4D8               	btfsc	status,2,c
  3160   002BBC  EFE2  F015         	goto	u2071
  3161   002BC0  EFE4  F015         	goto	u2070
  3162   002BC4                     u2071:
  3163   002BC4  EF0C  F016         	goto	l947
  3164   002BC8                     u2070:
  3165   002BC8  0E01               	movlw	1
  3166   002BCA  6E07               	movwf	___lwdiv@counter^0,c
  3167   002BCC  EFEC  F015         	goto	l2946
  3168   002BD0                     l2944:
  3169   002BD0  90D8               	bcf	status,0,c
  3170   002BD2  3603               	rlcf	___lwdiv@divisor^0,f,c
  3171   002BD4  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3172   002BD6  2A07               	incf	___lwdiv@counter^0,f,c
  3173   002BD8                     l2946:
  3174   002BD8  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  3175   002BDA  EFF1  F015         	goto	u2081
  3176   002BDE  EFF3  F015         	goto	u2080
  3177   002BE2                     u2081:
  3178   002BE2  EFE8  F015         	goto	l2944
  3179   002BE6                     u2080:
  3180   002BE6                     l2948:
  3181   002BE6  90D8               	bcf	status,0,c
  3182   002BE8  3605               	rlcf	___lwdiv@quotient^0,f,c
  3183   002BEA  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  3184   002BEC  5003               	movf	___lwdiv@divisor^0,w,c
  3185   002BEE  5C01               	subwf	___lwdiv@dividend^0,w,c
  3186   002BF0  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  3187   002BF2  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  3188   002BF4  A0D8               	btfss	status,0,c
  3189   002BF6  EFFF  F015         	goto	u2091
  3190   002BFA  EF01  F016         	goto	u2090
  3191   002BFE                     u2091:
  3192   002BFE  EF06  F016         	goto	l2956
  3193   002C02                     u2090:
  3194   002C02  5003               	movf	___lwdiv@divisor^0,w,c
  3195   002C04  5E01               	subwf	___lwdiv@dividend^0,f,c
  3196   002C06  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  3197   002C08  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  3198   002C0A  8005               	bsf	___lwdiv@quotient^0,0,c
  3199   002C0C                     l2956:
  3200   002C0C  90D8               	bcf	status,0,c
  3201   002C0E  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3202   002C10  3203               	rrcf	___lwdiv@divisor^0,f,c
  3203   002C12  2E07               	decfsz	___lwdiv@counter^0,f,c
  3204   002C14  EFF3  F015         	goto	l2948
  3205   002C18                     l947:
  3206   002C18  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  3207   002C1C  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3208   002C20  0012               	return		;funcret
  3209   002C22                     __end_of___lwdiv:
  3210                           	callstack 0
  3211                           
  3212 ;; *************** function _read_prec_or_width *****************
  3213 ;; Defined at:
  3214 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  3215 ;; Parameters:    Size  Location     Type
  3216 ;;  fmt             1    6[COMRAM] PTR PTR const unsigned c
  3217 ;;		 -> vfprintf@cfmt(3), 
  3218 ;;  ap              1    7[COMRAM] PTR PTR void [1]
  3219 ;;		 -> sprintf@ap(1), 
  3220 ;; Auto vars:     Size  Location     Type
  3221 ;;  c               1   11[COMRAM] unsigned char 
  3222 ;;  n               2   12[COMRAM] int 
  3223 ;; Return value:  Size  Location     Type
  3224 ;;                  2    6[COMRAM] int 
  3225 ;; Registers used:
  3226 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3227 ;; Tracked objects:
  3228 ;;		On entry : 0/0
  3229 ;;		On exit  : 0/0
  3230 ;;		Unchanged: 0/0
  3231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3232 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3233 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3234 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3235 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3236 ;;Total ram usage:        8 bytes
  3237 ;; Hardware stack levels used: 1
  3238 ;; Hardware stack levels required when called: 3
  3239 ;; This function calls:
  3240 ;;		___wmul
  3241 ;; This function is called by:
  3242 ;;		_vfpfcnvrt
  3243 ;; This function uses a non-reentrant model
  3244 ;;
  3245                           
  3246                           	psect	text9
  3247   00248C                     __ptext9:
  3248                           	callstack 0
  3249   00248C                     _read_prec_or_width:
  3250                           	callstack 23
  3251   00248C                     
  3252                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  3253   00248C  0E00               	movlw	0
  3254   00248E  6E0E               	movwf	(read_prec_or_width@n+1)^0,c
  3255   002490  0E00               	movlw	0
  3256   002492  6E0D               	movwf	read_prec_or_width@n^0,c
  3257   002494                     
  3258                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  3259   002494  5007               	movf	read_prec_or_width@fmt^0,w,c
  3260   002496  6ED9               	movwf	fsr2l,c
  3261   002498  6ADA               	clrf	fsr2h,c
  3262   00249A  CFDE F009          	movff	postinc2,??_read_prec_or_width
  3263   00249E  CFDE F00A          	movff	postinc2,??_read_prec_or_width+1
  3264   0024A2  CFDE F00B          	movff	postinc2,??_read_prec_or_width+2
  3265   0024A6  C009  FFF6         	movff	??_read_prec_or_width,tblptrl
  3266   0024AA  C00A  FFF7         	movff	??_read_prec_or_width+1,tblptrh
  3267   0024AE  C00B  FFF8         	movff	??_read_prec_or_width+2,tblptru
  3268   0024B2  0008               	tblrd		*
  3269   0024B4  50F5               	movf	tablat,w,c
  3270   0024B6  0A2A               	xorlw	42
  3271   0024B8  A4D8               	btfss	status,2,c
  3272   0024BA  EF61  F012         	goto	u2761
  3273   0024BE  EF63  F012         	goto	u2760
  3274   0024C2                     u2761:
  3275   0024C2  EF8F  F012         	goto	l3282
  3276   0024C6                     u2760:
  3277   0024C6                     
  3278                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  3279   0024C6  5007               	movf	read_prec_or_width@fmt^0,w,c
  3280   0024C8  6ED9               	movwf	fsr2l,c
  3281   0024CA  6ADA               	clrf	fsr2h,c
  3282   0024CC  2ADE               	incf	postinc2,f,c
  3283   0024CE  0E00               	movlw	0
  3284   0024D0  22DE               	addwfc	postinc2,f,c
  3285   0024D2  22DE               	addwfc	postinc2,f,c
  3286   0024D4                     
  3287                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  3288   0024D4  5008               	movf	read_prec_or_width@ap^0,w,c
  3289   0024D6  6ED9               	movwf	fsr2l,c
  3290   0024D8  6ADA               	clrf	fsr2h,c
  3291   0024DA  0E02               	movlw	2
  3292   0024DC  26DF               	addwf	indf2,f,c
  3293   0024DE  5CDF               	subwf	indf2,w,c
  3294   0024E0  6ED9               	movwf	fsr2l,c
  3295   0024E2  6ADA               	clrf	fsr2h,c
  3296   0024E4  CFDE F00D          	movff	postinc2,read_prec_or_width@n
  3297   0024E8  CFDE F00E          	movff	postinc2,read_prec_or_width@n+1
  3298                           
  3299                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  3300   0024EC  EFAA  F012         	goto	l1270
  3301   0024F0                     l3278:
  3302                           
  3303                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  3304   0024F0  C00D  F001         	movff	read_prec_or_width@n,___wmul@multiplier
  3305   0024F4  C00E  F002         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  3306   0024F8  0E00               	movlw	0
  3307   0024FA  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3308   0024FC  0E0A               	movlw	10
  3309   0024FE  6E03               	movwf	___wmul@multiplicand^0,c
  3310   002500  EC7B  F018         	call	___wmul	;wreg free
  3311   002504  500C               	movf	read_prec_or_width@c^0,w,c
  3312   002506  2401               	addwf	?___wmul^0,w,c
  3313   002508  6E0D               	movwf	read_prec_or_width@n^0,c
  3314   00250A  0E00               	movlw	0
  3315   00250C  2002               	addwfc	(?___wmul+1)^0,w,c
  3316   00250E  6E0E               	movwf	(read_prec_or_width@n+1)^0,c
  3317   002510                     
  3318                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  3319   002510  5007               	movf	read_prec_or_width@fmt^0,w,c
  3320   002512  6ED9               	movwf	fsr2l,c
  3321   002514  6ADA               	clrf	fsr2h,c
  3322   002516  2ADE               	incf	postinc2,f,c
  3323   002518  0E00               	movlw	0
  3324   00251A  22DE               	addwfc	postinc2,f,c
  3325   00251C  22DE               	addwfc	postinc2,f,c
  3326   00251E                     l3282:
  3327                           
  3328                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  3329   00251E  5007               	movf	read_prec_or_width@fmt^0,w,c
  3330   002520  6ED9               	movwf	fsr2l,c
  3331   002522  6ADA               	clrf	fsr2h,c
  3332   002524  CFDE F009          	movff	postinc2,??_read_prec_or_width
  3333   002528  CFDE F00A          	movff	postinc2,??_read_prec_or_width+1
  3334   00252C  CFDE F00B          	movff	postinc2,??_read_prec_or_width+2
  3335   002530  C009  FFF6         	movff	??_read_prec_or_width,tblptrl
  3336   002534  C00A  FFF7         	movff	??_read_prec_or_width+1,tblptrh
  3337   002538  C00B  FFF8         	movff	??_read_prec_or_width+2,tblptru
  3338   00253C  0008               	tblrd		*
  3339   00253E  50F5               	movf	tablat,w,c
  3340   002540  0FD0               	addlw	208
  3341   002542  6E0C               	movwf	read_prec_or_width@c^0,c
  3342   002544  0E09               	movlw	9
  3343   002546  640C               	cpfsgt	read_prec_or_width@c^0,c
  3344   002548  EFA8  F012         	goto	u2771
  3345   00254C  EFAA  F012         	goto	u2770
  3346   002550                     u2771:
  3347   002550  EF78  F012         	goto	l3278
  3348   002554                     u2770:
  3349   002554                     l1270:
  3350                           
  3351                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  3352   002554  C00D  F007         	movff	read_prec_or_width@n,?_read_prec_or_width
  3353   002558  C00E  F008         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  3354   00255C  0012               	return		;funcret
  3355   00255E                     __end_of_read_prec_or_width:
  3356                           	callstack 0
  3357                           
  3358 ;; *************** function ___wmul *****************
  3359 ;; Defined at:
  3360 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
  3361 ;; Parameters:    Size  Location     Type
  3362 ;;  multiplier      2    0[COMRAM] unsigned int 
  3363 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3364 ;; Auto vars:     Size  Location     Type
  3365 ;;  product         2    4[COMRAM] unsigned int 
  3366 ;; Return value:  Size  Location     Type
  3367 ;;                  2    0[COMRAM] unsigned int 
  3368 ;; Registers used:
  3369 ;;		wreg, status,2, status,0, prodl, prodh
  3370 ;; Tracked objects:
  3371 ;;		On entry : 0/0
  3372 ;;		On exit  : 0/0
  3373 ;;		Unchanged: 0/0
  3374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3375 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3376 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3378 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3379 ;;Total ram usage:        6 bytes
  3380 ;; Hardware stack levels used: 1
  3381 ;; Hardware stack levels required when called: 2
  3382 ;; This function calls:
  3383 ;;		Nothing
  3384 ;; This function is called by:
  3385 ;;		_read_prec_or_width
  3386 ;; This function uses a non-reentrant model
  3387 ;;
  3388                           
  3389                           	psect	text10
  3390   0030F6                     __ptext10:
  3391                           	callstack 0
  3392   0030F6                     ___wmul:
  3393                           	callstack 23
  3394   0030F6  5001               	movf	___wmul@multiplier^0,w,c
  3395   0030F8  0203               	mulwf	___wmul@multiplicand^0,c
  3396   0030FA  CFF3 F005          	movff	prodl,___wmul@product
  3397   0030FE  CFF4 F006          	movff	prodh,___wmul@product+1
  3398   003102  5001               	movf	___wmul@multiplier^0,w,c
  3399   003104  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  3400   003106  50F3               	movf	243,w,c
  3401   003108  2606               	addwf	(___wmul@product+1)^0,f,c
  3402   00310A  5002               	movf	(___wmul@multiplier+1)^0,w,c
  3403   00310C  0203               	mulwf	___wmul@multiplicand^0,c
  3404   00310E  50F3               	movf	243,w,c
  3405   003110  2606               	addwf	(___wmul@product+1)^0,f,c
  3406   003112  C005  F001         	movff	___wmul@product,?___wmul
  3407   003116  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3408   00311A  0012               	return		;funcret
  3409   00311C                     __end_of___wmul:
  3410                           	callstack 0
  3411                           
  3412 ;; *************** function _otoa *****************
  3413 ;; Defined at:
  3414 ;;		line 872 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  3415 ;; Parameters:    Size  Location     Type
  3416 ;;  fp              1   20[COMRAM] PTR struct _IO_FILE
  3417 ;;		 -> sprintf@f(12), 
  3418 ;;  d               2   21[COMRAM] unsigned int 
  3419 ;; Auto vars:     Size  Location     Type
  3420 ;;  i               2   30[COMRAM] int 
  3421 ;;  w               2   27[COMRAM] int 
  3422 ;;  p               2   25[COMRAM] int 
  3423 ;;  t               1   29[COMRAM] unsigned char 
  3424 ;; Return value:  Size  Location     Type
  3425 ;;                  2   20[COMRAM] int 
  3426 ;; Registers used:
  3427 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3428 ;; Tracked objects:
  3429 ;;		On entry : 0/0
  3430 ;;		On exit  : 0/0
  3431 ;;		Unchanged: 0/0
  3432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3433 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3434 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3435 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3436 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3437 ;;Total ram usage:       12 bytes
  3438 ;; Hardware stack levels used: 1
  3439 ;; Hardware stack levels required when called: 6
  3440 ;; This function calls:
  3441 ;;		_pad
  3442 ;; This function is called by:
  3443 ;;		_vfpfcnvrt
  3444 ;; This function uses a non-reentrant model
  3445 ;;
  3446                           
  3447                           	psect	text11
  3448   001DD8                     __ptext11:
  3449                           	callstack 0
  3450   001DD8                     _otoa:
  3451                           	callstack 20
  3452   001DD8                     
  3453                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 872: static int o
      +                          toa(FILE *fp, vfpf_uint_t d);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 873: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 
      +                          875:  char t;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 877:
      +                               int i, w;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 879
      +                          :  int p;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 887:    
      +                           if (!(prec < 0)) {
  3454   001DD8  BE71               	btfsc	(_prec+1)^0,7,c
  3455   001DDA  EFF1  F00E         	goto	u2421
  3456   001DDE  EFF3  F00E         	goto	u2420
  3457   001DE2                     u2421:
  3458   001DE2  EFF4  F00E         	goto	l3120
  3459   001DE6                     u2420:
  3460   001DE6                     
  3461                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 888:         flag
      +                          s &= ~(1 << 1);
  3462   001DE6  9274               	bcf	_flags^0,1,c
  3463   001DE8                     l3120:
  3464                           
  3465                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 891:     p = (0 <
      +                          = prec) ? prec : 1;
  3466   001DE8  BE71               	btfsc	(_prec+1)^0,7,c
  3467   001DEA  EFFB  F00E         	goto	u2430
  3468   001DEE  EFF9  F00E         	goto	u2431
  3469   001DF2                     u2431:
  3470   001DF2  EF01  F00F         	goto	l1215
  3471   001DF6                     u2430:
  3472   001DF6  0E00               	movlw	0
  3473   001DF8  6E1B               	movwf	(otoa@p+1)^0,c
  3474   001DFA  0E01               	movlw	1
  3475   001DFC  6E1A               	movwf	otoa@p^0,c
  3476   001DFE  EF05  F00F         	goto	l1217
  3477   001E02                     l1215:
  3478   001E02  C070  F01A         	movff	_prec,otoa@p
  3479   001E06  C071  F01B         	movff	_prec+1,otoa@p+1
  3480   001E0A                     l1217:
  3481                           
  3482                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 893:     w = widt
      +                          h;
  3483   001E0A  C06E  F01C         	movff	_width,otoa@w
  3484   001E0E  C06F  F01D         	movff	_width+1,otoa@w+1
  3485   001E12                     
  3486                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 896:     i = size
      +                          of(dbuf) - 1;
  3487   001E12  0E00               	movlw	0
  3488   001E14  6E20               	movwf	(otoa@i+1)^0,c
  3489   001E16  0E1F               	movlw	31
  3490   001E18  6E1F               	movwf	otoa@i^0,c
  3491   001E1A                     
  3492                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 897:     dbuf[i] 
      +                          = '\0';
  3493   001E1A  0E00               	movlw	0
  3494   001E1C  0100               	movlb	0	; () banked
  3495   001E1E  6F9F               	movwf	(_dbuf+31)& (0+255),b
  3496   001E20                     
  3497                           ; BSR set to: 0
  3498                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 899:     t = 0;
  3499   001E20  0E00               	movlw	0
  3500   001E22  6E1E               	movwf	otoa@t^0,c
  3501                           
  3502                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 901:     while (!
      +                          (i < 1) && (d != 0
  3503   001E24  EF38  F00F         	goto	l3142
  3504   001E28                     l3130:
  3505                           
  3506                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 910:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 911:         --i;
  3507   001E28  061F               	decf	otoa@i^0,f,c
  3508   001E2A  A0D8               	btfss	status,0,c
  3509   001E2C  0620               	decf	(otoa@i+1)^0,f,c
  3510   001E2E                     
  3511                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 913:         t = 
      +                          d & 07;
  3512   001E2E  5016               	movf	otoa@d^0,w,c
  3513   001E30  0B07               	andlw	7
  3514   001E32  6E1E               	movwf	otoa@t^0,c
  3515   001E34                     
  3516                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 914:         dbuf
      +                          [i] = (char)((int)'0' + t);
  3517   001E34  501F               	movf	otoa@i^0,w,c
  3518   001E36  0F80               	addlw	low _dbuf
  3519   001E38  6ED9               	movwf	fsr2l,c
  3520   001E3A  6ADA               	clrf	fsr2h,c
  3521   001E3C  501E               	movf	otoa@t^0,w,c
  3522   001E3E  0F30               	addlw	48
  3523   001E40  6EDF               	movwf	indf2,c
  3524   001E42                     
  3525                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 919:         --p;
  3526   001E42  061A               	decf	otoa@p^0,f,c
  3527   001E44  A0D8               	btfss	status,0,c
  3528   001E46  061B               	decf	(otoa@p+1)^0,f,c
  3529   001E48                     
  3530                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 923:         --w;
  3531   001E48  061C               	decf	otoa@w^0,f,c
  3532   001E4A  A0D8               	btfss	status,0,c
  3533   001E4C  061D               	decf	(otoa@w+1)^0,f,c
  3534   001E4E                     
  3535                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 924:         d = 
      +                          d >> 3;
  3536   001E4E  C016  F018         	movff	otoa@d,??_otoa
  3537   001E52  C017  F019         	movff	otoa@d+1,??_otoa+1
  3538   001E56  90D8               	bcf	status,0,c
  3539   001E58  3219               	rrcf	(??_otoa+1)^0,f,c
  3540   001E5A  3218               	rrcf	??_otoa^0,f,c
  3541   001E5C  90D8               	bcf	status,0,c
  3542   001E5E  3219               	rrcf	(??_otoa+1)^0,f,c
  3543   001E60  3218               	rrcf	??_otoa^0,f,c
  3544   001E62  90D8               	bcf	status,0,c
  3545   001E64  3219               	rrcf	(??_otoa+1)^0,f,c
  3546   001E66  3218               	rrcf	??_otoa^0,f,c
  3547   001E68  C018  F016         	movff	??_otoa,otoa@d
  3548   001E6C  C019  F017         	movff	??_otoa+1,otoa@d+1
  3549   001E70                     l3142:
  3550                           
  3551                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 901:     while (!
      +                          (i < 1) && (d != 0
  3552   001E70  BE20               	btfsc	(otoa@i+1)^0,7,c
  3553   001E72  EF43  F00F         	goto	u2441
  3554   001E76  5020               	movf	(otoa@i+1)^0,w,c
  3555   001E78  E108               	bnz	u2440
  3556   001E7A  041F               	decf	otoa@i^0,w,c
  3557   001E7C  A0D8               	btfss	status,0,c
  3558   001E7E  EF43  F00F         	goto	u2441
  3559   001E82  EF45  F00F         	goto	u2440
  3560   001E86                     u2441:
  3561   001E86  EF6F  F00F         	goto	l3152
  3562   001E8A                     u2440:
  3563   001E8A  5016               	movf	otoa@d^0,w,c
  3564   001E8C  1017               	iorwf	(otoa@d+1)^0,w,c
  3565   001E8E  A4D8               	btfss	status,2,c
  3566   001E90  EF4C  F00F         	goto	u2451
  3567   001E94  EF4E  F00F         	goto	u2450
  3568   001E98                     u2451:
  3569   001E98  EF14  F00F         	goto	l3130
  3570   001E9C                     u2450:
  3571   001E9C  BE1B               	btfsc	(otoa@p+1)^0,7,c
  3572   001E9E  EF5B  F00F         	goto	u2460
  3573   001EA2  501B               	movf	(otoa@p+1)^0,w,c
  3574   001EA4  E106               	bnz	u2461
  3575   001EA6  041A               	decf	otoa@p^0,w,c
  3576   001EA8  B0D8               	btfsc	status,0,c
  3577   001EAA  EF59  F00F         	goto	u2461
  3578   001EAE  EF5B  F00F         	goto	u2460
  3579   001EB2                     u2461:
  3580   001EB2  EF14  F00F         	goto	l3130
  3581   001EB6                     u2460:
  3582   001EB6  BE1D               	btfsc	(otoa@w+1)^0,7,c
  3583   001EB8  EF66  F00F         	goto	u2471
  3584   001EBC  501D               	movf	(otoa@w+1)^0,w,c
  3585   001EBE  E108               	bnz	u2470
  3586   001EC0  041C               	decf	otoa@w^0,w,c
  3587   001EC2  A0D8               	btfss	status,0,c
  3588   001EC4  EF66  F00F         	goto	u2471
  3589   001EC8  EF68  F00F         	goto	u2470
  3590   001ECC                     u2471:
  3591   001ECC  EF6F  F00F         	goto	l3152
  3592   001ED0                     u2470:
  3593   001ED0  B274               	btfsc	_flags^0,1,c
  3594   001ED2  EF6D  F00F         	goto	u2481
  3595   001ED6  EF6F  F00F         	goto	u2480
  3596   001EDA                     u2481:
  3597   001EDA  EF14  F00F         	goto	l3130
  3598   001EDE                     u2480:
  3599   001EDE                     l3152:
  3600                           
  3601                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 929:     if ((t |
      +                          | prec == 0) && (flags & (1 << 4))) {
  3602   001EDE  501E               	movf	otoa@t^0,w,c
  3603   001EE0  A4D8               	btfss	status,2,c
  3604   001EE2  EF75  F00F         	goto	u2491
  3605   001EE6  EF77  F00F         	goto	u2490
  3606   001EEA                     u2491:
  3607   001EEA  EF80  F00F         	goto	l1227
  3608   001EEE                     u2490:
  3609   001EEE  5070               	movf	_prec^0,w,c
  3610   001EF0  1071               	iorwf	(_prec+1)^0,w,c
  3611   001EF2  A4D8               	btfss	status,2,c
  3612   001EF4  EF7E  F00F         	goto	u2501
  3613   001EF8  EF80  F00F         	goto	u2500
  3614   001EFC                     u2501:
  3615   001EFC  EF93  F00F         	goto	l3162
  3616   001F00                     u2500:
  3617   001F00                     l1227:
  3618   001F00  A874               	btfss	_flags^0,4,c
  3619   001F02  EF85  F00F         	goto	u2511
  3620   001F06  EF87  F00F         	goto	u2510
  3621   001F0A                     u2511:
  3622   001F0A  EF93  F00F         	goto	l3162
  3623   001F0E                     u2510:
  3624   001F0E                     
  3625                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 930:         --i;
  3626   001F0E  061F               	decf	otoa@i^0,f,c
  3627   001F10  A0D8               	btfss	status,0,c
  3628   001F12  0620               	decf	(otoa@i+1)^0,f,c
  3629   001F14                     
  3630                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 931:         dbuf
      +                          [i] = '0';
  3631   001F14  501F               	movf	otoa@i^0,w,c
  3632   001F16  0F80               	addlw	low _dbuf
  3633   001F18  6ED9               	movwf	fsr2l,c
  3634   001F1A  6ADA               	clrf	fsr2h,c
  3635   001F1C  0E30               	movlw	48
  3636   001F1E  6EDF               	movwf	indf2,c
  3637   001F20                     
  3638                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 932:         --w;
  3639   001F20  061C               	decf	otoa@w^0,f,c
  3640   001F22  A0D8               	btfss	status,0,c
  3641   001F24  061D               	decf	(otoa@w+1)^0,f,c
  3642   001F26                     l3162:
  3643                           
  3644                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 937:     return (
      +                          int) pad(fp, &dbuf[i], w);
  3645   001F26  C015  F00E         	movff	otoa@fp,pad@fp
  3646   001F2A  501F               	movf	otoa@i^0,w,c
  3647   001F2C  0F80               	addlw	low _dbuf
  3648   001F2E  6E0F               	movwf	pad@buf^0,c
  3649   001F30  C01C  F010         	movff	otoa@w,pad@p
  3650   001F34  C01D  F011         	movff	otoa@w+1,pad@p+1
  3651   001F38  EC73  F014         	call	_pad	;wreg free
  3652   001F3C  C00E  F015         	movff	?_pad,?_otoa
  3653   001F40  C00F  F016         	movff	?_pad+1,?_otoa+1
  3654   001F44  0012               	return		;funcret
  3655   001F46                     __end_of_otoa:
  3656                           	callstack 0
  3657                           
  3658 ;; *************** function _dtoa *****************
  3659 ;; Defined at:
  3660 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  3661 ;; Parameters:    Size  Location     Type
  3662 ;;  fp              1   20[COMRAM] PTR struct _IO_FILE
  3663 ;;		 -> sprintf@f(12), 
  3664 ;;  d               2   21[COMRAM] int 
  3665 ;; Auto vars:     Size  Location     Type
  3666 ;;  i               2   30[COMRAM] int 
  3667 ;;  w               2   27[COMRAM] int 
  3668 ;;  p               2   25[COMRAM] int 
  3669 ;;  s               1   29[COMRAM] unsigned char 
  3670 ;; Return value:  Size  Location     Type
  3671 ;;                  2   20[COMRAM] int 
  3672 ;; Registers used:
  3673 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3674 ;; Tracked objects:
  3675 ;;		On entry : 0/0
  3676 ;;		On exit  : 0/0
  3677 ;;		Unchanged: 0/0
  3678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3679 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3680 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3682 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3683 ;;Total ram usage:       12 bytes
  3684 ;; Hardware stack levels used: 1
  3685 ;; Hardware stack levels required when called: 6
  3686 ;; This function calls:
  3687 ;;		___awdiv
  3688 ;;		___awmod
  3689 ;;		_abs
  3690 ;;		_pad
  3691 ;; This function is called by:
  3692 ;;		_vfpfcnvrt
  3693 ;; This function uses a non-reentrant model
  3694 ;;
  3695                           
  3696                           	psect	text12
  3697   001C04                     __ptext12:
  3698                           	callstack 0
  3699   001C04                     _dtoa:
  3700                           	callstack 20
  3701   001C04                     
  3702                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 513: static int d
      +                          toa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 
      +                          515:  char s;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 516:
      +                               int i, w;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 518
      +                          :  int p;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 524:    
      +                           s = d < 0 ? 1 : 0;
  3703   001C04  BE17               	btfsc	(dtoa@d+1)^0,7,c
  3704   001C06  EF07  F00E         	goto	u2281
  3705   001C0A  EF0A  F00E         	goto	u2280
  3706   001C0E                     u2281:
  3707   001C0E  0E01               	movlw	1
  3708   001C10  EF0B  F00E         	goto	u2290
  3709   001C14                     u2280:
  3710   001C14  0E00               	movlw	0
  3711   001C16                     u2290:
  3712   001C16  6E1E               	movwf	dtoa@s^0,c
  3713                           
  3714                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 529:     if (!(pr
      +                          ec < 0)) {
  3715   001C18  BE71               	btfsc	(_prec+1)^0,7,c
  3716   001C1A  EF11  F00E         	goto	u2301
  3717   001C1E  EF13  F00E         	goto	u2300
  3718   001C22                     u2301:
  3719   001C22  EF14  F00E         	goto	l3060
  3720   001C26                     u2300:
  3721   001C26                     
  3722                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 530:         flag
      +                          s &= ~(1 << 1);
  3723   001C26  9274               	bcf	_flags^0,1,c
  3724   001C28                     l3060:
  3725                           
  3726                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 533:     p = (0 <
      +                          = prec) ? prec : 1;
  3727   001C28  BE71               	btfsc	(_prec+1)^0,7,c
  3728   001C2A  EF1B  F00E         	goto	u2310
  3729   001C2E  EF19  F00E         	goto	u2311
  3730   001C32                     u2311:
  3731   001C32  EF21  F00E         	goto	l1190
  3732   001C36                     u2310:
  3733   001C36  0E00               	movlw	0
  3734   001C38  6E1B               	movwf	(dtoa@p+1)^0,c
  3735   001C3A  0E01               	movlw	1
  3736   001C3C  6E1A               	movwf	dtoa@p^0,c
  3737   001C3E  EF25  F00E         	goto	l1192
  3738   001C42                     l1190:
  3739   001C42  C070  F01A         	movff	_prec,dtoa@p
  3740   001C46  C071  F01B         	movff	_prec+1,dtoa@p+1
  3741   001C4A                     l1192:
  3742                           
  3743                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
  3744   001C4A  C06E  F01C         	movff	_width,dtoa@w
  3745   001C4E  C06F  F01D         	movff	_width+1,dtoa@w+1
  3746   001C52                     
  3747                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 536:     if (s
  3748   001C52  501E               	movf	dtoa@s^0,w,c
  3749   001C54  A4D8               	btfss	status,2,c
  3750   001C56  EF2F  F00E         	goto	u2321
  3751   001C5A  EF31  F00E         	goto	u2320
  3752   001C5E                     u2321:
  3753   001C5E  EF38  F00E         	goto	l3068
  3754   001C62                     u2320:
  3755   001C62  A474               	btfss	_flags^0,2,c
  3756   001C64  EF36  F00E         	goto	u2331
  3757   001C68  EF38  F00E         	goto	u2330
  3758   001C6C                     u2331:
  3759   001C6C  EF51  F00E         	goto	l1193
  3760   001C70                     u2330:
  3761   001C70                     l3068:
  3762                           
  3763                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 541:         --w;
  3764   001C70  061C               	decf	dtoa@w^0,f,c
  3765   001C72  A0D8               	btfss	status,0,c
  3766   001C74  061D               	decf	(dtoa@w+1)^0,f,c
  3767   001C76                     
  3768                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
  3769   001C76  501E               	movf	dtoa@s^0,w,c
  3770   001C78  A4D8               	btfss	status,2,c
  3771   001C7A  EF41  F00E         	goto	u2341
  3772   001C7E  EF43  F00E         	goto	u2340
  3773   001C82                     u2341:
  3774   001C82  EF49  F00E         	goto	l3074
  3775   001C86                     u2340:
  3776   001C86  0E00               	movlw	0
  3777   001C88  6E19               	movwf	(_dtoa$1578+1)^0,c
  3778   001C8A  0E2B               	movlw	43
  3779   001C8C  6E18               	movwf	_dtoa$1578^0,c
  3780   001C8E  EF4D  F00E         	goto	l3076
  3781   001C92                     l3074:
  3782   001C92  0E00               	movlw	0
  3783   001C94  6E19               	movwf	(_dtoa$1578+1)^0,c
  3784   001C96  0E2D               	movlw	45
  3785   001C98  6E18               	movwf	_dtoa$1578^0,c
  3786   001C9A                     l3076:
  3787   001C9A  C018  F01E         	movff	_dtoa$1578,dtoa@s
  3788                           
  3789                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 543:     }
  3790   001C9E  EF5D  F00E         	goto	l3082
  3791   001CA2                     l1193:
  3792   001CA2  A674               	btfss	_flags^0,3,c
  3793   001CA4  EF56  F00E         	goto	u2351
  3794   001CA8  EF58  F00E         	goto	u2350
  3795   001CAC                     u2351:
  3796   001CAC  EF5D  F00E         	goto	l3082
  3797   001CB0                     u2350:
  3798   001CB0                     
  3799                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 546:         --w;
  3800   001CB0  061C               	decf	dtoa@w^0,f,c
  3801   001CB2  A0D8               	btfss	status,0,c
  3802   001CB4  061D               	decf	(dtoa@w+1)^0,f,c
  3803   001CB6                     
  3804                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 547:   s = ' ';
  3805   001CB6  0E20               	movlw	32
  3806   001CB8  6E1E               	movwf	dtoa@s^0,c
  3807   001CBA                     l3082:
  3808                           
  3809                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
  3810   001CBA  0E00               	movlw	0
  3811   001CBC  6E20               	movwf	(dtoa@i+1)^0,c
  3812   001CBE  0E1F               	movlw	31
  3813   001CC0  6E1F               	movwf	dtoa@i^0,c
  3814   001CC2                     
  3815                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
  3816   001CC2  0E00               	movlw	0
  3817   001CC4  0100               	movlb	0	; () banked
  3818   001CC6  6F9F               	movwf	(_dbuf+31)& (0+255),b
  3819                           
  3820                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  3821   001CC8  EF94  F00E         	goto	l3096
  3822   001CCC                     l3086:
  3823                           
  3824                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 564:         --i;
  3825   001CCC  061F               	decf	dtoa@i^0,f,c
  3826   001CCE  A0D8               	btfss	status,0,c
  3827   001CD0  0620               	decf	(dtoa@i+1)^0,f,c
  3828   001CD2                     
  3829                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  3830   001CD2  501F               	movf	dtoa@i^0,w,c
  3831   001CD4  0F80               	addlw	low _dbuf
  3832   001CD6  6ED9               	movwf	fsr2l,c
  3833   001CD8  6ADA               	clrf	fsr2h,c
  3834   001CDA  C016  F001         	movff	dtoa@d,___awmod@dividend
  3835   001CDE  C017  F002         	movff	dtoa@d+1,___awmod@dividend+1
  3836   001CE2  0E00               	movlw	0
  3837   001CE4  6E04               	movwf	(___awmod@divisor+1)^0,c
  3838   001CE6  0E0A               	movlw	10
  3839   001CE8  6E03               	movwf	___awmod@divisor^0,c
  3840   001CEA  EC75  F013         	call	___awmod	;wreg free
  3841   001CEE  C001  F007         	movff	?___awmod,abs@a
  3842   001CF2  C002  F008         	movff	?___awmod+1,abs@a+1
  3843   001CF6  EC1D  F018         	call	_abs	;wreg free
  3844   001CFA  5007               	movf	?_abs^0,w,c
  3845   001CFC  0F30               	addlw	48
  3846   001CFE  6EDF               	movwf	indf2,c
  3847   001D00                     
  3848                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 567:         --p;
  3849   001D00  061A               	decf	dtoa@p^0,f,c
  3850   001D02  A0D8               	btfss	status,0,c
  3851   001D04  061B               	decf	(dtoa@p+1)^0,f,c
  3852   001D06                     
  3853                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 571:         --w;
  3854   001D06  061C               	decf	dtoa@w^0,f,c
  3855   001D08  A0D8               	btfss	status,0,c
  3856   001D0A  061D               	decf	(dtoa@w+1)^0,f,c
  3857   001D0C                     
  3858                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
  3859   001D0C  C016  F001         	movff	dtoa@d,___awdiv@dividend
  3860   001D10  C017  F002         	movff	dtoa@d+1,___awdiv@dividend+1
  3861   001D14  0E00               	movlw	0
  3862   001D16  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3863   001D18  0E0A               	movlw	10
  3864   001D1A  6E03               	movwf	___awdiv@divisor^0,c
  3865   001D1C  EC13  F013         	call	___awdiv	;wreg free
  3866   001D20  C001  F016         	movff	?___awdiv,dtoa@d
  3867   001D24  C002  F017         	movff	?___awdiv+1,dtoa@d+1
  3868   001D28                     l3096:
  3869                           
  3870                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  3871   001D28  BE20               	btfsc	(dtoa@i+1)^0,7,c
  3872   001D2A  EF9F  F00E         	goto	u2361
  3873   001D2E  5020               	movf	(dtoa@i+1)^0,w,c
  3874   001D30  E108               	bnz	u2360
  3875   001D32  041F               	decf	dtoa@i^0,w,c
  3876   001D34  A0D8               	btfss	status,0,c
  3877   001D36  EF9F  F00E         	goto	u2361
  3878   001D3A  EFA1  F00E         	goto	u2360
  3879   001D3E                     u2361:
  3880   001D3E  EFCB  F00E         	goto	l3106
  3881   001D42                     u2360:
  3882   001D42  5016               	movf	dtoa@d^0,w,c
  3883   001D44  1017               	iorwf	(dtoa@d+1)^0,w,c
  3884   001D46  A4D8               	btfss	status,2,c
  3885   001D48  EFA8  F00E         	goto	u2371
  3886   001D4C  EFAA  F00E         	goto	u2370
  3887   001D50                     u2371:
  3888   001D50  EF66  F00E         	goto	l3086
  3889   001D54                     u2370:
  3890   001D54  BE1B               	btfsc	(dtoa@p+1)^0,7,c
  3891   001D56  EFB7  F00E         	goto	u2380
  3892   001D5A  501B               	movf	(dtoa@p+1)^0,w,c
  3893   001D5C  E106               	bnz	u2381
  3894   001D5E  041A               	decf	dtoa@p^0,w,c
  3895   001D60  B0D8               	btfsc	status,0,c
  3896   001D62  EFB5  F00E         	goto	u2381
  3897   001D66  EFB7  F00E         	goto	u2380
  3898   001D6A                     u2381:
  3899   001D6A  EF66  F00E         	goto	l3086
  3900   001D6E                     u2380:
  3901   001D6E  BE1D               	btfsc	(dtoa@w+1)^0,7,c
  3902   001D70  EFC2  F00E         	goto	u2391
  3903   001D74  501D               	movf	(dtoa@w+1)^0,w,c
  3904   001D76  E108               	bnz	u2390
  3905   001D78  041C               	decf	dtoa@w^0,w,c
  3906   001D7A  A0D8               	btfss	status,0,c
  3907   001D7C  EFC2  F00E         	goto	u2391
  3908   001D80  EFC4  F00E         	goto	u2390
  3909   001D84                     u2391:
  3910   001D84  EFCB  F00E         	goto	l3106
  3911   001D88                     u2390:
  3912   001D88  B274               	btfsc	_flags^0,1,c
  3913   001D8A  EFC9  F00E         	goto	u2401
  3914   001D8E  EFCB  F00E         	goto	u2400
  3915   001D92                     u2401:
  3916   001D92  EF66  F00E         	goto	l3086
  3917   001D96                     u2400:
  3918   001D96                     l3106:
  3919                           
  3920                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
  3921   001D96  501E               	movf	dtoa@s^0,w,c
  3922   001D98  B4D8               	btfsc	status,2,c
  3923   001D9A  EFD1  F00E         	goto	u2411
  3924   001D9E  EFD3  F00E         	goto	u2410
  3925   001DA2                     u2411:
  3926   001DA2  EFDC  F00E         	goto	l3112
  3927   001DA6                     u2410:
  3928   001DA6                     
  3929                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 577:         --i;
  3930   001DA6  061F               	decf	dtoa@i^0,f,c
  3931   001DA8  A0D8               	btfss	status,0,c
  3932   001DAA  0620               	decf	(dtoa@i+1)^0,f,c
  3933   001DAC                     
  3934                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
  3935   001DAC  501F               	movf	dtoa@i^0,w,c
  3936   001DAE  0F80               	addlw	low _dbuf
  3937   001DB0  6ED9               	movwf	fsr2l,c
  3938   001DB2  6ADA               	clrf	fsr2h,c
  3939   001DB4  C01E  FFDF         	movff	dtoa@s,indf2
  3940   001DB8                     l3112:
  3941                           
  3942                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          int) pad(fp, &dbuf[i], w);
  3943   001DB8  C015  F00E         	movff	dtoa@fp,pad@fp
  3944   001DBC  501F               	movf	dtoa@i^0,w,c
  3945   001DBE  0F80               	addlw	low _dbuf
  3946   001DC0  6E0F               	movwf	pad@buf^0,c
  3947   001DC2  C01C  F010         	movff	dtoa@w,pad@p
  3948   001DC6  C01D  F011         	movff	dtoa@w+1,pad@p+1
  3949   001DCA  EC73  F014         	call	_pad	;wreg free
  3950   001DCE  C00E  F015         	movff	?_pad,?_dtoa
  3951   001DD2  C00F  F016         	movff	?_pad+1,?_dtoa+1
  3952   001DD6  0012               	return		;funcret
  3953   001DD8                     __end_of_dtoa:
  3954                           	callstack 0
  3955                           
  3956 ;; *************** function _pad *****************
  3957 ;; Defined at:
  3958 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  3959 ;; Parameters:    Size  Location     Type
  3960 ;;  fp              1   13[COMRAM] PTR struct _IO_FILE
  3961 ;;		 -> sprintf@f(12), 
  3962 ;;  buf             1   14[COMRAM] PTR unsigned char 
  3963 ;;		 -> dbuf(32), 
  3964 ;;  p               2   15[COMRAM] int 
  3965 ;; Auto vars:     Size  Location     Type
  3966 ;;  i               2   18[COMRAM] int 
  3967 ;; Return value:  Size  Location     Type
  3968 ;;                  2   13[COMRAM] int 
  3969 ;; Registers used:
  3970 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3971 ;; Tracked objects:
  3972 ;;		On entry : 0/0
  3973 ;;		On exit  : 0/0
  3974 ;;		Unchanged: 0/0
  3975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3976 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3977 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3978 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3979 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3980 ;;Total ram usage:        7 bytes
  3981 ;; Hardware stack levels used: 1
  3982 ;; Hardware stack levels required when called: 5
  3983 ;; This function calls:
  3984 ;;		_fputc
  3985 ;;		_fputs
  3986 ;;		_strlen
  3987 ;; This function is called by:
  3988 ;;		_dtoa
  3989 ;;		_otoa
  3990 ;;		_utoa
  3991 ;;		_xtoa
  3992 ;; This function uses a non-reentrant model
  3993 ;;
  3994                           
  3995                           	psect	text13
  3996   0028E6                     __ptext13:
  3997                           	callstack 0
  3998   0028E6                     _pad:
  3999                           	callstack 20
  4000   0028E6                     
  4001                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 193: static int p
      +                          ad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c
      +                          : 195:     int i;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 
      +                          199:     if (flags & (1 << 0)) {
  4002   0028E6  A074               	btfss	_flags^0,0,c
  4003   0028E8  EF78  F014         	goto	u2131
  4004   0028EC  EF7A  F014         	goto	u2130
  4005   0028F0                     u2131:
  4006   0028F0  EF80  F014         	goto	l2980
  4007   0028F4                     u2130:
  4008   0028F4                     
  4009                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
  4010   0028F4  C00F  F009         	movff	pad@buf,fputs@s
  4011   0028F8  C00E  F00A         	movff	pad@fp,fputs@fp
  4012   0028FC  ECFF  F017         	call	_fputs	;wreg free
  4013   002900                     l2980:
  4014                           
  4015                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
  4016   002900  BE11               	btfsc	(pad@p+1)^0,7,c
  4017   002902  EF87  F014         	goto	u2140
  4018   002906  EF85  F014         	goto	u2141
  4019   00290A                     u2141:
  4020   00290A  EF8B  F014         	goto	l1164
  4021   00290E                     u2140:
  4022   00290E                     
  4023                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  4024   00290E  0E00               	movlw	0
  4025   002910  6E11               	movwf	(pad@p+1)^0,c
  4026   002912  0E00               	movlw	0
  4027   002914  6E10               	movwf	pad@p^0,c
  4028   002916                     l1164:
  4029                           
  4030                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  4031   002916  0E00               	movlw	0
  4032   002918  6E14               	movwf	(pad@i+1)^0,c
  4033   00291A  0E00               	movlw	0
  4034   00291C  6E13               	movwf	pad@i^0,c
  4035                           
  4036                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  4037   00291E  EF9B  F014         	goto	l2988
  4038   002922                     l2984:
  4039                           
  4040                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  4041   002922  0E00               	movlw	0
  4042   002924  6E02               	movwf	(fputc@c+1)^0,c
  4043   002926  0E20               	movlw	32
  4044   002928  6E01               	movwf	fputc@c^0,c
  4045   00292A  C00E  F003         	movff	pad@fp,fputc@fp
  4046   00292E  ECCD  F013         	call	_fputc	;wreg free
  4047   002932                     
  4048                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 211:         ++i;
  4049   002932  4A13               	infsnz	pad@i^0,f,c
  4050   002934  2A14               	incf	(pad@i+1)^0,f,c
  4051   002936                     l2988:
  4052                           
  4053                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  4054   002936  5010               	movf	pad@p^0,w,c
  4055   002938  5C13               	subwf	pad@i^0,w,c
  4056   00293A  5014               	movf	(pad@i+1)^0,w,c
  4057   00293C  0A80               	xorlw	128
  4058   00293E  6E12               	movwf	??_pad^0,c
  4059   002940  5011               	movf	(pad@p+1)^0,w,c
  4060   002942  0A80               	xorlw	128
  4061   002944  5812               	subwfb	??_pad^0,w,c
  4062   002946  A0D8               	btfss	status,0,c
  4063   002948  EFA8  F014         	goto	u2151
  4064   00294C  EFAA  F014         	goto	u2150
  4065   002950                     u2151:
  4066   002950  EF91  F014         	goto	l2984
  4067   002954                     u2150:
  4068   002954                     
  4069                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
  4070   002954  B074               	btfsc	_flags^0,0,c
  4071   002956  EFAF  F014         	goto	u2161
  4072   00295A  EFB1  F014         	goto	u2160
  4073   00295E                     u2161:
  4074   00295E  EFB7  F014         	goto	l2992
  4075   002962                     u2160:
  4076   002962                     
  4077                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  4078   002962  C00F  F009         	movff	pad@buf,fputs@s
  4079   002966  C00E  F00A         	movff	pad@fp,fputs@fp
  4080   00296A  ECFF  F017         	call	_fputs	;wreg free
  4081   00296E                     l2992:
  4082                           
  4083                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 224:     return (
      +                          int)(strlen(buf) + (size_t)p);
  4084   00296E  C00F  F001         	movff	pad@buf,strlen@s
  4085   002972  EC4F  F018         	call	_strlen	;wreg free
  4086   002976  5010               	movf	pad@p^0,w,c
  4087   002978  2401               	addwf	?_strlen^0,w,c
  4088   00297A  6E0E               	movwf	?_pad^0,c
  4089   00297C  5011               	movf	(pad@p+1)^0,w,c
  4090   00297E  2002               	addwfc	(?_strlen+1)^0,w,c
  4091   002980  6E0F               	movwf	(?_pad+1)^0,c
  4092   002982  0012               	return		;funcret
  4093   002984                     __end_of_pad:
  4094                           	callstack 0
  4095                           
  4096 ;; *************** function _strlen *****************
  4097 ;; Defined at:
  4098 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strlen.c"
  4099 ;; Parameters:    Size  Location     Type
  4100 ;;  s               1    0[COMRAM] PTR const unsigned char 
  4101 ;;		 -> dbuf(32), 
  4102 ;; Auto vars:     Size  Location     Type
  4103 ;;  a               1    2[COMRAM] PTR const unsigned char 
  4104 ;;		 -> dbuf(32), 
  4105 ;; Return value:  Size  Location     Type
  4106 ;;                  2    0[COMRAM] unsigned int 
  4107 ;; Registers used:
  4108 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4109 ;; Tracked objects:
  4110 ;;		On entry : 0/0
  4111 ;;		On exit  : 0/0
  4112 ;;		Unchanged: 0/0
  4113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4114 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4115 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4117 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4118 ;;Total ram usage:        3 bytes
  4119 ;; Hardware stack levels used: 1
  4120 ;; Hardware stack levels required when called: 2
  4121 ;; This function calls:
  4122 ;;		Nothing
  4123 ;; This function is called by:
  4124 ;;		_pad
  4125 ;; This function uses a non-reentrant model
  4126 ;;
  4127                           
  4128                           	psect	text14
  4129   00309E                     __ptext14:
  4130                           	callstack 0
  4131   00309E                     _strlen:
  4132                           	callstack 22
  4133   00309E  C001  F003         	movff	strlen@s,strlen@a
  4134   0030A2  EF54  F018         	goto	l2846
  4135   0030A6                     l2844:
  4136   0030A6  2A01               	incf	strlen@s^0,f,c
  4137   0030A8                     l2846:
  4138   0030A8  5001               	movf	strlen@s^0,w,c
  4139   0030AA  6ED9               	movwf	fsr2l,c
  4140   0030AC  6ADA               	clrf	fsr2h,c
  4141   0030AE  50DF               	movf	indf2,w,c
  4142   0030B0  A4D8               	btfss	status,2,c
  4143   0030B2  EF5D  F018         	goto	u1941
  4144   0030B6  EF5F  F018         	goto	u1940
  4145   0030BA                     u1941:
  4146   0030BA  EF53  F018         	goto	l2844
  4147   0030BE                     u1940:
  4148   0030BE  5003               	movf	strlen@a^0,w,c
  4149   0030C0  5C01               	subwf	strlen@s^0,w,c
  4150   0030C2  6E01               	movwf	?_strlen^0,c
  4151   0030C4  6A02               	clrf	(?_strlen+1)^0,c
  4152   0030C6  BE01               	btfsc	?_strlen^0,7,c
  4153   0030C8  0602               	decf	(?_strlen+1)^0,f,c
  4154   0030CA  0012               	return		;funcret
  4155   0030CC                     __end_of_strlen:
  4156                           	callstack 0
  4157                           
  4158 ;; *************** function _fputs *****************
  4159 ;; Defined at:
  4160 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputs.c"
  4161 ;; Parameters:    Size  Location     Type
  4162 ;;  s               1    8[COMRAM] PTR const unsigned char 
  4163 ;;		 -> dbuf(32), 
  4164 ;;  fp              1    9[COMRAM] PTR struct _IO_FILE
  4165 ;;		 -> sprintf@f(12), 
  4166 ;; Auto vars:     Size  Location     Type
  4167 ;;  i               2   11[COMRAM] int 
  4168 ;;  c               1   10[COMRAM] unsigned char 
  4169 ;; Return value:  Size  Location     Type
  4170 ;;                  2    8[COMRAM] int 
  4171 ;; Registers used:
  4172 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4173 ;; Tracked objects:
  4174 ;;		On entry : 0/0
  4175 ;;		On exit  : 0/0
  4176 ;;		Unchanged: 0/0
  4177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4178 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4179 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4181 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4182 ;;Total ram usage:        5 bytes
  4183 ;; Hardware stack levels used: 1
  4184 ;; Hardware stack levels required when called: 4
  4185 ;; This function calls:
  4186 ;;		_fputc
  4187 ;; This function is called by:
  4188 ;;		_pad
  4189 ;; This function uses a non-reentrant model
  4190 ;;
  4191                           
  4192                           	psect	text15
  4193   002FFE                     __ptext15:
  4194                           	callstack 0
  4195   002FFE                     _fputs:
  4196                           	callstack 20
  4197   002FFE  0E00               	movlw	0
  4198   003000  6E0D               	movwf	(fputs@i+1)^0,c
  4199   003002  0E00               	movlw	0
  4200   003004  6E0C               	movwf	fputs@i^0,c
  4201   003006  EF0E  F018         	goto	l2840
  4202   00300A                     l2836:
  4203   00300A  C00B  F001         	movff	fputs@c,fputc@c
  4204   00300E  6A02               	clrf	(fputc@c+1)^0,c
  4205   003010  C00A  F003         	movff	fputs@fp,fputc@fp
  4206   003014  ECCD  F013         	call	_fputc	;wreg free
  4207   003018  4A0C               	infsnz	fputs@i^0,f,c
  4208   00301A  2A0D               	incf	(fputs@i+1)^0,f,c
  4209   00301C                     l2840:
  4210   00301C  5009               	movf	fputs@s^0,w,c
  4211   00301E  240C               	addwf	fputs@i^0,w,c
  4212   003020  6ED9               	movwf	fsr2l,c
  4213   003022  6ADA               	clrf	fsr2h,c
  4214   003024  50DF               	movf	indf2,w,c
  4215   003026  6E0B               	movwf	fputs@c^0,c
  4216   003028  500B               	movf	fputs@c^0,w,c
  4217   00302A  A4D8               	btfss	status,2,c
  4218   00302C  EF1A  F018         	goto	u1931
  4219   003030  EF1C  F018         	goto	u1930
  4220   003034                     u1931:
  4221   003034  EF05  F018         	goto	l2836
  4222   003038                     u1930:
  4223   003038  0012               	return		;funcret
  4224   00303A                     __end_of_fputs:
  4225                           	callstack 0
  4226                           
  4227 ;; *************** function _abs *****************
  4228 ;; Defined at:
  4229 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\abs.c"
  4230 ;; Parameters:    Size  Location     Type
  4231 ;;  a               2    6[COMRAM] int 
  4232 ;; Auto vars:     Size  Location     Type
  4233 ;;		None
  4234 ;; Return value:  Size  Location     Type
  4235 ;;                  2    6[COMRAM] int 
  4236 ;; Registers used:
  4237 ;;		wreg, status,2, status,0
  4238 ;; Tracked objects:
  4239 ;;		On entry : 0/0
  4240 ;;		On exit  : 0/0
  4241 ;;		Unchanged: 0/0
  4242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4243 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4245 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4246 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4247 ;;Total ram usage:        4 bytes
  4248 ;; Hardware stack levels used: 1
  4249 ;; Hardware stack levels required when called: 2
  4250 ;; This function calls:
  4251 ;;		Nothing
  4252 ;; This function is called by:
  4253 ;;		_dtoa
  4254 ;; This function uses a non-reentrant model
  4255 ;;
  4256                           
  4257                           	psect	text16
  4258   00303A                     __ptext16:
  4259                           	callstack 0
  4260   00303A                     _abs:
  4261                           	callstack 23
  4262   00303A  BE08               	btfsc	(abs@a+1)^0,7,c
  4263   00303C  EF22  F018         	goto	u2171
  4264   003040  EF24  F018         	goto	u2170
  4265   003044                     u2171:
  4266   003044  EF2A  F018         	goto	l1352
  4267   003048                     u2170:
  4268   003048  C007  F007         	movff	abs@a,?_abs
  4269   00304C  C008  F008         	movff	abs@a+1,?_abs+1
  4270   003050  EF36  F018         	goto	l1355
  4271   003054                     l1352:
  4272   003054  C007  F009         	movff	abs@a,??_abs
  4273   003058  C008  F00A         	movff	abs@a+1,??_abs+1
  4274   00305C  1E09               	comf	??_abs^0,f,c
  4275   00305E  1E0A               	comf	(??_abs+1)^0,f,c
  4276   003060  4A09               	infsnz	??_abs^0,f,c
  4277   003062  2A0A               	incf	(??_abs+1)^0,f,c
  4278   003064  C009  F007         	movff	??_abs,?_abs
  4279   003068  C00A  F008         	movff	??_abs+1,?_abs+1
  4280   00306C                     l1355:
  4281   00306C  0012               	return		;funcret
  4282   00306E                     __end_of_abs:
  4283                           	callstack 0
  4284                           
  4285 ;; *************** function ___awmod *****************
  4286 ;; Defined at:
  4287 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  4288 ;; Parameters:    Size  Location     Type
  4289 ;;  dividend        2    0[COMRAM] int 
  4290 ;;  divisor         2    2[COMRAM] int 
  4291 ;; Auto vars:     Size  Location     Type
  4292 ;;  sign            1    5[COMRAM] unsigned char 
  4293 ;;  counter         1    4[COMRAM] unsigned char 
  4294 ;; Return value:  Size  Location     Type
  4295 ;;                  2    0[COMRAM] int 
  4296 ;; Registers used:
  4297 ;;		wreg, status,2, status,0
  4298 ;; Tracked objects:
  4299 ;;		On entry : 0/0
  4300 ;;		On exit  : 0/0
  4301 ;;		Unchanged: 0/0
  4302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4303 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4304 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4306 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4307 ;;Total ram usage:        6 bytes
  4308 ;; Hardware stack levels used: 1
  4309 ;; Hardware stack levels required when called: 2
  4310 ;; This function calls:
  4311 ;;		Nothing
  4312 ;; This function is called by:
  4313 ;;		_dtoa
  4314 ;; This function uses a non-reentrant model
  4315 ;;
  4316                           
  4317                           	psect	text17
  4318   0026EA                     __ptext17:
  4319                           	callstack 0
  4320   0026EA                     ___awmod:
  4321                           	callstack 23
  4322   0026EA  0E00               	movlw	0
  4323   0026EC  6E06               	movwf	___awmod@sign^0,c
  4324   0026EE  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  4325   0026F0  EF7E  F013         	goto	u2010
  4326   0026F4  EF7C  F013         	goto	u2011
  4327   0026F8                     u2011:
  4328   0026F8  EF84  F013         	goto	l2910
  4329   0026FC                     u2010:
  4330   0026FC  6C01               	negf	___awmod@dividend^0,c
  4331   0026FE  1E02               	comf	(___awmod@dividend+1)^0,f,c
  4332   002700  B0D8               	btfsc	status,0,c
  4333   002702  2A02               	incf	(___awmod@dividend+1)^0,f,c
  4334   002704  0E01               	movlw	1
  4335   002706  6E06               	movwf	___awmod@sign^0,c
  4336   002708                     l2910:
  4337   002708  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  4338   00270A  EF8B  F013         	goto	u2020
  4339   00270E  EF89  F013         	goto	u2021
  4340   002712                     u2021:
  4341   002712  EF8F  F013         	goto	l2914
  4342   002716                     u2020:
  4343   002716  6C03               	negf	___awmod@divisor^0,c
  4344   002718  1E04               	comf	(___awmod@divisor+1)^0,f,c
  4345   00271A  B0D8               	btfsc	status,0,c
  4346   00271C  2A04               	incf	(___awmod@divisor+1)^0,f,c
  4347   00271E                     l2914:
  4348   00271E  5003               	movf	___awmod@divisor^0,w,c
  4349   002720  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  4350   002722  B4D8               	btfsc	status,2,c
  4351   002724  EF96  F013         	goto	u2031
  4352   002728  EF98  F013         	goto	u2030
  4353   00272C                     u2031:
  4354   00272C  EFBC  F013         	goto	l2930
  4355   002730                     u2030:
  4356   002730  0E01               	movlw	1
  4357   002732  6E05               	movwf	___awmod@counter^0,c
  4358   002734  EFA0  F013         	goto	l2920
  4359   002738                     l2918:
  4360   002738  90D8               	bcf	status,0,c
  4361   00273A  3603               	rlcf	___awmod@divisor^0,f,c
  4362   00273C  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  4363   00273E  2A05               	incf	___awmod@counter^0,f,c
  4364   002740                     l2920:
  4365   002740  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  4366   002742  EFA5  F013         	goto	u2041
  4367   002746  EFA7  F013         	goto	u2040
  4368   00274A                     u2041:
  4369   00274A  EF9C  F013         	goto	l2918
  4370   00274E                     u2040:
  4371   00274E                     l2922:
  4372   00274E  5003               	movf	___awmod@divisor^0,w,c
  4373   002750  5C01               	subwf	___awmod@dividend^0,w,c
  4374   002752  5004               	movf	(___awmod@divisor+1)^0,w,c
  4375   002754  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  4376   002756  A0D8               	btfss	status,0,c
  4377   002758  EFB0  F013         	goto	u2051
  4378   00275C  EFB2  F013         	goto	u2050
  4379   002760                     u2051:
  4380   002760  EFB6  F013         	goto	l2926
  4381   002764                     u2050:
  4382   002764  5003               	movf	___awmod@divisor^0,w,c
  4383   002766  5E01               	subwf	___awmod@dividend^0,f,c
  4384   002768  5004               	movf	(___awmod@divisor+1)^0,w,c
  4385   00276A  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  4386   00276C                     l2926:
  4387   00276C  90D8               	bcf	status,0,c
  4388   00276E  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  4389   002770  3203               	rrcf	___awmod@divisor^0,f,c
  4390   002772  2E05               	decfsz	___awmod@counter^0,f,c
  4391   002774  EFA7  F013         	goto	l2922
  4392   002778                     l2930:
  4393   002778  5006               	movf	___awmod@sign^0,w,c
  4394   00277A  B4D8               	btfsc	status,2,c
  4395   00277C  EFC2  F013         	goto	u2061
  4396   002780  EFC4  F013         	goto	u2060
  4397   002784                     u2061:
  4398   002784  EFC8  F013         	goto	l2934
  4399   002788                     u2060:
  4400   002788  6C01               	negf	___awmod@dividend^0,c
  4401   00278A  1E02               	comf	(___awmod@dividend+1)^0,f,c
  4402   00278C  B0D8               	btfsc	status,0,c
  4403   00278E  2A02               	incf	(___awmod@dividend+1)^0,f,c
  4404   002790                     l2934:
  4405   002790  C001  F001         	movff	___awmod@dividend,?___awmod
  4406   002794  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  4407   002798  0012               	return		;funcret
  4408   00279A                     __end_of___awmod:
  4409                           	callstack 0
  4410                           
  4411 ;; *************** function ___awdiv *****************
  4412 ;; Defined at:
  4413 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  4414 ;; Parameters:    Size  Location     Type
  4415 ;;  dividend        2    0[COMRAM] int 
  4416 ;;  divisor         2    2[COMRAM] int 
  4417 ;; Auto vars:     Size  Location     Type
  4418 ;;  quotient        2    6[COMRAM] int 
  4419 ;;  sign            1    5[COMRAM] unsigned char 
  4420 ;;  counter         1    4[COMRAM] unsigned char 
  4421 ;; Return value:  Size  Location     Type
  4422 ;;                  2    0[COMRAM] int 
  4423 ;; Registers used:
  4424 ;;		wreg, status,2, status,0
  4425 ;; Tracked objects:
  4426 ;;		On entry : 0/0
  4427 ;;		On exit  : 0/0
  4428 ;;		Unchanged: 0/0
  4429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4430 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4431 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4433 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4434 ;;Total ram usage:        8 bytes
  4435 ;; Hardware stack levels used: 1
  4436 ;; Hardware stack levels required when called: 2
  4437 ;; This function calls:
  4438 ;;		Nothing
  4439 ;; This function is called by:
  4440 ;;		_dtoa
  4441 ;; This function uses a non-reentrant model
  4442 ;;
  4443                           
  4444                           	psect	text18
  4445   002626                     __ptext18:
  4446                           	callstack 0
  4447   002626                     ___awdiv:
  4448                           	callstack 23
  4449   002626  0E00               	movlw	0
  4450   002628  6E06               	movwf	___awdiv@sign^0,c
  4451   00262A  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  4452   00262C  EF1C  F013         	goto	u1950
  4453   002630  EF1A  F013         	goto	u1951
  4454   002634                     u1951:
  4455   002634  EF22  F013         	goto	l2866
  4456   002638                     u1950:
  4457   002638  6C03               	negf	___awdiv@divisor^0,c
  4458   00263A  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  4459   00263C  B0D8               	btfsc	status,0,c
  4460   00263E  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  4461   002640  0E01               	movlw	1
  4462   002642  6E06               	movwf	___awdiv@sign^0,c
  4463   002644                     l2866:
  4464   002644  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  4465   002646  EF29  F013         	goto	u1960
  4466   00264A  EF27  F013         	goto	u1961
  4467   00264E                     u1961:
  4468   00264E  EF2F  F013         	goto	l2872
  4469   002652                     u1960:
  4470   002652  6C01               	negf	___awdiv@dividend^0,c
  4471   002654  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  4472   002656  B0D8               	btfsc	status,0,c
  4473   002658  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  4474   00265A  0E01               	movlw	1
  4475   00265C  1A06               	xorwf	___awdiv@sign^0,f,c
  4476   00265E                     l2872:
  4477   00265E  0E00               	movlw	0
  4478   002660  6E08               	movwf	(___awdiv@quotient+1)^0,c
  4479   002662  0E00               	movlw	0
  4480   002664  6E07               	movwf	___awdiv@quotient^0,c
  4481   002666  5003               	movf	___awdiv@divisor^0,w,c
  4482   002668  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  4483   00266A  B4D8               	btfsc	status,2,c
  4484   00266C  EF3A  F013         	goto	u1971
  4485   002670  EF3C  F013         	goto	u1970
  4486   002674                     u1971:
  4487   002674  EF64  F013         	goto	l2894
  4488   002678                     u1970:
  4489   002678  0E01               	movlw	1
  4490   00267A  6E05               	movwf	___awdiv@counter^0,c
  4491   00267C  EF44  F013         	goto	l2880
  4492   002680                     l2878:
  4493   002680  90D8               	bcf	status,0,c
  4494   002682  3603               	rlcf	___awdiv@divisor^0,f,c
  4495   002684  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  4496   002686  2A05               	incf	___awdiv@counter^0,f,c
  4497   002688                     l2880:
  4498   002688  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  4499   00268A  EF49  F013         	goto	u1981
  4500   00268E  EF4B  F013         	goto	u1980
  4501   002692                     u1981:
  4502   002692  EF40  F013         	goto	l2878
  4503   002696                     u1980:
  4504   002696                     l2882:
  4505   002696  90D8               	bcf	status,0,c
  4506   002698  3607               	rlcf	___awdiv@quotient^0,f,c
  4507   00269A  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  4508   00269C  5003               	movf	___awdiv@divisor^0,w,c
  4509   00269E  5C01               	subwf	___awdiv@dividend^0,w,c
  4510   0026A0  5004               	movf	(___awdiv@divisor+1)^0,w,c
  4511   0026A2  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  4512   0026A4  A0D8               	btfss	status,0,c
  4513   0026A6  EF57  F013         	goto	u1991
  4514   0026AA  EF59  F013         	goto	u1990
  4515   0026AE                     u1991:
  4516   0026AE  EF5E  F013         	goto	l2890
  4517   0026B2                     u1990:
  4518   0026B2  5003               	movf	___awdiv@divisor^0,w,c
  4519   0026B4  5E01               	subwf	___awdiv@dividend^0,f,c
  4520   0026B6  5004               	movf	(___awdiv@divisor+1)^0,w,c
  4521   0026B8  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  4522   0026BA  8007               	bsf	___awdiv@quotient^0,0,c
  4523   0026BC                     l2890:
  4524   0026BC  90D8               	bcf	status,0,c
  4525   0026BE  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  4526   0026C0  3203               	rrcf	___awdiv@divisor^0,f,c
  4527   0026C2  2E05               	decfsz	___awdiv@counter^0,f,c
  4528   0026C4  EF4B  F013         	goto	l2882
  4529   0026C8                     l2894:
  4530   0026C8  5006               	movf	___awdiv@sign^0,w,c
  4531   0026CA  B4D8               	btfsc	status,2,c
  4532   0026CC  EF6A  F013         	goto	u2001
  4533   0026D0  EF6C  F013         	goto	u2000
  4534   0026D4                     u2001:
  4535   0026D4  EF70  F013         	goto	l2898
  4536   0026D8                     u2000:
  4537   0026D8  6C07               	negf	___awdiv@quotient^0,c
  4538   0026DA  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  4539   0026DC  B0D8               	btfsc	status,0,c
  4540   0026DE  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  4541   0026E0                     l2898:
  4542   0026E0  C007  F001         	movff	___awdiv@quotient,?___awdiv
  4543   0026E4  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  4544   0026E8  0012               	return		;funcret
  4545   0026EA                     __end_of___awdiv:
  4546                           	callstack 0
  4547                           
  4548 ;; *************** function _ctoa *****************
  4549 ;; Defined at:
  4550 ;;		line 476 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  4551 ;; Parameters:    Size  Location     Type
  4552 ;;  fp              1    8[COMRAM] PTR struct _IO_FILE
  4553 ;;		 -> sprintf@f(12), 
  4554 ;;  c               1    9[COMRAM] unsigned char 
  4555 ;; Auto vars:     Size  Location     Type
  4556 ;;  w               2   13[COMRAM] int 
  4557 ;;  l               2   11[COMRAM] int 
  4558 ;; Return value:  Size  Location     Type
  4559 ;;                  2    8[COMRAM] int 
  4560 ;; Registers used:
  4561 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4562 ;; Tracked objects:
  4563 ;;		On entry : 0/0
  4564 ;;		On exit  : 0/0
  4565 ;;		Unchanged: 0/0
  4566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4567 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4568 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4569 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4570 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4571 ;;Total ram usage:        7 bytes
  4572 ;; Hardware stack levels used: 1
  4573 ;; Hardware stack levels required when called: 4
  4574 ;; This function calls:
  4575 ;;		_fputc
  4576 ;; This function is called by:
  4577 ;;		_vfpfcnvrt
  4578 ;; This function uses a non-reentrant model
  4579 ;;
  4580                           
  4581                           	psect	text19
  4582   00255E                     __ptext19:
  4583                           	callstack 0
  4584   00255E                     _ctoa:
  4585                           	callstack 22
  4586   00255E                     
  4587                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 476: static int c
      +                          toa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt
      +                          .c: 477: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 478:   
      +                            int l,w;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 481:   
      +                            w = width ? width - 1 : width;
  4588   00255E  506E               	movf	_width^0,w,c
  4589   002560  106F               	iorwf	(_width+1)^0,w,c
  4590   002562  A4D8               	btfss	status,2,c
  4591   002564  EFB6  F012         	goto	u2231
  4592   002568  EFB8  F012         	goto	u2230
  4593   00256C                     u2231:
  4594   00256C  EFBE  F012         	goto	l3032
  4595   002570                     u2230:
  4596   002570  C06E  F00E         	movff	_width,ctoa@w
  4597   002574  C06F  F00F         	movff	_width+1,ctoa@w+1
  4598   002578  EFC4  F012         	goto	l3034
  4599   00257C                     l3032:
  4600   00257C  0EFF               	movlw	255
  4601   00257E  246E               	addwf	_width^0,w,c
  4602   002580  6E0E               	movwf	ctoa@w^0,c
  4603   002582  0EFF               	movlw	255
  4604   002584  206F               	addwfc	(_width+1)^0,w,c
  4605   002586  6E0F               	movwf	(ctoa@w+1)^0,c
  4606   002588                     l3034:
  4607                           
  4608                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 485:     if (flag
      +                          s & (1 << 0)) {
  4609   002588  A074               	btfss	_flags^0,0,c
  4610   00258A  EFC9  F012         	goto	u2241
  4611   00258E  EFCB  F012         	goto	u2240
  4612   002592                     u2241:
  4613   002592  EFD2  F012         	goto	l3038
  4614   002596                     u2240:
  4615   002596                     
  4616                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 486:         fput
      +                          c(c, fp);
  4617   002596  C00A  F001         	movff	ctoa@c,fputc@c
  4618   00259A  6A02               	clrf	(fputc@c+1)^0,c
  4619   00259C  C009  F003         	movff	ctoa@fp,fputc@fp
  4620   0025A0  ECCD  F013         	call	_fputc	;wreg free
  4621   0025A4                     l3038:
  4622                           
  4623                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 491:     w = (w <
      +                           0) ? 0 : w;
  4624   0025A4  BE0F               	btfsc	(ctoa@w+1)^0,7,c
  4625   0025A6  EFD7  F012         	goto	u2251
  4626   0025AA  EFD9  F012         	goto	u2250
  4627   0025AE                     u2251:
  4628   0025AE  EFDB  F012         	goto	l3042
  4629   0025B2                     u2250:
  4630   0025B2  EFDF  F012         	goto	l1180
  4631   0025B6                     l3042:
  4632   0025B6  0E00               	movlw	0
  4633   0025B8  6E0F               	movwf	(ctoa@w+1)^0,c
  4634   0025BA  0E00               	movlw	0
  4635   0025BC  6E0E               	movwf	ctoa@w^0,c
  4636   0025BE                     l1180:
  4637                           
  4638                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 492:     l = 0;
  4639   0025BE  0E00               	movlw	0
  4640   0025C0  6E0D               	movwf	(ctoa@l+1)^0,c
  4641   0025C2  0E00               	movlw	0
  4642   0025C4  6E0C               	movwf	ctoa@l^0,c
  4643                           
  4644                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 493:     while (l
      +                           < w) {
  4645   0025C6  EFEF  F012         	goto	l3048
  4646   0025CA                     l3044:
  4647                           
  4648                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 494:         fput
      +                          c(' ', fp);
  4649   0025CA  0E00               	movlw	0
  4650   0025CC  6E02               	movwf	(fputc@c+1)^0,c
  4651   0025CE  0E20               	movlw	32
  4652   0025D0  6E01               	movwf	fputc@c^0,c
  4653   0025D2  C009  F003         	movff	ctoa@fp,fputc@fp
  4654   0025D6  ECCD  F013         	call	_fputc	;wreg free
  4655   0025DA                     
  4656                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 495:         ++l;
  4657   0025DA  4A0C               	infsnz	ctoa@l^0,f,c
  4658   0025DC  2A0D               	incf	(ctoa@l+1)^0,f,c
  4659   0025DE                     l3048:
  4660                           
  4661                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 493:     while (l
      +                           < w) {
  4662   0025DE  500E               	movf	ctoa@w^0,w,c
  4663   0025E0  5C0C               	subwf	ctoa@l^0,w,c
  4664   0025E2  500D               	movf	(ctoa@l+1)^0,w,c
  4665   0025E4  0A80               	xorlw	128
  4666   0025E6  6E0B               	movwf	??_ctoa^0,c
  4667   0025E8  500F               	movf	(ctoa@w+1)^0,w,c
  4668   0025EA  0A80               	xorlw	128
  4669   0025EC  580B               	subwfb	??_ctoa^0,w,c
  4670   0025EE  A0D8               	btfss	status,0,c
  4671   0025F0  EFFC  F012         	goto	u2261
  4672   0025F4  EFFE  F012         	goto	u2260
  4673   0025F8                     u2261:
  4674   0025F8  EFE5  F012         	goto	l3044
  4675   0025FC                     u2260:
  4676   0025FC                     
  4677                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 499:     if (!(fl
      +                          ags & (1 << 0))) {
  4678   0025FC  B074               	btfsc	_flags^0,0,c
  4679   0025FE  EF03  F013         	goto	u2271
  4680   002602  EF05  F013         	goto	u2270
  4681   002606                     u2271:
  4682   002606  EF0C  F013         	goto	l3052
  4683   00260A                     u2270:
  4684   00260A                     
  4685                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 501:         fput
      +                          c(c, fp);
  4686   00260A  C00A  F001         	movff	ctoa@c,fputc@c
  4687   00260E  6A02               	clrf	(fputc@c+1)^0,c
  4688   002610  C009  F003         	movff	ctoa@fp,fputc@fp
  4689   002614  ECCD  F013         	call	_fputc	;wreg free
  4690   002618                     l3052:
  4691                           
  4692                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 507:     return l
      +                          +1;
  4693   002618  0E01               	movlw	1
  4694   00261A  240C               	addwf	ctoa@l^0,w,c
  4695   00261C  6E09               	movwf	?_ctoa^0,c
  4696   00261E  0E00               	movlw	0
  4697   002620  200D               	addwfc	(ctoa@l+1)^0,w,c
  4698   002622  6E0A               	movwf	(?_ctoa+1)^0,c
  4699   002624  0012               	return		;funcret
  4700   002626                     __end_of_ctoa:
  4701                           	callstack 0
  4702                           
  4703 ;; *************** function _fputc *****************
  4704 ;; Defined at:
  4705 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
  4706 ;; Parameters:    Size  Location     Type
  4707 ;;  c               2    0[COMRAM] int 
  4708 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  4709 ;;		 -> sprintf@f(12), 
  4710 ;; Auto vars:     Size  Location     Type
  4711 ;;		None
  4712 ;; Return value:  Size  Location     Type
  4713 ;;                  2    0[COMRAM] int 
  4714 ;; Registers used:
  4715 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4716 ;; Tracked objects:
  4717 ;;		On entry : 0/0
  4718 ;;		On exit  : 0/0
  4719 ;;		Unchanged: 0/0
  4720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4721 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4723 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4724 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4725 ;;Total ram usage:        8 bytes
  4726 ;; Hardware stack levels used: 1
  4727 ;; Hardware stack levels required when called: 3
  4728 ;; This function calls:
  4729 ;;		_putch
  4730 ;; This function is called by:
  4731 ;;		_pad
  4732 ;;		_ctoa
  4733 ;;		_vfpfcnvrt
  4734 ;;		_fputs
  4735 ;; This function uses a non-reentrant model
  4736 ;;
  4737                           
  4738                           	psect	text20
  4739   00279A                     __ptext20:
  4740                           	callstack 0
  4741   00279A                     _fputc:
  4742                           	callstack 20
  4743   00279A  5003               	movf	fputc@fp^0,w,c
  4744   00279C  B4D8               	btfsc	status,2,c
  4745   00279E  EFD3  F013         	goto	u1891
  4746   0027A2  EFD5  F013         	goto	u1890
  4747   0027A6                     u1891:
  4748   0027A6  EFDD  F013         	goto	l2824
  4749   0027AA                     u1890:
  4750   0027AA  5003               	movf	fputc@fp^0,w,c
  4751   0027AC  A4D8               	btfss	status,2,c
  4752   0027AE  EFDB  F013         	goto	u1901
  4753   0027B2  EFDD  F013         	goto	u1900
  4754   0027B6                     u1901:
  4755   0027B6  EFE2  F013         	goto	l2826
  4756   0027BA                     u1900:
  4757   0027BA                     l2824:
  4758   0027BA  5001               	movf	fputc@c^0,w,c
  4759   0027BC  ECD0  F018         	call	_putch
  4760   0027C0  EF21  F014         	goto	l1367
  4761   0027C4                     l2826:
  4762   0027C4  5003               	movf	fputc@fp^0,w,c
  4763   0027C6  6ED9               	movwf	fsr2l,c
  4764   0027C8  6ADA               	clrf	fsr2h,c
  4765   0027CA  0E0A               	movlw	10
  4766   0027CC  26D9               	addwf	fsr2l,f,c
  4767   0027CE  50DE               	movf	postinc2,w,c
  4768   0027D0  10DE               	iorwf	postinc2,w,c
  4769   0027D2  B4D8               	btfsc	status,2,c
  4770   0027D4  EFEE  F013         	goto	u1911
  4771   0027D8  EFF0  F013         	goto	u1910
  4772   0027DC                     u1911:
  4773   0027DC  EF09  F014         	goto	l2830
  4774   0027E0                     u1910:
  4775   0027E0  5003               	movf	fputc@fp^0,w,c
  4776   0027E2  6ED9               	movwf	fsr2l,c
  4777   0027E4  6ADA               	clrf	fsr2h,c
  4778   0027E6  0E0A               	movlw	10
  4779   0027E8  26D9               	addwf	fsr2l,f,c
  4780   0027EA  5003               	movf	fputc@fp^0,w,c
  4781   0027EC  6EE1               	movwf	fsr1l,c
  4782   0027EE  6AE2               	clrf	fsr1h,c
  4783   0027F0  0E03               	movlw	3
  4784   0027F2  26E1               	addwf	fsr1l,f,c
  4785   0027F4  50DE               	movf	postinc2,w,c
  4786   0027F6  5CE6               	subwf	postinc1,w,c
  4787   0027F8  50E6               	movf	postinc1,w,c
  4788   0027FA  0A80               	xorlw	128
  4789   0027FC  6E08               	movwf	(??_fputc+4)^0,c
  4790   0027FE  50DE               	movf	postinc2,w,c
  4791   002800  0A80               	xorlw	128
  4792   002802  5808               	subwfb	(??_fputc+4)^0,w,c
  4793   002804  B0D8               	btfsc	status,0,c
  4794   002806  EF07  F014         	goto	u1921
  4795   00280A  EF09  F014         	goto	u1920
  4796   00280E                     u1921:
  4797   00280E  EF21  F014         	goto	l1367
  4798   002812                     u1920:
  4799   002812                     l2830:
  4800   002812  5003               	movf	fputc@fp^0,w,c
  4801   002814  6ED9               	movwf	fsr2l,c
  4802   002816  6ADA               	clrf	fsr2h,c
  4803   002818  0E03               	movlw	3
  4804   00281A  26D9               	addwf	fsr2l,f,c
  4805   00281C  50DF               	movf	indf2,w,c
  4806   00281E  6E04               	movwf	??_fputc^0,c
  4807   002820  5003               	movf	fputc@fp^0,w,c
  4808   002822  6ED9               	movwf	fsr2l,c
  4809   002824  6ADA               	clrf	fsr2h,c
  4810   002826  50DF               	movf	indf2,w,c
  4811   002828  2404               	addwf	??_fputc^0,w,c
  4812   00282A  6ED9               	movwf	fsr2l,c
  4813   00282C  6ADA               	clrf	fsr2h,c
  4814   00282E  C001  FFDF         	movff	fputc@c,indf2
  4815   002832  5003               	movf	fputc@fp^0,w,c
  4816   002834  6ED9               	movwf	fsr2l,c
  4817   002836  6ADA               	clrf	fsr2h,c
  4818   002838  0E03               	movlw	3
  4819   00283A  26D9               	addwf	fsr2l,f,c
  4820   00283C  2ADE               	incf	postinc2,f,c
  4821   00283E  0E00               	movlw	0
  4822   002840  22DD               	addwfc	postdec2,f,c
  4823   002842                     l1367:
  4824   002842  0012               	return		;funcret
  4825   002844                     __end_of_fputc:
  4826                           	callstack 0
  4827                           
  4828 ;; *************** function _putch *****************
  4829 ;; Defined at:
  4830 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\putch.c"
  4831 ;; Parameters:    Size  Location     Type
  4832 ;;  c               1    wreg     unsigned char 
  4833 ;; Auto vars:     Size  Location     Type
  4834 ;;  c               1    0[COMRAM] unsigned char 
  4835 ;; Return value:  Size  Location     Type
  4836 ;;                  1    wreg      void 
  4837 ;; Registers used:
  4838 ;;		wreg
  4839 ;; Tracked objects:
  4840 ;;		On entry : 0/0
  4841 ;;		On exit  : 0/0
  4842 ;;		Unchanged: 0/0
  4843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4847 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4848 ;;Total ram usage:        0 bytes
  4849 ;; Hardware stack levels used: 1
  4850 ;; Hardware stack levels required when called: 2
  4851 ;; This function calls:
  4852 ;;		Nothing
  4853 ;; This function is called by:
  4854 ;;		_fputc
  4855 ;; This function uses a non-reentrant model
  4856 ;;
  4857                           
  4858                           	psect	text21
  4859   0031A0                     __ptext21:
  4860                           	callstack 0
  4861   0031A0                     _putch:
  4862                           	callstack 20
  4863   0031A0  0012               	return		;funcret
  4864   0031A2                     __end_of_putch:
  4865                           	callstack 0
  4866                           
  4867 ;; *************** function _memset *****************
  4868 ;; Defined at:
  4869 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\memset.c"
  4870 ;; Parameters:    Size  Location     Type
  4871 ;;  dest            1    0[COMRAM] PTR void 
  4872 ;;		 -> adc_res4_text(6), adc_res3_text(6), adc_res2_text(6), adc_res1_text(6), 
  4873 ;;  c               2    1[COMRAM] int 
  4874 ;;  n               2    3[COMRAM] unsigned int 
  4875 ;; Auto vars:     Size  Location     Type
  4876 ;;  p               1    5[COMRAM] PTR unsigned char 
  4877 ;;		 -> adc_res4_text(6), adc_res3_text(6), adc_res2_text(6), adc_res1_text(6), 
  4878 ;; Return value:  Size  Location     Type
  4879 ;;                  1    wreg      PTR void 
  4880 ;; Registers used:
  4881 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4882 ;; Tracked objects:
  4883 ;;		On entry : 0/0
  4884 ;;		On exit  : 0/0
  4885 ;;		Unchanged: 0/0
  4886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4887 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4888 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4890 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4891 ;;Total ram usage:        6 bytes
  4892 ;; Hardware stack levels used: 1
  4893 ;; Hardware stack levels required when called: 2
  4894 ;; This function calls:
  4895 ;;		Nothing
  4896 ;; This function is called by:
  4897 ;;		_lcd_convert_uint16_string
  4898 ;;		_lcd_convert_uint8_string
  4899 ;;		_lcd_convert_uint32_string
  4900 ;; This function uses a non-reentrant model
  4901 ;;
  4902                           
  4903                           	psect	text22
  4904   00306E                     __ptext22:
  4905                           	callstack 0
  4906   00306E                     _memset:
  4907                           	callstack 27
  4908   00306E  C001  F006         	movff	memset@dest,memset@p
  4909   003072  EF41  F018         	goto	l3756
  4910   003076                     l3752:
  4911   003076  5006               	movf	memset@p^0,w,c
  4912   003078  6ED9               	movwf	fsr2l,c
  4913   00307A  6ADA               	clrf	fsr2h,c
  4914   00307C  C002  FFDF         	movff	memset@c,indf2
  4915   003080  2A06               	incf	memset@p^0,f,c
  4916   003082                     l3756:
  4917   003082  0604               	decf	memset@n^0,f,c
  4918   003084  A0D8               	btfss	status,0,c
  4919   003086  0605               	decf	(memset@n+1)^0,f,c
  4920   003088  2804               	incf	memset@n^0,w,c
  4921   00308A  E106               	bnz	u3211
  4922   00308C  2805               	incf	(memset@n+1)^0,w,c
  4923   00308E  A4D8               	btfss	status,2,c
  4924   003090  EF4C  F018         	goto	u3211
  4925   003094  EF4E  F018         	goto	u3210
  4926   003098                     u3211:
  4927   003098  EF3B  F018         	goto	l3752
  4928   00309C                     u3210:
  4929   00309C  0012               	return		;funcret
  4930   00309E                     __end_of_memset:
  4931                           	callstack 0
  4932                           
  4933 ;; *************** function _lcd_8bit_send_string_pos *****************
  4934 ;; Defined at:
  4935 ;;		line 216 in file "ECU/LCD/ecu_lcd.c"
  4936 ;; Parameters:    Size  Location     Type
  4937 ;;  _lcd            1   19[COMRAM] PTR const struct .
  4938 ;;		 -> lcd(10), 
  4939 ;;  str             2   20[COMRAM] PTR unsigned char 
  4940 ;;		 -> adc_res4_text(6), adc_res3_text(6), adc_res2_text(6), adc_res1_text(6), 
  4941 ;;		 -> STR_7(7), STR_6(7), STR_5(7), STR_4(7), 
  4942 ;;		 -> STR_3(9), 
  4943 ;;  row             1   22[COMRAM] unsigned char 
  4944 ;;  column          1   23[COMRAM] unsigned char 
  4945 ;; Auto vars:     Size  Location     Type
  4946 ;;  ret             1   24[COMRAM] unsigned char 
  4947 ;; Return value:  Size  Location     Type
  4948 ;;                  1    wreg      unsigned char 
  4949 ;; Registers used:
  4950 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4951 ;; Tracked objects:
  4952 ;;		On entry : 0/0
  4953 ;;		On exit  : 0/0
  4954 ;;		Unchanged: 0/0
  4955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4956 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4957 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4959 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4960 ;;Total ram usage:        6 bytes
  4961 ;; Hardware stack levels used: 1
  4962 ;; Hardware stack levels required when called: 6
  4963 ;; This function calls:
  4964 ;;		_lcd_8bit_send_string
  4965 ;;		_lcd_8bit_set_cursor
  4966 ;; This function is called by:
  4967 ;;		_main
  4968 ;; This function uses a non-reentrant model
  4969 ;;
  4970                           
  4971                           	psect	text23
  4972   002EDC                     __ptext23:
  4973                           	callstack 0
  4974   002EDC                     _lcd_8bit_send_string_pos:
  4975                           	callstack 24
  4976   002EDC                     
  4977                           ;ECU/LCD/ecu_lcd.c: 216: Std_ReturnType lcd_8bit_send_string_pos(const lcd_8bit_mode *_l
      +                          cd, uint8 *str, uint8 row, uint8 column);ECU/LCD/ecu_lcd.c: 217: {;ECU/LCD/ecu_lcd.c: 21
      +                          8:     Std_ReturnType ret = (Std_ReturnType)1;
  4978   002EDC  0E01               	movlw	1
  4979   002EDE  6E19               	movwf	lcd_8bit_send_string_pos@ret^0,c
  4980                           
  4981                           ;ECU/LCD/ecu_lcd.c: 219:     if((((void*)0) == _lcd) && (((void*)0) == str)){
  4982   002EE0  5014               	movf	lcd_8bit_send_string_pos@_lcd^0,w,c
  4983   002EE2  A4D8               	btfss	status,2,c
  4984   002EE4  EF76  F017         	goto	u3321
  4985   002EE8  EF78  F017         	goto	u3320
  4986   002EEC                     u3321:
  4987   002EEC  EF83  F017         	goto	l3884
  4988   002EF0                     u3320:
  4989   002EF0  5015               	movf	lcd_8bit_send_string_pos@str^0,w,c
  4990   002EF2  1016               	iorwf	(lcd_8bit_send_string_pos@str+1)^0,w,c
  4991   002EF4  A4D8               	btfss	status,2,c
  4992   002EF6  EF7F  F017         	goto	u3331
  4993   002EFA  EF81  F017         	goto	u3330
  4994   002EFE                     u3331:
  4995   002EFE  EF83  F017         	goto	l3884
  4996   002F02                     u3330:
  4997   002F02                     
  4998                           ;ECU/LCD/ecu_lcd.c: 221:     }
  4999   002F02  EF95  F017         	goto	l98
  5000   002F06                     l3884:
  5001                           
  5002                           ;ECU/LCD/ecu_lcd.c: 223:         ret &= lcd_8bit_set_cursor(_lcd, row, column);
  5003   002F06  C014  F010         	movff	lcd_8bit_send_string_pos@_lcd,lcd_8bit_set_cursor@_lcd
  5004   002F0A  C017  F011         	movff	lcd_8bit_send_string_pos@row,lcd_8bit_set_cursor@row
  5005   002F0E  C018  F012         	movff	lcd_8bit_send_string_pos@column,lcd_8bit_set_cursor@column
  5006   002F12  EC56  F015         	call	_lcd_8bit_set_cursor	;wreg free
  5007   002F16  1619               	andwf	lcd_8bit_send_string_pos@ret^0,f,c
  5008   002F18                     
  5009                           ;ECU/LCD/ecu_lcd.c: 224:         ret &= lcd_8bit_send_string(_lcd, str);
  5010   002F18  C014  F010         	movff	lcd_8bit_send_string_pos@_lcd,lcd_8bit_send_string@_lcd
  5011   002F1C  C015  F011         	movff	lcd_8bit_send_string_pos@str,lcd_8bit_send_string@str
  5012   002F20  C016  F012         	movff	lcd_8bit_send_string_pos@str+1,lcd_8bit_send_string@str+1
  5013   002F24  ECC2  F014         	call	_lcd_8bit_send_string	;wreg free
  5014   002F28  1619               	andwf	lcd_8bit_send_string_pos@ret^0,f,c
  5015   002F2A                     l98:
  5016   002F2A  0012               	return		;funcret
  5017   002F2C                     __end_of_lcd_8bit_send_string_pos:
  5018                           	callstack 0
  5019                           
  5020 ;; *************** function _lcd_8bit_set_cursor *****************
  5021 ;; Defined at:
  5022 ;;		line 345 in file "ECU/LCD/ecu_lcd.c"
  5023 ;; Parameters:    Size  Location     Type
  5024 ;;  _lcd            1   15[COMRAM] PTR const struct .
  5025 ;;		 -> lcd(10), 
  5026 ;;  row             1   16[COMRAM] unsigned char 
  5027 ;;  column          1   17[COMRAM] unsigned char 
  5028 ;; Auto vars:     Size  Location     Type
  5029 ;;  ret             1   18[COMRAM] unsigned char 
  5030 ;; Return value:  Size  Location     Type
  5031 ;;                  1    wreg      unsigned char 
  5032 ;; Registers used:
  5033 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5034 ;; Tracked objects:
  5035 ;;		On entry : 0/0
  5036 ;;		On exit  : 0/0
  5037 ;;		Unchanged: 0/0
  5038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5039 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5040 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5042 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5043 ;;Total ram usage:        4 bytes
  5044 ;; Hardware stack levels used: 1
  5045 ;; Hardware stack levels required when called: 5
  5046 ;; This function calls:
  5047 ;;		_lcd_8bit_send_command
  5048 ;; This function is called by:
  5049 ;;		_lcd_8bit_send_string_pos
  5050 ;;		_lcd_8bit_send_char_pos
  5051 ;; This function uses a non-reentrant model
  5052 ;;
  5053                           
  5054                           	psect	text24
  5055   002AAC                     __ptext24:
  5056                           	callstack 0
  5057   002AAC                     _lcd_8bit_set_cursor:
  5058                           	callstack 24
  5059   002AAC                     
  5060                           ;ECU/LCD/ecu_lcd.c: 348:     --column;
  5061   002AAC  0612               	decf	lcd_8bit_set_cursor@column^0,f,c
  5062                           
  5063                           ;ECU/LCD/ecu_lcd.c: 349:     switch(row){
  5064   002AAE  EF85  F015         	goto	l3728
  5065   002AB2                     l3718:
  5066                           
  5067                           ;ECU/LCD/ecu_lcd.c: 351:             ret = lcd_8bit_send_command(_lcd, (0x80 + column));
  5068   002AB2  C010  F00A         	movff	lcd_8bit_set_cursor@_lcd,lcd_8bit_send_command@_lcd
  5069   002AB6  5012               	movf	lcd_8bit_set_cursor@column^0,w,c
  5070   002AB8  0F80               	addlw	128
  5071   002ABA  6E0B               	movwf	lcd_8bit_send_command@command^0,c
  5072   002ABC  EC4B  F016         	call	_lcd_8bit_send_command	;wreg free
  5073   002AC0  6E13               	movwf	lcd_8bit_set_cursor@ret^0,c
  5074                           
  5075                           ;ECU/LCD/ecu_lcd.c: 352:             break;
  5076   002AC2  EF98  F015         	goto	l3730
  5077   002AC6                     l3720:
  5078                           
  5079                           ;ECU/LCD/ecu_lcd.c: 355:             ret = lcd_8bit_send_command(_lcd, (0xC0 + column));
  5080   002AC6  C010  F00A         	movff	lcd_8bit_set_cursor@_lcd,lcd_8bit_send_command@_lcd
  5081   002ACA  5012               	movf	lcd_8bit_set_cursor@column^0,w,c
  5082   002ACC  0FC0               	addlw	192
  5083   002ACE  6E0B               	movwf	lcd_8bit_send_command@command^0,c
  5084   002AD0  EC4B  F016         	call	_lcd_8bit_send_command	;wreg free
  5085   002AD4  6E13               	movwf	lcd_8bit_set_cursor@ret^0,c
  5086                           
  5087                           ;ECU/LCD/ecu_lcd.c: 356:             break;
  5088   002AD6  EF98  F015         	goto	l3730
  5089   002ADA                     l3722:
  5090                           
  5091                           ;ECU/LCD/ecu_lcd.c: 359:             ret = lcd_8bit_send_command(_lcd, (0x94 + column));
  5092   002ADA  C010  F00A         	movff	lcd_8bit_set_cursor@_lcd,lcd_8bit_send_command@_lcd
  5093   002ADE  5012               	movf	lcd_8bit_set_cursor@column^0,w,c
  5094   002AE0  0F94               	addlw	148
  5095   002AE2  6E0B               	movwf	lcd_8bit_send_command@command^0,c
  5096   002AE4  EC4B  F016         	call	_lcd_8bit_send_command	;wreg free
  5097   002AE8  6E13               	movwf	lcd_8bit_set_cursor@ret^0,c
  5098                           
  5099                           ;ECU/LCD/ecu_lcd.c: 360:             break;
  5100   002AEA  EF98  F015         	goto	l3730
  5101   002AEE                     l3724:
  5102                           
  5103                           ;ECU/LCD/ecu_lcd.c: 363:             ret = lcd_8bit_send_command(_lcd, (0xD4 + column));
  5104   002AEE  C010  F00A         	movff	lcd_8bit_set_cursor@_lcd,lcd_8bit_send_command@_lcd
  5105   002AF2  5012               	movf	lcd_8bit_set_cursor@column^0,w,c
  5106   002AF4  0FD4               	addlw	212
  5107   002AF6  6E0B               	movwf	lcd_8bit_send_command@command^0,c
  5108   002AF8  EC4B  F016         	call	_lcd_8bit_send_command	;wreg free
  5109   002AFC  6E13               	movwf	lcd_8bit_set_cursor@ret^0,c
  5110                           
  5111                           ;ECU/LCD/ecu_lcd.c: 364:             break;
  5112   002AFE  EF98  F015         	goto	l3730
  5113   002B02                     l3726:
  5114                           
  5115                           ;ECU/LCD/ecu_lcd.c: 367:             ret = (Std_ReturnType)1;
  5116   002B02  0E01               	movlw	1
  5117   002B04  6E13               	movwf	lcd_8bit_set_cursor@ret^0,c
  5118                           
  5119                           ;ECU/LCD/ecu_lcd.c: 368:     }
  5120   002B06  EF98  F015         	goto	l3730
  5121   002B0A                     l3728:
  5122   002B0A  5011               	movf	lcd_8bit_set_cursor@row^0,w,c
  5123                           
  5124                           ; Switch size 1, requested type "simple"
  5125                           ; Number of cases is 4, Range of values is 1 to 4
  5126                           ; switch strategies available:
  5127                           ; Name         Instructions Cycles
  5128                           ; simple_byte           13     7 (average)
  5129                           ;	Chosen strategy is simple_byte
  5130   002B0C  0A01               	xorlw	1	; case 1
  5131   002B0E  B4D8               	btfsc	status,2,c
  5132   002B10  EF59  F015         	goto	l3718
  5133   002B14  0A03               	xorlw	3	; case 2
  5134   002B16  B4D8               	btfsc	status,2,c
  5135   002B18  EF63  F015         	goto	l3720
  5136   002B1C  0A01               	xorlw	1	; case 3
  5137   002B1E  B4D8               	btfsc	status,2,c
  5138   002B20  EF6D  F015         	goto	l3722
  5139   002B24  0A07               	xorlw	7	; case 4
  5140   002B26  B4D8               	btfsc	status,2,c
  5141   002B28  EF77  F015         	goto	l3724
  5142   002B2C  EF81  F015         	goto	l3726
  5143   002B30                     l3730:
  5144                           
  5145                           ;ECU/LCD/ecu_lcd.c: 369:     return ret;
  5146   002B30  5013               	movf	lcd_8bit_set_cursor@ret^0,w,c
  5147   002B32  0012               	return		;funcret
  5148   002B34                     __end_of_lcd_8bit_set_cursor:
  5149                           	callstack 0
  5150                           
  5151 ;; *************** function _lcd_8bit_send_string *****************
  5152 ;; Defined at:
  5153 ;;		line 201 in file "ECU/LCD/ecu_lcd.c"
  5154 ;; Parameters:    Size  Location     Type
  5155 ;;  _lcd            1   15[COMRAM] PTR const struct .
  5156 ;;		 -> lcd(10), 
  5157 ;;  str             2   16[COMRAM] PTR unsigned char 
  5158 ;;		 -> adc_res4_text(6), adc_res3_text(6), adc_res2_text(6), adc_res1_text(6), 
  5159 ;;		 -> STR_7(7), STR_6(7), STR_5(7), STR_4(7), 
  5160 ;;		 -> STR_3(9), 
  5161 ;; Auto vars:     Size  Location     Type
  5162 ;;  ret             1   18[COMRAM] unsigned char 
  5163 ;; Return value:  Size  Location     Type
  5164 ;;                  1    wreg      unsigned char 
  5165 ;; Registers used:
  5166 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5167 ;; Tracked objects:
  5168 ;;		On entry : 0/0
  5169 ;;		On exit  : 0/0
  5170 ;;		Unchanged: 0/0
  5171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5172 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5173 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5175 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5176 ;;Total ram usage:        4 bytes
  5177 ;; Hardware stack levels used: 1
  5178 ;; Hardware stack levels required when called: 5
  5179 ;; This function calls:
  5180 ;;		_lcd_8bit_send_char
  5181 ;; This function is called by:
  5182 ;;		_lcd_8bit_send_string_pos
  5183 ;; This function uses a non-reentrant model
  5184 ;;
  5185                           
  5186                           	psect	text25
  5187   002984                     __ptext25:
  5188                           	callstack 0
  5189   002984                     _lcd_8bit_send_string:
  5190                           	callstack 24
  5191   002984                     
  5192                           ;ECU/LCD/ecu_lcd.c: 201: Std_ReturnType lcd_8bit_send_string(const lcd_8bit_mode *_lcd, 
      +                          uint8 *str);ECU/LCD/ecu_lcd.c: 202: {;ECU/LCD/ecu_lcd.c: 203:     Std_ReturnType ret = (
      +                          Std_ReturnType)1;
  5193   002984  0E01               	movlw	1
  5194   002986  6E13               	movwf	lcd_8bit_send_string@ret^0,c
  5195                           
  5196                           ;ECU/LCD/ecu_lcd.c: 204:     if((((void*)0) == _lcd) && (((void*)0) == str)){
  5197   002988  5010               	movf	lcd_8bit_send_string@_lcd^0,w,c
  5198   00298A  A4D8               	btfss	status,2,c
  5199   00298C  EFCA  F014         	goto	u3161
  5200   002990  EFCC  F014         	goto	u3160
  5201   002994                     u3161:
  5202   002994  EFF2  F014         	goto	l3744
  5203   002998                     u3160:
  5204   002998  5011               	movf	lcd_8bit_send_string@str^0,w,c
  5205   00299A  1012               	iorwf	(lcd_8bit_send_string@str+1)^0,w,c
  5206   00299C  A4D8               	btfss	status,2,c
  5207   00299E  EFD3  F014         	goto	u3171
  5208   0029A2  EFD5  F014         	goto	u3170
  5209   0029A6                     u3171:
  5210   0029A6  EFF2  F014         	goto	l3744
  5211   0029AA                     u3170:
  5212   0029AA                     
  5213                           ;ECU/LCD/ecu_lcd.c: 205:         ret = (Std_ReturnType)1;
  5214   0029AA  0E01               	movlw	1
  5215   0029AC  6E13               	movwf	lcd_8bit_send_string@ret^0,c
  5216                           
  5217                           ;ECU/LCD/ecu_lcd.c: 206:     }
  5218   0029AE  EF0B  F015         	goto	l3746
  5219   0029B2                     l3740:
  5220                           
  5221                           ;ECU/LCD/ecu_lcd.c: 209:             ret &= lcd_8bit_send_char(_lcd, *str++);
  5222   0029B2  C010  F00A         	movff	lcd_8bit_send_string@_lcd,lcd_8bit_send_char@_lcd
  5223   0029B6  C011  FFF6         	movff	lcd_8bit_send_string@str,tblptrl
  5224   0029BA  C012  FFF7         	movff	lcd_8bit_send_string@str+1,tblptrh
  5225   0029BE  0E00               	movlw	low (__smallconst shr (0+16))
  5226   0029C0  6EF8               	movwf	tblptru,c
  5227   0029C2  0E0F               	movlw	(high __ramtop+-1)
  5228   0029C4  64F7               	cpfsgt	tblptrh,c
  5229   0029C6  D003               	bra	u3187
  5230   0029C8  0008               	tblrd		*
  5231   0029CA  50F5               	movf	tablat,w,c
  5232   0029CC  D005               	bra	u3180
  5233   0029CE                     u3187:
  5234   0029CE  CFF6 FFE9          	movff	tblptrl,fsr0l
  5235   0029D2  CFF7 FFEA          	movff	tblptrh,fsr0h
  5236   0029D6  50EF               	movf	indf0,w,c
  5237   0029D8                     u3180:
  5238   0029D8  6E0B               	movwf	lcd_8bit_send_char@data^0,c
  5239   0029DA  EC11  F016         	call	_lcd_8bit_send_char	;wreg free
  5240   0029DE  1613               	andwf	lcd_8bit_send_string@ret^0,f,c
  5241   0029E0  4A11               	infsnz	lcd_8bit_send_string@str^0,f,c
  5242   0029E2  2A12               	incf	(lcd_8bit_send_string@str+1)^0,f,c
  5243   0029E4                     l3744:
  5244                           
  5245                           ;ECU/LCD/ecu_lcd.c: 208:         while(*str){
  5246   0029E4  C011  FFF6         	movff	lcd_8bit_send_string@str,tblptrl
  5247   0029E8  C012  FFF7         	movff	lcd_8bit_send_string@str+1,tblptrh
  5248   0029EC  0E00               	movlw	low (__smallconst shr (0+16))
  5249   0029EE  6EF8               	movwf	tblptru,c
  5250   0029F0  0E0F               	movlw	(high __ramtop+-1)
  5251   0029F2  64F7               	cpfsgt	tblptrh,c
  5252   0029F4  D003               	bra	u3197
  5253   0029F6  0008               	tblrd		*
  5254   0029F8  50F5               	movf	tablat,w,c
  5255   0029FA  D005               	bra	u3190
  5256   0029FC                     u3197:
  5257   0029FC  CFF6 FFE9          	movff	tblptrl,fsr0l
  5258   002A00  CFF7 FFEA          	movff	tblptrh,fsr0h
  5259   002A04  50EF               	movf	indf0,w,c
  5260   002A06                     u3190:
  5261   002A06  0900               	iorlw	0
  5262   002A08  A4D8               	btfss	status,2,c
  5263   002A0A  EF09  F015         	goto	u3201
  5264   002A0E  EF0B  F015         	goto	u3200
  5265   002A12                     u3201:
  5266   002A12  EFD9  F014         	goto	l3740
  5267   002A16                     u3200:
  5268   002A16                     l3746:
  5269                           
  5270                           ;ECU/LCD/ecu_lcd.c: 212:     return ret;
  5271   002A16  5013               	movf	lcd_8bit_send_string@ret^0,w,c
  5272   002A18  0012               	return		;funcret
  5273   002A1A                     __end_of_lcd_8bit_send_string:
  5274                           	callstack 0
  5275                           
  5276 ;; *************** function _lcd_8bit_send_char *****************
  5277 ;; Defined at:
  5278 ;;		line 170 in file "ECU/LCD/ecu_lcd.c"
  5279 ;; Parameters:    Size  Location     Type
  5280 ;;  _lcd            1    9[COMRAM] PTR const struct .
  5281 ;;		 -> lcd(10), 
  5282 ;;  data            1   10[COMRAM] unsigned char 
  5283 ;; Auto vars:     Size  Location     Type
  5284 ;;  count           1   14[COMRAM] unsigned char 
  5285 ;;  ret             1   13[COMRAM] unsigned char 
  5286 ;; Return value:  Size  Location     Type
  5287 ;;                  1    wreg      unsigned char 
  5288 ;; Registers used:
  5289 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5290 ;; Tracked objects:
  5291 ;;		On entry : 0/0
  5292 ;;		On exit  : 0/0
  5293 ;;		Unchanged: 0/0
  5294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5295 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5296 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5297 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5298 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5299 ;;Total ram usage:        6 bytes
  5300 ;; Hardware stack levels used: 1
  5301 ;; Hardware stack levels required when called: 4
  5302 ;; This function calls:
  5303 ;;		_gpio_pin_write_logic
  5304 ;;		_lcd_8bit_enable_signal
  5305 ;; This function is called by:
  5306 ;;		_lcd_8bit_send_string
  5307 ;;		_lcd_8bit_send_char_pos
  5308 ;;		_lcd_8bit_send_custom_char
  5309 ;; This function uses a non-reentrant model
  5310 ;;
  5311                           
  5312                           	psect	text26
  5313   002C22                     __ptext26:
  5314                           	callstack 0
  5315   002C22                     _lcd_8bit_send_char:
  5316                           	callstack 24
  5317   002C22                     
  5318                           ;ECU/LCD/ecu_lcd.c: 173:     if(((void*)0) == _lcd){
  5319   002C22  500A               	movf	lcd_8bit_send_char@_lcd^0,w,c
  5320   002C24  A4D8               	btfss	status,2,c
  5321   002C26  EF17  F016         	goto	u3051
  5322   002C2A  EF19  F016         	goto	u3050
  5323   002C2E                     u3051:
  5324   002C2E  EF1D  F016         	goto	l3556
  5325   002C32                     u3050:
  5326   002C32                     
  5327                           ;ECU/LCD/ecu_lcd.c: 174:         ret = (Std_ReturnType)1;
  5328   002C32  0E01               	movlw	1
  5329   002C34  6E0E               	movwf	lcd_8bit_send_char@ret^0,c
  5330                           
  5331                           ;ECU/LCD/ecu_lcd.c: 175:     }
  5332   002C36  EF49  F016         	goto	l3572
  5333   002C3A                     l3556:
  5334                           
  5335                           ;ECU/LCD/ecu_lcd.c: 177:         ret = gpio_pin_write_logic(&(_lcd->rs), GPIO_HIGH);
  5336   002C3A  C00A  F001         	movff	lcd_8bit_send_char@_lcd,gpio_pin_write_logic@_pin_config
  5337   002C3E  0E01               	movlw	1
  5338   002C40  6E02               	movwf	gpio_pin_write_logic@logic^0,c
  5339   002C42  EC36  F010         	call	_gpio_pin_write_logic	;wreg free
  5340   002C46  6E0E               	movwf	lcd_8bit_send_char@ret^0,c
  5341   002C48                     
  5342                           ;ECU/LCD/ecu_lcd.c: 178:         for(uint8 count=0; count<8; count++){
  5343   002C48  0E00               	movlw	0
  5344   002C4A  6E0F               	movwf	lcd_8bit_send_char@count^0,c
  5345   002C4C                     l3564:
  5346                           
  5347                           ;ECU/LCD/ecu_lcd.c: 179:             ret &= gpio_pin_write_logic(&(_lcd->data[count]), (
      +                          data >> count) & 0x01);
  5348   002C4C  500A               	movf	lcd_8bit_send_char@_lcd^0,w,c
  5349   002C4E  240F               	addwf	lcd_8bit_send_char@count^0,w,c
  5350   002C50  0F02               	addlw	2
  5351   002C52  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  5352   002C54  C00F  F00C         	movff	lcd_8bit_send_char@count,??_lcd_8bit_send_char
  5353   002C58  C00B  F00D         	movff	lcd_8bit_send_char@data,??_lcd_8bit_send_char+1
  5354   002C5C  2A0C               	incf	??_lcd_8bit_send_char^0,f,c
  5355   002C5E  EF33  F016         	goto	u3064
  5356   002C62                     u3065:
  5357   002C62  90D8               	bcf	status,0,c
  5358   002C64  320D               	rrcf	(??_lcd_8bit_send_char+1)^0,f,c
  5359   002C66                     u3064:
  5360   002C66  2E0C               	decfsz	??_lcd_8bit_send_char^0,f,c
  5361   002C68  EF31  F016         	goto	u3065
  5362   002C6C  500D               	movf	(??_lcd_8bit_send_char+1)^0,w,c
  5363   002C6E  0B01               	andlw	1
  5364   002C70  6E02               	movwf	gpio_pin_write_logic@logic^0,c
  5365   002C72  EC36  F010         	call	_gpio_pin_write_logic	;wreg free
  5366   002C76  160E               	andwf	lcd_8bit_send_char@ret^0,f,c
  5367   002C78                     
  5368                           ;ECU/LCD/ecu_lcd.c: 180:         }
  5369   002C78  2A0F               	incf	lcd_8bit_send_char@count^0,f,c
  5370   002C7A  0E07               	movlw	7
  5371   002C7C  640F               	cpfsgt	lcd_8bit_send_char@count^0,c
  5372   002C7E  EF43  F016         	goto	u3071
  5373   002C82  EF45  F016         	goto	u3070
  5374   002C86                     u3071:
  5375   002C86  EF26  F016         	goto	l3564
  5376   002C8A                     u3070:
  5377   002C8A                     
  5378                           ;ECU/LCD/ecu_lcd.c: 181:         lcd_8bit_enable_signal(_lcd);
  5379   002C8A  C00A  F008         	movff	lcd_8bit_send_char@_lcd,lcd_8bit_enable_signal@_lcd
  5380   002C8E  EC66  F018         	call	_lcd_8bit_enable_signal	;wreg free
  5381   002C92                     l3572:
  5382                           
  5383                           ;ECU/LCD/ecu_lcd.c: 183:     return ret;
  5384   002C92  500E               	movf	lcd_8bit_send_char@ret^0,w,c
  5385   002C94  0012               	return		;funcret
  5386   002C96                     __end_of_lcd_8bit_send_char:
  5387                           	callstack 0
  5388                           
  5389 ;; *************** function _initialization *****************
  5390 ;; Defined at:
  5391 ;;		line 136 in file "project.c"
  5392 ;; Parameters:    Size  Location     Type
  5393 ;;		None
  5394 ;; Auto vars:     Size  Location     Type
  5395 ;;		None
  5396 ;; Return value:  Size  Location     Type
  5397 ;;                  1    wreg      void 
  5398 ;; Registers used:
  5399 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5400 ;; Tracked objects:
  5401 ;;		On entry : 0/0
  5402 ;;		On exit  : 0/0
  5403 ;;		Unchanged: 0/0
  5404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5408 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5409 ;;Total ram usage:        0 bytes
  5410 ;; Hardware stack levels used: 1
  5411 ;; Hardware stack levels required when called: 6
  5412 ;; This function calls:
  5413 ;;		_ADC_Init
  5414 ;;		_lcd_8bit_initialize
  5415 ;; This function is called by:
  5416 ;;		_main
  5417 ;; This function uses a non-reentrant model
  5418 ;;
  5419                           
  5420                           	psect	text27
  5421   00318A                     __ptext27:
  5422                           	callstack 0
  5423   00318A                     _initialization:
  5424                           	callstack 24
  5425   00318A  0ECC               	movlw	low _adc_1
  5426   00318C  6E04               	movwf	ADC_Init@_adc^0,c
  5427   00318E  EC22  F014         	call	_ADC_Init	;wreg free
  5428   003192  0E62               	movlw	low _lcd
  5429   003194  6E10               	movwf	lcd_8bit_initialize@_lcd^0,c
  5430   003196  EC59  F011         	call	_lcd_8bit_initialize	;wreg free
  5431   00319A  0012               	return		;funcret
  5432   00319C                     __end_of_initialization:
  5433                           	callstack 0
  5434                           
  5435 ;; *************** function _lcd_8bit_initialize *****************
  5436 ;; Defined at:
  5437 ;;		line 122 in file "ECU/LCD/ecu_lcd.c"
  5438 ;; Parameters:    Size  Location     Type
  5439 ;;  _lcd            1   15[COMRAM] PTR const struct .
  5440 ;;		 -> lcd(10), 
  5441 ;; Auto vars:     Size  Location     Type
  5442 ;;  count           1   18[COMRAM] unsigned char 
  5443 ;;  ret             1   19[COMRAM] unsigned char 
  5444 ;; Return value:  Size  Location     Type
  5445 ;;                  1    wreg      unsigned char 
  5446 ;; Registers used:
  5447 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5448 ;; Tracked objects:
  5449 ;;		On entry : 0/0
  5450 ;;		On exit  : 0/0
  5451 ;;		Unchanged: 0/0
  5452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5453 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5454 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5455 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5456 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5457 ;;Total ram usage:        5 bytes
  5458 ;; Hardware stack levels used: 1
  5459 ;; Hardware stack levels required when called: 5
  5460 ;; This function calls:
  5461 ;;		_gpio_pin_initialize
  5462 ;;		_lcd_8bit_send_command
  5463 ;; This function is called by:
  5464 ;;		_initialization
  5465 ;; This function uses a non-reentrant model
  5466 ;;
  5467                           
  5468                           	psect	text28
  5469   0022B2                     __ptext28:
  5470                           	callstack 0
  5471   0022B2                     _lcd_8bit_initialize:
  5472                           	callstack 24
  5473   0022B2                     
  5474                           ;ECU/LCD/ecu_lcd.c: 125:     if(((void*)0) == _lcd){
  5475   0022B2  5010               	movf	lcd_8bit_initialize@_lcd^0,w,c
  5476   0022B4  A4D8               	btfss	status,2,c
  5477   0022B6  EF5F  F011         	goto	u3141
  5478   0022BA  EF61  F011         	goto	u3140
  5479   0022BE                     u3141:
  5480   0022BE  EF63  F011         	goto	l3676
  5481   0022C2                     u3140:
  5482   0022C2                     
  5483                           ;ECU/LCD/ecu_lcd.c: 127:     }
  5484   0022C2  EFD9  F011         	goto	l66
  5485   0022C6                     l3676:
  5486                           
  5487                           ;ECU/LCD/ecu_lcd.c: 129:         ret = gpio_pin_initialize(&(_lcd->rs));
  5488   0022C6  C010  F008         	movff	lcd_8bit_initialize@_lcd,gpio_pin_initialize@_pin_config
  5489   0022CA  EC9A  F015         	call	_gpio_pin_initialize	;wreg free
  5490   0022CE  6E14               	movwf	lcd_8bit_initialize@ret^0,c
  5491                           
  5492                           ;ECU/LCD/ecu_lcd.c: 130:         ret &= gpio_pin_initialize(&(_lcd->en));
  5493   0022D0  2810               	incf	lcd_8bit_initialize@_lcd^0,w,c
  5494   0022D2  6E08               	movwf	gpio_pin_initialize@_pin_config^0,c
  5495   0022D4  EC9A  F015         	call	_gpio_pin_initialize	;wreg free
  5496   0022D8  1614               	andwf	lcd_8bit_initialize@ret^0,f,c
  5497   0022DA                     
  5498                           ;ECU/LCD/ecu_lcd.c: 131:         for(uint8 count=0; count<8; count++){
  5499   0022DA  0E00               	movlw	0
  5500   0022DC  6E13               	movwf	lcd_8bit_initialize@count^0,c
  5501   0022DE                     l3684:
  5502                           
  5503                           ;ECU/LCD/ecu_lcd.c: 132:             ret &= gpio_pin_initialize(&(_lcd->data[count]));
  5504   0022DE  5010               	movf	lcd_8bit_initialize@_lcd^0,w,c
  5505   0022E0  2413               	addwf	lcd_8bit_initialize@count^0,w,c
  5506   0022E2  0F02               	addlw	2
  5507   0022E4  6E08               	movwf	gpio_pin_initialize@_pin_config^0,c
  5508   0022E6  EC9A  F015         	call	_gpio_pin_initialize	;wreg free
  5509   0022EA  1614               	andwf	lcd_8bit_initialize@ret^0,f,c
  5510   0022EC                     
  5511                           ;ECU/LCD/ecu_lcd.c: 133:         }
  5512   0022EC  2A13               	incf	lcd_8bit_initialize@count^0,f,c
  5513   0022EE  0E07               	movlw	7
  5514   0022F0  6413               	cpfsgt	lcd_8bit_initialize@count^0,c
  5515   0022F2  EF7D  F011         	goto	u3151
  5516   0022F6  EF7F  F011         	goto	u3150
  5517   0022FA                     u3151:
  5518   0022FA  EF6F  F011         	goto	l3684
  5519   0022FE                     u3150:
  5520   0022FE                     
  5521                           ;ECU/LCD/ecu_lcd.c: 135:         _delay((unsigned long)((20)*(80000000UL/4000.0)));
  5522   0022FE  0E03               	movlw	3
  5523   002300  6E12               	movwf	(??_lcd_8bit_initialize+1)^0,c
  5524   002302  0E08               	movlw	8
  5525   002304  6E11               	movwf	??_lcd_8bit_initialize^0,c
  5526   002306  0E77               	movlw	119
  5527   002308                     u3657:
  5528   002308  2EE8               	decfsz	wreg,f,c
  5529   00230A  D7FE               	bra	u3657
  5530   00230C  2E11               	decfsz	??_lcd_8bit_initialize^0,f,c
  5531   00230E  D7FC               	bra	u3657
  5532   002310  2E12               	decfsz	(??_lcd_8bit_initialize+1)^0,f,c
  5533   002312  D7FA               	bra	u3657
  5534   002314  0000               	nop	
  5535   002316                     
  5536                           ;ECU/LCD/ecu_lcd.c: 136:         ret &= lcd_8bit_send_command(_lcd, 0x38);
  5537   002316  C010  F00A         	movff	lcd_8bit_initialize@_lcd,lcd_8bit_send_command@_lcd
  5538   00231A  0E38               	movlw	56
  5539   00231C  6E0B               	movwf	lcd_8bit_send_command@command^0,c
  5540   00231E  EC4B  F016         	call	_lcd_8bit_send_command	;wreg free
  5541   002322  1614               	andwf	lcd_8bit_initialize@ret^0,f,c
  5542   002324                     
  5543                           ;ECU/LCD/ecu_lcd.c: 137:         _delay((unsigned long)((5)*(80000000UL/4000.0)));
  5544   002324  0E82               	movlw	130
  5545   002326  6E11               	movwf	??_lcd_8bit_initialize^0,c
  5546   002328  0EDE               	movlw	222
  5547   00232A                     u3667:
  5548   00232A  2EE8               	decfsz	wreg,f,c
  5549   00232C  D7FE               	bra	u3667
  5550   00232E  2E11               	decfsz	??_lcd_8bit_initialize^0,f,c
  5551   002330  D7FC               	bra	u3667
  5552                           
  5553                           ;ECU/LCD/ecu_lcd.c: 138:         ret &= lcd_8bit_send_command(_lcd, 0x38);
  5554   002332  C010  F00A         	movff	lcd_8bit_initialize@_lcd,lcd_8bit_send_command@_lcd
  5555   002336  0E38               	movlw	56
  5556   002338  6E0B               	movwf	lcd_8bit_send_command@command^0,c
  5557   00233A  EC4B  F016         	call	_lcd_8bit_send_command	;wreg free
  5558   00233E  1614               	andwf	lcd_8bit_initialize@ret^0,f,c
  5559   002340                     
  5560                           ;ECU/LCD/ecu_lcd.c: 139:         _delay((unsigned long)((150)*(80000000UL/4000000.0)));
  5561   002340  0E04               	movlw	4
  5562   002342  6E11               	movwf	??_lcd_8bit_initialize^0,c
  5563   002344  0EE4               	movlw	228
  5564   002346                     u3677:
  5565   002346  2EE8               	decfsz	wreg,f,c
  5566   002348  D7FE               	bra	u3677
  5567   00234A  2E11               	decfsz	??_lcd_8bit_initialize^0,f,c
  5568   00234C  D7FC               	bra	u3677
  5569   00234E  D000               	nop2	
  5570   002350                     
  5571                           ;ECU/LCD/ecu_lcd.c: 140:         ret &= lcd_8bit_send_command(_lcd, 0x38);
  5572   002350  C010  F00A         	movff	lcd_8bit_initialize@_lcd,lcd_8bit_send_command@_lcd
  5573   002354  0E38               	movlw	56
  5574   002356  6E0B               	movwf	lcd_8bit_send_command@command^0,c
  5575   002358  EC4B  F016         	call	_lcd_8bit_send_command	;wreg free
  5576   00235C  1614               	andwf	lcd_8bit_initialize@ret^0,f,c
  5577   00235E                     
  5578                           ;ECU/LCD/ecu_lcd.c: 142:         ret &= lcd_8bit_send_command(_lcd, 0x01);
  5579   00235E  C010  F00A         	movff	lcd_8bit_initialize@_lcd,lcd_8bit_send_command@_lcd
  5580   002362  0E01               	movlw	1
  5581   002364  6E0B               	movwf	lcd_8bit_send_command@command^0,c
  5582   002366  EC4B  F016         	call	_lcd_8bit_send_command	;wreg free
  5583   00236A  1614               	andwf	lcd_8bit_initialize@ret^0,f,c
  5584   00236C                     
  5585                           ;ECU/LCD/ecu_lcd.c: 143:         ret &= lcd_8bit_send_command(_lcd, 0x02);
  5586   00236C  C010  F00A         	movff	lcd_8bit_initialize@_lcd,lcd_8bit_send_command@_lcd
  5587   002370  0E02               	movlw	2
  5588   002372  6E0B               	movwf	lcd_8bit_send_command@command^0,c
  5589   002374  EC4B  F016         	call	_lcd_8bit_send_command	;wreg free
  5590   002378  1614               	andwf	lcd_8bit_initialize@ret^0,f,c
  5591   00237A                     
  5592                           ;ECU/LCD/ecu_lcd.c: 144:         ret &= lcd_8bit_send_command(_lcd, 0x06);
  5593   00237A  C010  F00A         	movff	lcd_8bit_initialize@_lcd,lcd_8bit_send_command@_lcd
  5594   00237E  0E06               	movlw	6
  5595   002380  6E0B               	movwf	lcd_8bit_send_command@command^0,c
  5596   002382  EC4B  F016         	call	_lcd_8bit_send_command	;wreg free
  5597   002386  1614               	andwf	lcd_8bit_initialize@ret^0,f,c
  5598   002388                     
  5599                           ;ECU/LCD/ecu_lcd.c: 145:         ret &= lcd_8bit_send_command(_lcd, 0x0C);
  5600   002388  C010  F00A         	movff	lcd_8bit_initialize@_lcd,lcd_8bit_send_command@_lcd
  5601   00238C  0E0C               	movlw	12
  5602   00238E  6E0B               	movwf	lcd_8bit_send_command@command^0,c
  5603   002390  EC4B  F016         	call	_lcd_8bit_send_command	;wreg free
  5604   002394  1614               	andwf	lcd_8bit_initialize@ret^0,f,c
  5605   002396                     
  5606                           ;ECU/LCD/ecu_lcd.c: 146:         ret &= lcd_8bit_send_command(_lcd, 0x38);
  5607   002396  C010  F00A         	movff	lcd_8bit_initialize@_lcd,lcd_8bit_send_command@_lcd
  5608   00239A  0E38               	movlw	56
  5609   00239C  6E0B               	movwf	lcd_8bit_send_command@command^0,c
  5610   00239E  EC4B  F016         	call	_lcd_8bit_send_command	;wreg free
  5611   0023A2  1614               	andwf	lcd_8bit_initialize@ret^0,f,c
  5612   0023A4                     
  5613                           ;ECU/LCD/ecu_lcd.c: 147:         ret &= lcd_8bit_send_command(_lcd, 0x80);
  5614   0023A4  C010  F00A         	movff	lcd_8bit_initialize@_lcd,lcd_8bit_send_command@_lcd
  5615   0023A8  0E80               	movlw	128
  5616   0023AA  6E0B               	movwf	lcd_8bit_send_command@command^0,c
  5617   0023AC  EC4B  F016         	call	_lcd_8bit_send_command	;wreg free
  5618   0023B0  1614               	andwf	lcd_8bit_initialize@ret^0,f,c
  5619   0023B2                     l66:
  5620   0023B2  0012               	return		;funcret
  5621   0023B4                     __end_of_lcd_8bit_initialize:
  5622                           	callstack 0
  5623                           
  5624 ;; *************** function _lcd_8bit_send_command *****************
  5625 ;; Defined at:
  5626 ;;		line 153 in file "ECU/LCD/ecu_lcd.c"
  5627 ;; Parameters:    Size  Location     Type
  5628 ;;  _lcd            1    9[COMRAM] PTR const struct .
  5629 ;;		 -> lcd(10), 
  5630 ;;  command         1   10[COMRAM] unsigned char 
  5631 ;; Auto vars:     Size  Location     Type
  5632 ;;  count           1   14[COMRAM] unsigned char 
  5633 ;;  ret             1   13[COMRAM] unsigned char 
  5634 ;; Return value:  Size  Location     Type
  5635 ;;                  1    wreg      unsigned char 
  5636 ;; Registers used:
  5637 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5638 ;; Tracked objects:
  5639 ;;		On entry : 0/0
  5640 ;;		On exit  : 0/0
  5641 ;;		Unchanged: 0/0
  5642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5643 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5644 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5645 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5646 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5647 ;;Total ram usage:        6 bytes
  5648 ;; Hardware stack levels used: 1
  5649 ;; Hardware stack levels required when called: 4
  5650 ;; This function calls:
  5651 ;;		_gpio_pin_write_logic
  5652 ;;		_lcd_8bit_enable_signal
  5653 ;; This function is called by:
  5654 ;;		_lcd_8bit_initialize
  5655 ;;		_lcd_8bit_set_cursor
  5656 ;;		_main
  5657 ;;		_lcd_8bit_send_custom_char
  5658 ;; This function uses a non-reentrant model
  5659 ;;
  5660                           
  5661                           	psect	text29
  5662   002C96                     __ptext29:
  5663                           	callstack 0
  5664   002C96                     _lcd_8bit_send_command:
  5665                           	callstack 24
  5666   002C96                     
  5667                           ;ECU/LCD/ecu_lcd.c: 156:     if(((void*)0) == _lcd){
  5668   002C96  500A               	movf	lcd_8bit_send_command@_lcd^0,w,c
  5669   002C98  A4D8               	btfss	status,2,c
  5670   002C9A  EF51  F016         	goto	u3021
  5671   002C9E  EF53  F016         	goto	u3020
  5672   002CA2                     u3021:
  5673   002CA2  EF57  F016         	goto	l3532
  5674   002CA6                     u3020:
  5675   002CA6                     
  5676                           ;ECU/LCD/ecu_lcd.c: 157:         ret = (Std_ReturnType)1;
  5677   002CA6  0E01               	movlw	1
  5678   002CA8  6E0E               	movwf	lcd_8bit_send_command@ret^0,c
  5679                           
  5680                           ;ECU/LCD/ecu_lcd.c: 158:     }
  5681   002CAA  EF83  F016         	goto	l3548
  5682   002CAE                     l3532:
  5683                           
  5684                           ;ECU/LCD/ecu_lcd.c: 160:         ret = gpio_pin_write_logic(&(_lcd->rs), GPIO_LOW);
  5685   002CAE  C00A  F001         	movff	lcd_8bit_send_command@_lcd,gpio_pin_write_logic@_pin_config
  5686   002CB2  0E00               	movlw	0
  5687   002CB4  6E02               	movwf	gpio_pin_write_logic@logic^0,c
  5688   002CB6  EC36  F010         	call	_gpio_pin_write_logic	;wreg free
  5689   002CBA  6E0E               	movwf	lcd_8bit_send_command@ret^0,c
  5690   002CBC                     
  5691                           ;ECU/LCD/ecu_lcd.c: 161:         for(uint8 count=0; count<8; count++){
  5692   002CBC  0E00               	movlw	0
  5693   002CBE  6E0F               	movwf	lcd_8bit_send_command@count^0,c
  5694   002CC0                     l3540:
  5695                           
  5696                           ;ECU/LCD/ecu_lcd.c: 162:             ret &= gpio_pin_write_logic(&(_lcd->data[count]), (
      +                          command >> count) & 0x01);
  5697   002CC0  500A               	movf	lcd_8bit_send_command@_lcd^0,w,c
  5698   002CC2  240F               	addwf	lcd_8bit_send_command@count^0,w,c
  5699   002CC4  0F02               	addlw	2
  5700   002CC6  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  5701   002CC8  C00F  F00C         	movff	lcd_8bit_send_command@count,??_lcd_8bit_send_command
  5702   002CCC  C00B  F00D         	movff	lcd_8bit_send_command@command,??_lcd_8bit_send_command+1
  5703   002CD0  2A0C               	incf	??_lcd_8bit_send_command^0,f,c
  5704   002CD2  EF6D  F016         	goto	u3034
  5705   002CD6                     u3035:
  5706   002CD6  90D8               	bcf	status,0,c
  5707   002CD8  320D               	rrcf	(??_lcd_8bit_send_command+1)^0,f,c
  5708   002CDA                     u3034:
  5709   002CDA  2E0C               	decfsz	??_lcd_8bit_send_command^0,f,c
  5710   002CDC  EF6B  F016         	goto	u3035
  5711   002CE0  500D               	movf	(??_lcd_8bit_send_command+1)^0,w,c
  5712   002CE2  0B01               	andlw	1
  5713   002CE4  6E02               	movwf	gpio_pin_write_logic@logic^0,c
  5714   002CE6  EC36  F010         	call	_gpio_pin_write_logic	;wreg free
  5715   002CEA  160E               	andwf	lcd_8bit_send_command@ret^0,f,c
  5716   002CEC                     
  5717                           ;ECU/LCD/ecu_lcd.c: 163:         }
  5718   002CEC  2A0F               	incf	lcd_8bit_send_command@count^0,f,c
  5719   002CEE  0E07               	movlw	7
  5720   002CF0  640F               	cpfsgt	lcd_8bit_send_command@count^0,c
  5721   002CF2  EF7D  F016         	goto	u3041
  5722   002CF6  EF7F  F016         	goto	u3040
  5723   002CFA                     u3041:
  5724   002CFA  EF60  F016         	goto	l3540
  5725   002CFE                     u3040:
  5726   002CFE                     
  5727                           ;ECU/LCD/ecu_lcd.c: 164:         lcd_8bit_enable_signal(_lcd);
  5728   002CFE  C00A  F008         	movff	lcd_8bit_send_command@_lcd,lcd_8bit_enable_signal@_lcd
  5729   002D02  EC66  F018         	call	_lcd_8bit_enable_signal	;wreg free
  5730   002D06                     l3548:
  5731                           
  5732                           ;ECU/LCD/ecu_lcd.c: 166:     return ret;
  5733   002D06  500E               	movf	lcd_8bit_send_command@ret^0,w,c
  5734   002D08  0012               	return		;funcret
  5735   002D0A                     __end_of_lcd_8bit_send_command:
  5736                           	callstack 0
  5737                           
  5738 ;; *************** function _lcd_8bit_enable_signal *****************
  5739 ;; Defined at:
  5740 ;;		line 336 in file "ECU/LCD/ecu_lcd.c"
  5741 ;; Parameters:    Size  Location     Type
  5742 ;;  _lcd            1    7[COMRAM] PTR const struct .
  5743 ;;		 -> lcd(10), 
  5744 ;; Auto vars:     Size  Location     Type
  5745 ;;  ret             1    8[COMRAM] unsigned char 
  5746 ;; Return value:  Size  Location     Type
  5747 ;;                  1    wreg      unsigned char 
  5748 ;; Registers used:
  5749 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5750 ;; Tracked objects:
  5751 ;;		On entry : 0/0
  5752 ;;		On exit  : 0/0
  5753 ;;		Unchanged: 0/0
  5754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5755 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5756 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5758 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5759 ;;Total ram usage:        2 bytes
  5760 ;; Hardware stack levels used: 1
  5761 ;; Hardware stack levels required when called: 3
  5762 ;; This function calls:
  5763 ;;		_gpio_pin_write_logic
  5764 ;; This function is called by:
  5765 ;;		_lcd_8bit_send_command
  5766 ;;		_lcd_8bit_send_char
  5767 ;; This function uses a non-reentrant model
  5768 ;;
  5769                           
  5770                           	psect	text30
  5771   0030CC                     __ptext30:
  5772                           	callstack 0
  5773   0030CC                     _lcd_8bit_enable_signal:
  5774                           	callstack 24
  5775   0030CC                     
  5776                           ;ECU/LCD/ecu_lcd.c: 336: static Std_ReturnType lcd_8bit_enable_signal(const lcd_8bit_mod
      +                          e *_lcd);ECU/LCD/ecu_lcd.c: 337: {;ECU/LCD/ecu_lcd.c: 338:     Std_ReturnType ret = (Std
      +                          _ReturnType)1;
  5777   0030CC  0E01               	movlw	1
  5778   0030CE  6E09               	movwf	lcd_8bit_enable_signal@ret^0,c
  5779   0030D0                     
  5780                           ;ECU/LCD/ecu_lcd.c: 339:     ret &= gpio_pin_write_logic(&(_lcd->en), GPIO_HIGH);
  5781   0030D0  2808               	incf	lcd_8bit_enable_signal@_lcd^0,w,c
  5782   0030D2  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  5783   0030D4  0E01               	movlw	1
  5784   0030D6  6E02               	movwf	gpio_pin_write_logic@logic^0,c
  5785   0030D8  EC36  F010         	call	_gpio_pin_write_logic	;wreg free
  5786   0030DC  1609               	andwf	lcd_8bit_enable_signal@ret^0,f,c
  5787   0030DE                     
  5788                           ;ECU/LCD/ecu_lcd.c: 340:     _delay((unsigned long)((5)*(80000000UL/4000000.0)));
  5789   0030DE  0E21               	movlw	33
  5790   0030E0                     u3687:
  5791   0030E0  2EE8               	decfsz	wreg,f,c
  5792   0030E2  D7FE               	bra	u3687
  5793   0030E4  0000               	nop	
  5794   0030E6                     
  5795                           ;ECU/LCD/ecu_lcd.c: 341:     ret &= gpio_pin_write_logic(&(_lcd->en), GPIO_LOW);
  5796   0030E6  2808               	incf	lcd_8bit_enable_signal@_lcd^0,w,c
  5797   0030E8  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  5798   0030EA  0E00               	movlw	0
  5799   0030EC  6E02               	movwf	gpio_pin_write_logic@logic^0,c
  5800   0030EE  EC36  F010         	call	_gpio_pin_write_logic	;wreg free
  5801   0030F2  1609               	andwf	lcd_8bit_enable_signal@ret^0,f,c
  5802   0030F4  0012               	return		;funcret
  5803   0030F6                     __end_of_lcd_8bit_enable_signal:
  5804                           	callstack 0
  5805                           
  5806 ;; *************** function _gpio_pin_initialize *****************
  5807 ;; Defined at:
  5808 ;;		line 103 in file "MCAL/GPIO/hal_gpio.c"
  5809 ;; Parameters:    Size  Location     Type
  5810 ;;  _pin_config     1    7[COMRAM] PTR const struct .
  5811 ;;		 -> lcd$data(8), lcd(10), 
  5812 ;; Auto vars:     Size  Location     Type
  5813 ;;  ret             1    9[COMRAM] unsigned char 
  5814 ;; Return value:  Size  Location     Type
  5815 ;;                  1    wreg      unsigned char 
  5816 ;; Registers used:
  5817 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5818 ;; Tracked objects:
  5819 ;;		On entry : 0/0
  5820 ;;		On exit  : 0/0
  5821 ;;		Unchanged: 0/0
  5822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5823 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5824 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5825 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5826 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5827 ;;Total ram usage:        3 bytes
  5828 ;; Hardware stack levels used: 1
  5829 ;; Hardware stack levels required when called: 3
  5830 ;; This function calls:
  5831 ;;		_gpio_pin_direction_initialize
  5832 ;;		_gpio_pin_write_logic
  5833 ;; This function is called by:
  5834 ;;		_lcd_8bit_initialize
  5835 ;;		_lcd_4bit_initialize
  5836 ;; This function uses a non-reentrant model
  5837 ;;
  5838                           
  5839                           	psect	text31
  5840   002B34                     __ptext31:
  5841                           	callstack 0
  5842   002B34                     _gpio_pin_initialize:
  5843                           	callstack 25
  5844   002B34                     
  5845                           ;MCAL/GPIO/hal_gpio.c: 106:     if((((void*)0) == _pin_config) || (7 < _pin_config->Pin)
      +                           || (4 < _pin_config->Port)){
  5846   002B34  5008               	movf	gpio_pin_initialize@_pin_config^0,w,c
  5847   002B36  B4D8               	btfsc	status,2,c
  5848   002B38  EFA0  F015         	goto	u2991
  5849   002B3C  EFA2  F015         	goto	u2990
  5850   002B40                     u2991:
  5851   002B40  EFC0  F015         	goto	l3520
  5852   002B44                     u2990:
  5853   002B44  5008               	movf	gpio_pin_initialize@_pin_config^0,w,c
  5854   002B46  6ED9               	movwf	fsr2l,c
  5855   002B48  6ADA               	clrf	fsr2h,c
  5856   002B4A  30DF               	rrcf	223,w,c
  5857   002B4C  32E8               	rrcf	wreg,f,c
  5858   002B4E  32E8               	rrcf	wreg,f,c
  5859   002B50  0B07               	andlw	7
  5860   002B52  6E09               	movwf	??_gpio_pin_initialize^0,c
  5861   002B54  0E08               	movlw	8
  5862   002B56  6009               	cpfslt	??_gpio_pin_initialize^0,c
  5863   002B58  EFB0  F015         	goto	u3001
  5864   002B5C  EFB2  F015         	goto	u3000
  5865   002B60                     u3001:
  5866   002B60  EFC0  F015         	goto	l3520
  5867   002B64                     u3000:
  5868   002B64  5008               	movf	gpio_pin_initialize@_pin_config^0,w,c
  5869   002B66  6ED9               	movwf	fsr2l,c
  5870   002B68  6ADA               	clrf	fsr2h,c
  5871   002B6A  50DF               	movf	223,w,c
  5872   002B6C  0B07               	andlw	7
  5873   002B6E  6E09               	movwf	??_gpio_pin_initialize^0,c
  5874   002B70  0E04               	movlw	4
  5875   002B72  6409               	cpfsgt	??_gpio_pin_initialize^0,c
  5876   002B74  EFBE  F015         	goto	u3011
  5877   002B78  EFC0  F015         	goto	u3010
  5878   002B7C                     u3011:
  5879   002B7C  EFC4  F015         	goto	l3522
  5880   002B80                     u3010:
  5881   002B80                     l3520:
  5882                           
  5883                           ;MCAL/GPIO/hal_gpio.c: 107:         ret = (Std_ReturnType)1;
  5884   002B80  0E01               	movlw	1
  5885   002B82  6E0A               	movwf	gpio_pin_initialize@ret^0,c
  5886                           
  5887                           ;MCAL/GPIO/hal_gpio.c: 108:     }
  5888   002B84  EFD5  F015         	goto	l3524
  5889   002B88                     l3522:
  5890                           
  5891                           ;MCAL/GPIO/hal_gpio.c: 110:         ret = gpio_pin_direction_initialize(_pin_config);
  5892   002B88  C008  F001         	movff	gpio_pin_initialize@_pin_config,gpio_pin_direction_initialize@_pin_config
  5893   002B8C  ECA3  F00F         	call	_gpio_pin_direction_initialize	;wreg free
  5894   002B90  6E0A               	movwf	gpio_pin_initialize@ret^0,c
  5895                           
  5896                           ;MCAL/GPIO/hal_gpio.c: 111:         ret &= gpio_pin_write_logic(_pin_config, _pin_config
      +                          ->Logic);
  5897   002B92  C008  F001         	movff	gpio_pin_initialize@_pin_config,gpio_pin_write_logic@_pin_config
  5898   002B96  5008               	movf	gpio_pin_initialize@_pin_config^0,w,c
  5899   002B98  6ED9               	movwf	fsr2l,c
  5900   002B9A  6ADA               	clrf	fsr2h,c
  5901   002B9C  0E00               	movlw	0
  5902   002B9E  BEDF               	btfsc	indf2,7,c
  5903   002BA0  0E01               	movlw	1
  5904   002BA2  6E02               	movwf	gpio_pin_write_logic@logic^0,c
  5905   002BA4  EC36  F010         	call	_gpio_pin_write_logic	;wreg free
  5906   002BA8  160A               	andwf	gpio_pin_initialize@ret^0,f,c
  5907   002BAA                     l3524:
  5908                           
  5909                           ;MCAL/GPIO/hal_gpio.c: 113:     return ret;
  5910   002BAA  500A               	movf	gpio_pin_initialize@ret^0,w,c
  5911   002BAC  0012               	return		;funcret
  5912   002BAE                     __end_of_gpio_pin_initialize:
  5913                           	callstack 0
  5914                           
  5915 ;; *************** function _gpio_pin_write_logic *****************
  5916 ;; Defined at:
  5917 ;;		line 53 in file "MCAL/GPIO/hal_gpio.c"
  5918 ;; Parameters:    Size  Location     Type
  5919 ;;  _pin_config     1    0[COMRAM] PTR const struct .
  5920 ;;		 -> lcd$data(8), lcd(10), 
  5921 ;;  logic           1    1[COMRAM] enum E2681
  5922 ;; Auto vars:     Size  Location     Type
  5923 ;;  ret             1    0        unsigned char 
  5924 ;; Return value:  Size  Location     Type
  5925 ;;                  1    wreg      unsigned char 
  5926 ;; Registers used:
  5927 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5928 ;; Tracked objects:
  5929 ;;		On entry : 0/0
  5930 ;;		On exit  : 0/0
  5931 ;;		Unchanged: 0/0
  5932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5933 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5935 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5936 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5937 ;;Total ram usage:        7 bytes
  5938 ;; Hardware stack levels used: 1
  5939 ;; Hardware stack levels required when called: 2
  5940 ;; This function calls:
  5941 ;;		Nothing
  5942 ;; This function is called by:
  5943 ;;		_lcd_8bit_send_command
  5944 ;;		_lcd_8bit_send_char
  5945 ;;		_lcd_8bit_enable_signal
  5946 ;;		_gpio_pin_initialize
  5947 ;;		_lcd_4bit_send_command
  5948 ;;		_lcd_4bit_send_char
  5949 ;;		_lcd_send_4bit
  5950 ;;		_lcd_4bit_enable_signal
  5951 ;; This function uses a non-reentrant model
  5952 ;;
  5953                           
  5954                           	psect	text32
  5955   00206C                     __ptext32:
  5956                           	callstack 0
  5957   00206C                     _gpio_pin_write_logic:
  5958                           	callstack 24
  5959   00206C                     
  5960                           ;MCAL/GPIO/hal_gpio.c: 56:     if((((void*)0) == _pin_config) || (7 < _pin_config->Pin) 
      +                          || (4 < _pin_config->Port)){
  5961   00206C  5001               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  5962   00206E  B4D8               	btfsc	status,2,c
  5963   002070  EF3C  F010         	goto	u2181
  5964   002074  EF3E  F010         	goto	u2180
  5965   002078                     u2181:
  5966   002078  EF5C  F010         	goto	l3006
  5967   00207C                     u2180:
  5968   00207C  5001               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  5969   00207E  6ED9               	movwf	fsr2l,c
  5970   002080  6ADA               	clrf	fsr2h,c
  5971   002082  30DF               	rrcf	223,w,c
  5972   002084  32E8               	rrcf	wreg,f,c
  5973   002086  32E8               	rrcf	wreg,f,c
  5974   002088  0B07               	andlw	7
  5975   00208A  6E03               	movwf	??_gpio_pin_write_logic^0,c
  5976   00208C  0E08               	movlw	8
  5977   00208E  6003               	cpfslt	??_gpio_pin_write_logic^0,c
  5978   002090  EF4C  F010         	goto	u2191
  5979   002094  EF4E  F010         	goto	u2190
  5980   002098                     u2191:
  5981   002098  EF5C  F010         	goto	l3006
  5982   00209C                     u2190:
  5983   00209C  5001               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  5984   00209E  6ED9               	movwf	fsr2l,c
  5985   0020A0  6ADA               	clrf	fsr2h,c
  5986   0020A2  50DF               	movf	223,w,c
  5987   0020A4  0B07               	andlw	7
  5988   0020A6  6E03               	movwf	??_gpio_pin_write_logic^0,c
  5989   0020A8  0E04               	movlw	4
  5990   0020AA  6403               	cpfsgt	??_gpio_pin_write_logic^0,c
  5991   0020AC  EF5A  F010         	goto	u2201
  5992   0020B0  EF5C  F010         	goto	u2200
  5993   0020B4                     u2201:
  5994   0020B4  EFB1  F010         	goto	l3018
  5995   0020B8                     u2200:
  5996   0020B8                     l3006:
  5997                           
  5998                           ;MCAL/GPIO/hal_gpio.c: 58:     }
  5999   0020B8  EFC6  F010         	goto	l3020
  6000   0020BC                     l3008:
  6001                           
  6002                           ;MCAL/GPIO/hal_gpio.c: 62:                 (*lat_registers[_pin_config->Port] &= ~( 1 <<
      +                           _pin_config->Pin ));
  6003   0020BC  5001               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  6004   0020BE  6ED9               	movwf	fsr2l,c
  6005   0020C0  6ADA               	clrf	fsr2h,c
  6006   0020C2  30DF               	rrcf	223,w,c
  6007   0020C4  32E8               	rrcf	wreg,f,c
  6008   0020C6  32E8               	rrcf	wreg,f,c
  6009   0020C8  0B07               	andlw	7
  6010   0020CA  6E03               	movwf	??_gpio_pin_write_logic^0,c
  6011   0020CC  0E01               	movlw	1
  6012   0020CE  6E04               	movwf	(??_gpio_pin_write_logic+1)^0,c
  6013   0020D0  2A03               	incf	??_gpio_pin_write_logic^0,f,c
  6014   0020D2  EF6D  F010         	goto	u2214
  6015   0020D6                     u2215:
  6016   0020D6  90D8               	bcf	status,0,c
  6017   0020D8  3604               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  6018   0020DA                     u2214:
  6019   0020DA  2E03               	decfsz	??_gpio_pin_write_logic^0,f,c
  6020   0020DC  EF6B  F010         	goto	u2215
  6021   0020E0  5004               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  6022   0020E2  0AFF               	xorlw	255
  6023   0020E4  6E05               	movwf	(??_gpio_pin_write_logic+2)^0,c
  6024   0020E6  5001               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  6025   0020E8  6ED9               	movwf	fsr2l,c
  6026   0020EA  6ADA               	clrf	fsr2h,c
  6027   0020EC  50DF               	movf	223,w,c
  6028   0020EE  0B07               	andlw	7
  6029   0020F0  0D02               	mullw	2
  6030   0020F2  50F3               	movf	243,w,c
  6031   0020F4  0FB8               	addlw	low _lat_registers
  6032   0020F6  6ED9               	movwf	fsr2l,c
  6033   0020F8  6ADA               	clrf	fsr2h,c
  6034   0020FA  CFDE F006          	movff	postinc2,??_gpio_pin_write_logic+3
  6035   0020FE  CFDD F007          	movff	postdec2,??_gpio_pin_write_logic+4
  6036   002102  C006  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  6037   002106  C007  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  6038   00210A  5005               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  6039   00210C  16DF               	andwf	indf2,f,c
  6040   00210E  EF5C  F010         	goto	l3006
  6041   002112                     l3012:
  6042                           
  6043                           ;MCAL/GPIO/hal_gpio.c: 66:                 (*lat_registers[_pin_config->Port] |= ( 1 << 
      +                          _pin_config->Pin ));
  6044   002112  5001               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  6045   002114  6ED9               	movwf	fsr2l,c
  6046   002116  6ADA               	clrf	fsr2h,c
  6047   002118  30DF               	rrcf	223,w,c
  6048   00211A  32E8               	rrcf	wreg,f,c
  6049   00211C  32E8               	rrcf	wreg,f,c
  6050   00211E  0B07               	andlw	7
  6051   002120  6E03               	movwf	??_gpio_pin_write_logic^0,c
  6052   002122  0E01               	movlw	1
  6053   002124  6E04               	movwf	(??_gpio_pin_write_logic+1)^0,c
  6054   002126  2A03               	incf	??_gpio_pin_write_logic^0,f,c
  6055   002128  EF98  F010         	goto	u2224
  6056   00212C                     u2225:
  6057   00212C  90D8               	bcf	status,0,c
  6058   00212E  3604               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  6059   002130                     u2224:
  6060   002130  2E03               	decfsz	??_gpio_pin_write_logic^0,f,c
  6061   002132  EF96  F010         	goto	u2225
  6062   002136  5001               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  6063   002138  6ED9               	movwf	fsr2l,c
  6064   00213A  6ADA               	clrf	fsr2h,c
  6065   00213C  50DF               	movf	223,w,c
  6066   00213E  0B07               	andlw	7
  6067   002140  0D02               	mullw	2
  6068   002142  50F3               	movf	243,w,c
  6069   002144  0FB8               	addlw	low _lat_registers
  6070   002146  6ED9               	movwf	fsr2l,c
  6071   002148  6ADA               	clrf	fsr2h,c
  6072   00214A  CFDE F005          	movff	postinc2,??_gpio_pin_write_logic+2
  6073   00214E  CFDD F006          	movff	postdec2,??_gpio_pin_write_logic+3
  6074   002152  C005  FFD9         	movff	??_gpio_pin_write_logic+2,fsr2l
  6075   002156  C006  FFDA         	movff	??_gpio_pin_write_logic+3,fsr2h
  6076   00215A  5004               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  6077   00215C  12DF               	iorwf	indf2,f,c
  6078   00215E  EF5C  F010         	goto	l3006
  6079   002162                     l3018:
  6080   002162  5002               	movf	gpio_pin_write_logic@logic^0,w,c
  6081   002164  6E03               	movwf	??_gpio_pin_write_logic^0,c
  6082   002166  6A04               	clrf	(??_gpio_pin_write_logic+1)^0,c
  6083                           
  6084                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6085                           ; Switch size 1, requested type "simple"
  6086                           ; Number of cases is 1, Range of values is 0 to 0
  6087                           ; switch strategies available:
  6088                           ; Name         Instructions Cycles
  6089                           ; simple_byte            4     3 (average)
  6090                           ;	Chosen strategy is simple_byte
  6091   002168  5004               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  6092   00216A  0A00               	xorlw	0	; case 0
  6093   00216C  B4D8               	btfsc	status,2,c
  6094   00216E  EFBB  F010         	goto	l4224
  6095   002172  EF5C  F010         	goto	l3006
  6096   002176                     l4224:
  6097                           
  6098                           ; Switch size 1, requested type "simple"
  6099                           ; Number of cases is 2, Range of values is 0 to 1
  6100                           ; switch strategies available:
  6101                           ; Name         Instructions Cycles
  6102                           ; simple_byte            7     4 (average)
  6103                           ;	Chosen strategy is simple_byte
  6104   002176  5003               	movf	??_gpio_pin_write_logic^0,w,c
  6105   002178  0A00               	xorlw	0	; case 0
  6106   00217A  B4D8               	btfsc	status,2,c
  6107   00217C  EF5E  F010         	goto	l3008
  6108   002180  0A01               	xorlw	1	; case 1
  6109   002182  B4D8               	btfsc	status,2,c
  6110   002184  EF89  F010         	goto	l3012
  6111   002188  EF5C  F010         	goto	l3006
  6112   00218C                     l3020:
  6113                           
  6114                           ;MCAL/GPIO/hal_gpio.c: 73:     return ret;
  6115   00218C  0E01               	movlw	1
  6116   00218E  0012               	return		;funcret
  6117   002190                     __end_of_gpio_pin_write_logic:
  6118                           	callstack 0
  6119                           
  6120 ;; *************** function _gpio_pin_direction_initialize *****************
  6121 ;; Defined at:
  6122 ;;		line 16 in file "MCAL/GPIO/hal_gpio.c"
  6123 ;; Parameters:    Size  Location     Type
  6124 ;;  _pin_config     1    0[COMRAM] PTR const struct .
  6125 ;;		 -> lcd$data(8), lcd(10), 
  6126 ;; Auto vars:     Size  Location     Type
  6127 ;;  ret             1    0        unsigned char 
  6128 ;; Return value:  Size  Location     Type
  6129 ;;                  1    wreg      unsigned char 
  6130 ;; Registers used:
  6131 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6132 ;; Tracked objects:
  6133 ;;		On entry : 0/0
  6134 ;;		On exit  : 0/0
  6135 ;;		Unchanged: 0/0
  6136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6137 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6139 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6140 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6141 ;;Total ram usage:        6 bytes
  6142 ;; Hardware stack levels used: 1
  6143 ;; Hardware stack levels required when called: 2
  6144 ;; This function calls:
  6145 ;;		Nothing
  6146 ;; This function is called by:
  6147 ;;		_gpio_pin_initialize
  6148 ;; This function uses a non-reentrant model
  6149 ;;
  6150                           
  6151                           	psect	text33
  6152   001F46                     __ptext33:
  6153                           	callstack 0
  6154   001F46                     _gpio_pin_direction_initialize:
  6155                           	callstack 25
  6156   001F46                     
  6157                           ;MCAL/GPIO/hal_gpio.c: 19:     if((((void*)0) == _pin_config) || (7 < _pin_config->Pin) 
      +                          || (4 < _pin_config->Port)){
  6158   001F46  5001               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  6159   001F48  B4D8               	btfsc	status,2,c
  6160   001F4A  EFA9  F00F         	goto	u2781
  6161   001F4E  EFAB  F00F         	goto	u2780
  6162   001F52                     u2781:
  6163   001F52  EFC9  F00F         	goto	l3300
  6164   001F56                     u2780:
  6165   001F56  5001               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  6166   001F58  6ED9               	movwf	fsr2l,c
  6167   001F5A  6ADA               	clrf	fsr2h,c
  6168   001F5C  30DF               	rrcf	223,w,c
  6169   001F5E  32E8               	rrcf	wreg,f,c
  6170   001F60  32E8               	rrcf	wreg,f,c
  6171   001F62  0B07               	andlw	7
  6172   001F64  6E02               	movwf	??_gpio_pin_direction_initialize^0,c
  6173   001F66  0E08               	movlw	8
  6174   001F68  6002               	cpfslt	??_gpio_pin_direction_initialize^0,c
  6175   001F6A  EFB9  F00F         	goto	u2791
  6176   001F6E  EFBB  F00F         	goto	u2790
  6177   001F72                     u2791:
  6178   001F72  EFC9  F00F         	goto	l3300
  6179   001F76                     u2790:
  6180   001F76  5001               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  6181   001F78  6ED9               	movwf	fsr2l,c
  6182   001F7A  6ADA               	clrf	fsr2h,c
  6183   001F7C  50DF               	movf	223,w,c
  6184   001F7E  0B07               	andlw	7
  6185   001F80  6E02               	movwf	??_gpio_pin_direction_initialize^0,c
  6186   001F82  0E04               	movlw	4
  6187   001F84  6402               	cpfsgt	??_gpio_pin_direction_initialize^0,c
  6188   001F86  EFC7  F00F         	goto	u2801
  6189   001F8A  EFC9  F00F         	goto	u2800
  6190   001F8E                     u2801:
  6191   001F8E  EF1E  F010         	goto	l3312
  6192   001F92                     u2800:
  6193   001F92                     l3300:
  6194                           
  6195                           ;MCAL/GPIO/hal_gpio.c: 21:     }
  6196   001F92  EF34  F010         	goto	l3314
  6197   001F96                     l3302:
  6198                           
  6199                           ;MCAL/GPIO/hal_gpio.c: 25:                 (*tris_registers[_pin_config->Port] |= ( 1 <<
      +                           _pin_config->Pin ));
  6200   001F96  5001               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  6201   001F98  6ED9               	movwf	fsr2l,c
  6202   001F9A  6ADA               	clrf	fsr2h,c
  6203   001F9C  30DF               	rrcf	223,w,c
  6204   001F9E  32E8               	rrcf	wreg,f,c
  6205   001FA0  32E8               	rrcf	wreg,f,c
  6206   001FA2  0B07               	andlw	7
  6207   001FA4  6E02               	movwf	??_gpio_pin_direction_initialize^0,c
  6208   001FA6  0E01               	movlw	1
  6209   001FA8  6E03               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  6210   001FAA  2A02               	incf	??_gpio_pin_direction_initialize^0,f,c
  6211   001FAC  EFDA  F00F         	goto	u2814
  6212   001FB0                     u2815:
  6213   001FB0  90D8               	bcf	status,0,c
  6214   001FB2  3603               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  6215   001FB4                     u2814:
  6216   001FB4  2E02               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  6217   001FB6  EFD8  F00F         	goto	u2815
  6218   001FBA  5001               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  6219   001FBC  6ED9               	movwf	fsr2l,c
  6220   001FBE  6ADA               	clrf	fsr2h,c
  6221   001FC0  50DF               	movf	223,w,c
  6222   001FC2  0B07               	andlw	7
  6223   001FC4  0D02               	mullw	2
  6224   001FC6  50F3               	movf	243,w,c
  6225   001FC8  0F58               	addlw	low _tris_registers
  6226   001FCA  6ED9               	movwf	fsr2l,c
  6227   001FCC  6ADA               	clrf	fsr2h,c
  6228   001FCE  CFDE F004          	movff	postinc2,??_gpio_pin_direction_initialize+2
  6229   001FD2  CFDD F005          	movff	postdec2,??_gpio_pin_direction_initialize+3
  6230   001FD6  C004  FFD9         	movff	??_gpio_pin_direction_initialize+2,fsr2l
  6231   001FDA  C005  FFDA         	movff	??_gpio_pin_direction_initialize+3,fsr2h
  6232   001FDE  5003               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  6233   001FE0  12DF               	iorwf	indf2,f,c
  6234   001FE2  EFC9  F00F         	goto	l3300
  6235   001FE6                     l3306:
  6236                           
  6237                           ;MCAL/GPIO/hal_gpio.c: 29:                 (*tris_registers[_pin_config->Port] &= ~( 1 <
      +                          < _pin_config->Pin ));
  6238   001FE6  5001               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  6239   001FE8  6ED9               	movwf	fsr2l,c
  6240   001FEA  6ADA               	clrf	fsr2h,c
  6241   001FEC  30DF               	rrcf	223,w,c
  6242   001FEE  32E8               	rrcf	wreg,f,c
  6243   001FF0  32E8               	rrcf	wreg,f,c
  6244   001FF2  0B07               	andlw	7
  6245   001FF4  6E02               	movwf	??_gpio_pin_direction_initialize^0,c
  6246   001FF6  0E01               	movlw	1
  6247   001FF8  6E03               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  6248   001FFA  2A02               	incf	??_gpio_pin_direction_initialize^0,f,c
  6249   001FFC  EF02  F010         	goto	u2824
  6250   002000                     u2825:
  6251   002000  90D8               	bcf	status,0,c
  6252   002002  3603               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  6253   002004                     u2824:
  6254   002004  2E02               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  6255   002006  EF00  F010         	goto	u2825
  6256   00200A  5003               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  6257   00200C  0AFF               	xorlw	255
  6258   00200E  6E04               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  6259   002010  5001               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  6260   002012  6ED9               	movwf	fsr2l,c
  6261   002014  6ADA               	clrf	fsr2h,c
  6262   002016  50DF               	movf	223,w,c
  6263   002018  0B07               	andlw	7
  6264   00201A  0D02               	mullw	2
  6265   00201C  50F3               	movf	243,w,c
  6266   00201E  0F58               	addlw	low _tris_registers
  6267   002020  6ED9               	movwf	fsr2l,c
  6268   002022  6ADA               	clrf	fsr2h,c
  6269   002024  CFDE F005          	movff	postinc2,??_gpio_pin_direction_initialize+3
  6270   002028  CFDD F006          	movff	postdec2,??_gpio_pin_direction_initialize+4
  6271   00202C  C005  FFD9         	movff	??_gpio_pin_direction_initialize+3,fsr2l
  6272   002030  C006  FFDA         	movff	??_gpio_pin_direction_initialize+4,fsr2h
  6273   002034  5004               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  6274   002036  16DF               	andwf	indf2,f,c
  6275   002038  EFC9  F00F         	goto	l3300
  6276   00203C                     l3312:
  6277   00203C  5001               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  6278   00203E  6ED9               	movwf	fsr2l,c
  6279   002040  6ADA               	clrf	fsr2h,c
  6280   002042  BCDF               	btfsc	indf2,6,c
  6281   002044  EF26  F010         	goto	u2831
  6282   002048  EF29  F010         	goto	u2830
  6283   00204C                     u2831:
  6284   00204C  0E01               	movlw	1
  6285   00204E  EF2A  F010         	goto	u2836
  6286   002052                     u2830:
  6287   002052  0E00               	movlw	0
  6288   002054                     u2836:
  6289                           
  6290                           ; Switch size 1, requested type "simple"
  6291                           ; Number of cases is 2, Range of values is 0 to 1
  6292                           ; switch strategies available:
  6293                           ; Name         Instructions Cycles
  6294                           ; simple_byte            7     4 (average)
  6295                           ;	Chosen strategy is simple_byte
  6296   002054  0A00               	xorlw	0	; case 0
  6297   002056  B4D8               	btfsc	status,2,c
  6298   002058  EFF3  F00F         	goto	l3306
  6299   00205C  0A01               	xorlw	1	; case 1
  6300   00205E  B4D8               	btfsc	status,2,c
  6301   002060  EFCB  F00F         	goto	l3302
  6302   002064  EFC9  F00F         	goto	l3300
  6303   002068                     l3314:
  6304                           
  6305                           ;MCAL/GPIO/hal_gpio.c: 36:     return ret;
  6306   002068  0E01               	movlw	1
  6307   00206A  0012               	return		;funcret
  6308   00206C                     __end_of_gpio_pin_direction_initialize:
  6309                           	callstack 0
  6310                           
  6311 ;; *************** function _ADC_Init *****************
  6312 ;; Defined at:
  6313 ;;		line 12 in file "MCAL/ADC/mcal_adc.c"
  6314 ;; Parameters:    Size  Location     Type
  6315 ;;  _adc            1    3[COMRAM] PTR const struct .
  6316 ;;		 -> adc_1(7), 
  6317 ;; Auto vars:     Size  Location     Type
  6318 ;;  ret             1    0        unsigned char 
  6319 ;; Return value:  Size  Location     Type
  6320 ;;                  1    wreg      unsigned char 
  6321 ;; Registers used:
  6322 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6323 ;; Tracked objects:
  6324 ;;		On entry : 0/0
  6325 ;;		On exit  : 0/0
  6326 ;;		Unchanged: 0/0
  6327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6328 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6330 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6331 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6332 ;;Total ram usage:        2 bytes
  6333 ;; Hardware stack levels used: 1
  6334 ;; Hardware stack levels required when called: 3
  6335 ;; This function calls:
  6336 ;;		_adc_input_channel_port_configure
  6337 ;;		_adc_result_format
  6338 ;;		_adc_voltage_reference
  6339 ;; This function is called by:
  6340 ;;		_initialization
  6341 ;; This function uses a non-reentrant model
  6342 ;;
  6343                           
  6344                           	psect	text34
  6345   002844                     __ptext34:
  6346                           	callstack 0
  6347   002844                     _ADC_Init:
  6348                           	callstack 26
  6349   002844                     
  6350                           ;MCAL/ADC/mcal_adc.c: 14:     if(((void*)0) == _adc){
  6351   002844  5004               	movf	ADC_Init@_adc^0,w,c
  6352   002846  A4D8               	btfss	status,2,c
  6353   002848  EF28  F014         	goto	u3221
  6354   00284C  EF2A  F014         	goto	u3220
  6355   002850                     u3221:
  6356   002850  EF2C  F014         	goto	l3774
  6357   002854                     u3220:
  6358   002854                     
  6359                           ;MCAL/ADC/mcal_adc.c: 16:     }
  6360   002854  EF72  F014         	goto	l186
  6361   002858                     l3774:
  6362   002858                     
  6363                           ;MCAL/ADC/mcal_adc.c: 20:         (ADCON0bits.ADON = 0);
  6364   002858  90C2               	bcf	194,0,c	;volatile
  6365   00285A                     
  6366                           ;MCAL/ADC/mcal_adc.c: 23:         (ADCON2bits.ACQT = _adc->TAD_Time);
  6367   00285A  5004               	movf	ADC_Init@_adc^0,w,c
  6368   00285C  6ED9               	movwf	fsr2l,c
  6369   00285E  6ADA               	clrf	fsr2h,c
  6370   002860  0E04               	movlw	4
  6371   002862  26D9               	addwf	fsr2l,f,c
  6372   002864  50DF               	movf	indf2,w,c
  6373   002866  6E05               	movwf	??_ADC_Init^0,c
  6374   002868  4605               	rlncf	??_ADC_Init^0,f,c
  6375   00286A  4605               	rlncf	??_ADC_Init^0,f,c
  6376   00286C  4605               	rlncf	??_ADC_Init^0,f,c
  6377   00286E  50C0               	movf	192,w,c	;volatile
  6378   002870  1805               	xorwf	??_ADC_Init^0,w,c
  6379   002872  0BC7               	andlw	-57
  6380   002874  1805               	xorwf	??_ADC_Init^0,w,c
  6381   002876  6EC0               	movwf	192,c	;volatile
  6382   002878                     
  6383                           ;MCAL/ADC/mcal_adc.c: 26:         (ADCON2bits.ADCS = _adc->FOSC_Clock);
  6384   002878  5004               	movf	ADC_Init@_adc^0,w,c
  6385   00287A  6ED9               	movwf	fsr2l,c
  6386   00287C  6ADA               	clrf	fsr2h,c
  6387   00287E  0E05               	movlw	5
  6388   002880  26D9               	addwf	fsr2l,f,c
  6389   002882  50DF               	movf	indf2,w,c
  6390   002884  6E05               	movwf	??_ADC_Init^0,c
  6391   002886  50C0               	movf	192,w,c	;volatile
  6392   002888  1805               	xorwf	??_ADC_Init^0,w,c
  6393   00288A  0BF8               	andlw	-8
  6394   00288C  1805               	xorwf	??_ADC_Init^0,w,c
  6395   00288E  6EC0               	movwf	192,c	;volatile
  6396   002890                     
  6397                           ;MCAL/ADC/mcal_adc.c: 29:         (ADCON0bits.CHS = _adc->channel);
  6398   002890  5004               	movf	ADC_Init@_adc^0,w,c
  6399   002892  6ED9               	movwf	fsr2l,c
  6400   002894  6ADA               	clrf	fsr2h,c
  6401   002896  0E02               	movlw	2
  6402   002898  26D9               	addwf	fsr2l,f,c
  6403   00289A  50DF               	movf	indf2,w,c
  6404   00289C  6E05               	movwf	??_ADC_Init^0,c
  6405   00289E  4605               	rlncf	??_ADC_Init^0,f,c
  6406   0028A0  4605               	rlncf	??_ADC_Init^0,f,c
  6407   0028A2  50C2               	movf	194,w,c	;volatile
  6408   0028A4  1805               	xorwf	??_ADC_Init^0,w,c
  6409   0028A6  0BC3               	andlw	-61
  6410   0028A8  1805               	xorwf	??_ADC_Init^0,w,c
  6411   0028AA  6EC2               	movwf	194,c	;volatile
  6412   0028AC                     
  6413                           ;MCAL/ADC/mcal_adc.c: 30:         adc_input_channel_port_configure(_adc->channel);
  6414   0028AC  5004               	movf	ADC_Init@_adc^0,w,c
  6415   0028AE  6ED9               	movwf	fsr2l,c
  6416   0028B0  6ADA               	clrf	fsr2h,c
  6417   0028B2  0E02               	movlw	2
  6418   0028B4  26D9               	addwf	fsr2l,f,c
  6419   0028B6  50DF               	movf	indf2,w,c
  6420   0028B8  ECDA  F011         	call	_adc_input_channel_port_configure
  6421   0028BC                     
  6422                           ;MCAL/ADC/mcal_adc.c: 34:         (PIE1bits.ADIE = 1);
  6423   0028BC  8C9D               	bsf	157,6,c	;volatile
  6424   0028BE                     
  6425                           ;MCAL/ADC/mcal_adc.c: 35:         (PIR1bits.ADIF = 0);
  6426   0028BE  9C9E               	bcf	158,6,c	;volatile
  6427   0028C0                     
  6428                           ;MCAL/ADC/mcal_adc.c: 50:         (INTCONbits.GIE = 1);
  6429   0028C0  8EF2               	bsf	242,7,c	;volatile
  6430   0028C2                     
  6431                           ;MCAL/ADC/mcal_adc.c: 51:         (INTCONbits.PEIE = 1);
  6432   0028C2  8CF2               	bsf	242,6,c	;volatile
  6433   0028C4                     
  6434                           ;MCAL/ADC/mcal_adc.c: 53:         InterruptHandler = _adc->ADC_InterruptHandler;
  6435   0028C4  5004               	movf	ADC_Init@_adc^0,w,c
  6436   0028C6  6ED9               	movwf	fsr2l,c
  6437   0028C8  6ADA               	clrf	fsr2h,c
  6438   0028CA  CFDE F072          	movff	postinc2,_InterruptHandler
  6439   0028CE  CFDD F073          	movff	postdec2,_InterruptHandler+1
  6440   0028D2                     
  6441                           ;MCAL/ADC/mcal_adc.c: 57:         adc_result_format(_adc);
  6442   0028D2  C004  F001         	movff	ADC_Init@_adc,adc_result_format@_adc
  6443   0028D6  ECBD  F017         	call	_adc_result_format	;wreg free
  6444   0028DA                     
  6445                           ;MCAL/ADC/mcal_adc.c: 60:         adc_voltage_reference(_adc);
  6446   0028DA  C004  F001         	movff	ADC_Init@_adc,adc_voltage_reference@_adc
  6447   0028DE  EC96  F017         	call	_adc_voltage_reference	;wreg free
  6448   0028E2                     
  6449                           ;MCAL/ADC/mcal_adc.c: 63:         (ADCON0bits.ADON = 1);
  6450   0028E2  80C2               	bsf	194,0,c	;volatile
  6451   0028E4                     l186:
  6452   0028E4  0012               	return		;funcret
  6453   0028E6                     __end_of_ADC_Init:
  6454                           	callstack 0
  6455                           
  6456 ;; *************** function _adc_voltage_reference *****************
  6457 ;; Defined at:
  6458 ;;		line 237 in file "MCAL/ADC/mcal_adc.c"
  6459 ;; Parameters:    Size  Location     Type
  6460 ;;  _adc            1    0[COMRAM] PTR const struct .
  6461 ;;		 -> adc_1(7), 
  6462 ;; Auto vars:     Size  Location     Type
  6463 ;;		None
  6464 ;; Return value:  Size  Location     Type
  6465 ;;                  1    wreg      void 
  6466 ;; Registers used:
  6467 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6468 ;; Tracked objects:
  6469 ;;		On entry : 0/0
  6470 ;;		On exit  : 0/0
  6471 ;;		Unchanged: 0/0
  6472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6473 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6476 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6477 ;;Total ram usage:        1 bytes
  6478 ;; Hardware stack levels used: 1
  6479 ;; Hardware stack levels required when called: 2
  6480 ;; This function calls:
  6481 ;;		Nothing
  6482 ;; This function is called by:
  6483 ;;		_ADC_Init
  6484 ;; This function uses a non-reentrant model
  6485 ;;
  6486                           
  6487                           	psect	text35
  6488   002F2C                     __ptext35:
  6489                           	callstack 0
  6490   002F2C                     _adc_voltage_reference:
  6491                           	callstack 26
  6492   002F2C                     
  6493                           ;MCAL/ADC/mcal_adc.c: 237: static __attribute__((inline)) void adc_voltage_reference(con
      +                          st Adc_t *_adc);MCAL/ADC/mcal_adc.c: 238: {;MCAL/ADC/mcal_adc.c: 239:     switch(_adc->a
      +                          dc_voltage_reference){
  6494   002F2C  EFA4  F017         	goto	l3618
  6495   002F30                     l259:
  6496   002F30  88C1               	bsf	193,4,c	;volatile
  6497   002F32  8AC1               	bsf	193,5,c	;volatile
  6498   002F34  EFBC  F017         	goto	l268
  6499   002F38                     l263:
  6500   002F38  98C1               	bcf	193,4,c	;volatile
  6501   002F3A  9AC1               	bcf	193,5,c	;volatile
  6502   002F3C  EFBC  F017         	goto	l268
  6503   002F40                     l266:
  6504   002F40  98C1               	bcf	193,4,c	;volatile
  6505   002F42  9AC1               	bcf	193,5,c	;volatile
  6506   002F44  EFBC  F017         	goto	l268
  6507   002F48                     l3618:
  6508   002F48  5001               	movf	adc_voltage_reference@_adc^0,w,c
  6509   002F4A  6ED9               	movwf	fsr2l,c
  6510   002F4C  6ADA               	clrf	fsr2h,c
  6511   002F4E  0E06               	movlw	6
  6512   002F50  26D9               	addwf	fsr2l,f,c
  6513   002F52  B0DF               	btfsc	indf2,0,c
  6514   002F54  EFAE  F017         	goto	u3091
  6515   002F58  EFB1  F017         	goto	u3090
  6516   002F5C                     u3091:
  6517   002F5C  0E01               	movlw	1
  6518   002F5E  EFB2  F017         	goto	u3096
  6519   002F62                     u3090:
  6520   002F62  0E00               	movlw	0
  6521   002F64                     u3096:
  6522                           
  6523                           ; Switch size 1, requested type "simple"
  6524                           ; Number of cases is 2, Range of values is 0 to 1
  6525                           ; switch strategies available:
  6526                           ; Name         Instructions Cycles
  6527                           ; simple_byte            7     4 (average)
  6528                           ;	Chosen strategy is simple_byte
  6529   002F64  0A00               	xorlw	0	; case 0
  6530   002F66  B4D8               	btfsc	status,2,c
  6531   002F68  EF9C  F017         	goto	l263
  6532   002F6C  0A01               	xorlw	1	; case 1
  6533   002F6E  B4D8               	btfsc	status,2,c
  6534   002F70  EF98  F017         	goto	l259
  6535   002F74  EFA0  F017         	goto	l266
  6536   002F78                     l268:
  6537   002F78  0012               	return		;funcret
  6538   002F7A                     __end_of_adc_voltage_reference:
  6539                           	callstack 0
  6540                           
  6541 ;; *************** function _adc_result_format *****************
  6542 ;; Defined at:
  6543 ;;		line 254 in file "MCAL/ADC/mcal_adc.c"
  6544 ;; Parameters:    Size  Location     Type
  6545 ;;  _adc            1    0[COMRAM] PTR const struct .
  6546 ;;		 -> adc_1(7), 
  6547 ;; Auto vars:     Size  Location     Type
  6548 ;;		None
  6549 ;; Return value:  Size  Location     Type
  6550 ;;                  1    wreg      void 
  6551 ;; Registers used:
  6552 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6553 ;; Tracked objects:
  6554 ;;		On entry : 0/0
  6555 ;;		On exit  : 0/0
  6556 ;;		Unchanged: 0/0
  6557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6558 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6561 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6562 ;;Total ram usage:        1 bytes
  6563 ;; Hardware stack levels used: 1
  6564 ;; Hardware stack levels required when called: 2
  6565 ;; This function calls:
  6566 ;;		Nothing
  6567 ;; This function is called by:
  6568 ;;		_ADC_Init
  6569 ;; This function uses a non-reentrant model
  6570 ;;
  6571                           
  6572                           	psect	text36
  6573   002F7A                     __ptext36:
  6574                           	callstack 0
  6575   002F7A                     _adc_result_format:
  6576                           	callstack 26
  6577   002F7A                     
  6578                           ;MCAL/ADC/mcal_adc.c: 254: static __attribute__((inline)) void adc_result_format(const A
      +                          dc_t *_adc);MCAL/ADC/mcal_adc.c: 255: {;MCAL/ADC/mcal_adc.c: 256:     switch(_adc->adc_r
      +                          esult_format){
  6579   002F7A  EFC8  F017         	goto	l3614
  6580   002F7E                     l272:
  6581                           
  6582                           ;MCAL/ADC/mcal_adc.c: 258:             (ADCON2bits.ADFM = 0);
  6583   002F7E  9EC0               	bcf	192,7,c	;volatile
  6584                           
  6585                           ;MCAL/ADC/mcal_adc.c: 259:             break;
  6586   002F80  EFE0  F017         	goto	l276
  6587   002F84                     l274:
  6588                           
  6589                           ;MCAL/ADC/mcal_adc.c: 262:             (ADCON2bits.ADFM = 1);
  6590   002F84  8EC0               	bsf	192,7,c	;volatile
  6591                           
  6592                           ;MCAL/ADC/mcal_adc.c: 263:             break;
  6593   002F86  EFE0  F017         	goto	l276
  6594   002F8A                     l275:
  6595                           
  6596                           ;MCAL/ADC/mcal_adc.c: 266:             (ADCON2bits.ADFM = 1);
  6597   002F8A  8EC0               	bsf	192,7,c	;volatile
  6598                           
  6599                           ;MCAL/ADC/mcal_adc.c: 267:     }
  6600   002F8C  EFE0  F017         	goto	l276
  6601   002F90                     l3614:
  6602   002F90  5001               	movf	adc_result_format@_adc^0,w,c
  6603   002F92  6ED9               	movwf	fsr2l,c
  6604   002F94  6ADA               	clrf	fsr2h,c
  6605   002F96  0E06               	movlw	6
  6606   002F98  26D9               	addwf	fsr2l,f,c
  6607   002F9A  B2DF               	btfsc	indf2,1,c
  6608   002F9C  EFD2  F017         	goto	u3081
  6609   002FA0  EFD5  F017         	goto	u3080
  6610   002FA4                     u3081:
  6611   002FA4  0E01               	movlw	1
  6612   002FA6  EFD6  F017         	goto	u3086
  6613   002FAA                     u3080:
  6614   002FAA  0E00               	movlw	0
  6615   002FAC                     u3086:
  6616                           
  6617                           ; Switch size 1, requested type "simple"
  6618                           ; Number of cases is 2, Range of values is 0 to 1
  6619                           ; switch strategies available:
  6620                           ; Name         Instructions Cycles
  6621                           ; simple_byte            7     4 (average)
  6622                           ;	Chosen strategy is simple_byte
  6623   002FAC  0A00               	xorlw	0	; case 0
  6624   002FAE  B4D8               	btfsc	status,2,c
  6625   002FB0  EFBF  F017         	goto	l272
  6626   002FB4  0A01               	xorlw	1	; case 1
  6627   002FB6  B4D8               	btfsc	status,2,c
  6628   002FB8  EFC2  F017         	goto	l274
  6629   002FBC  EFC5  F017         	goto	l275
  6630   002FC0                     l276:
  6631   002FC0  0012               	return		;funcret
  6632   002FC2                     __end_of_adc_result_format:
  6633                           	callstack 0
  6634                           
  6635 ;; *************** function _ADC_GetConversion_Blocking *****************
  6636 ;; Defined at:
  6637 ;;		line 143 in file "MCAL/ADC/mcal_adc.c"
  6638 ;; Parameters:    Size  Location     Type
  6639 ;;  _adc            1    4[COMRAM] PTR const struct .
  6640 ;;		 -> adc_1(7), 
  6641 ;;  _channel        1    5[COMRAM] enum E2725
  6642 ;;  conversion_r    1    6[COMRAM] PTR unsigned short 
  6643 ;;		 -> adc_res4(2), adc_res3(2), adc_res2(2), adc_res1(2), 
  6644 ;; Auto vars:     Size  Location     Type
  6645 ;;  ret             1    0        unsigned char 
  6646 ;; Return value:  Size  Location     Type
  6647 ;;                  1    wreg      unsigned char 
  6648 ;; Registers used:
  6649 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6650 ;; Tracked objects:
  6651 ;;		On entry : 0/0
  6652 ;;		On exit  : 0/0
  6653 ;;		Unchanged: 0/0
  6654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6655 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6657 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6658 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6659 ;;Total ram usage:        4 bytes
  6660 ;; Hardware stack levels used: 1
  6661 ;; Hardware stack levels required when called: 3
  6662 ;; This function calls:
  6663 ;;		_ADC_GetConversionResult
  6664 ;;		_ADC_StartConversion
  6665 ;;		_adc_input_channel_port_configure
  6666 ;; This function is called by:
  6667 ;;		_main
  6668 ;; This function uses a non-reentrant model
  6669 ;;
  6670                           
  6671                           	psect	text37
  6672   002DD0                     __ptext37:
  6673                           	callstack 0
  6674   002DD0                     _ADC_GetConversion_Blocking:
  6675                           	callstack 27
  6676   002DD0                     
  6677                           ;MCAL/ADC/mcal_adc.c: 146:     if((((void*)0) == _adc) || (((void*)0) == conversion_resu
      +                          lt)){
  6678   002DD0  5005               	movf	ADC_GetConversion_Blocking@_adc^0,w,c
  6679   002DD2  B4D8               	btfsc	status,2,c
  6680   002DD4  EFEE  F016         	goto	u3351
  6681   002DD8  EFF0  F016         	goto	u3350
  6682   002DDC                     u3351:
  6683   002DDC  EFF8  F016         	goto	l3904
  6684   002DE0                     u3350:
  6685   002DE0  5007               	movf	ADC_GetConversion_Blocking@conversion_result^0,w,c
  6686   002DE2  A4D8               	btfss	status,2,c
  6687   002DE4  EFF6  F016         	goto	u3361
  6688   002DE8  EFF8  F016         	goto	u3360
  6689   002DEC                     u3361:
  6690   002DEC  EFFA  F016         	goto	l3906
  6691   002DF0                     u3360:
  6692   002DF0                     l3904:
  6693                           
  6694                           ;MCAL/ADC/mcal_adc.c: 148:     }
  6695   002DF0  EF17  F017         	goto	l230
  6696   002DF4                     l3906:
  6697   002DF4                     
  6698                           ;MCAL/ADC/mcal_adc.c: 151:         (ADCON0bits.CHS = _channel);
  6699   002DF4  C006  F008         	movff	ADC_GetConversion_Blocking@_channel,??_ADC_GetConversion_Blocking
  6700   002DF8  4608               	rlncf	??_ADC_GetConversion_Blocking^0,f,c
  6701   002DFA  4608               	rlncf	??_ADC_GetConversion_Blocking^0,f,c
  6702   002DFC  50C2               	movf	194,w,c	;volatile
  6703   002DFE  1808               	xorwf	??_ADC_GetConversion_Blocking^0,w,c
  6704   002E00  0BC3               	andlw	-61
  6705   002E02  1808               	xorwf	??_ADC_GetConversion_Blocking^0,w,c
  6706   002E04  6EC2               	movwf	194,c	;volatile
  6707   002E06                     
  6708                           ;MCAL/ADC/mcal_adc.c: 152:         adc_input_channel_port_configure(_channel);
  6709   002E06  5006               	movf	ADC_GetConversion_Blocking@_channel^0,w,c
  6710   002E08  ECDA  F011         	call	_adc_input_channel_port_configure
  6711   002E0C                     
  6712                           ;MCAL/ADC/mcal_adc.c: 153:         ADC_StartConversion(_adc);
  6713   002E0C  C005  F001         	movff	ADC_GetConversion_Blocking@_adc,ADC_StartConversion@_adc
  6714   002E10  ECAF  F018         	call	_ADC_StartConversion	;wreg free
  6715   002E14                     l227:
  6716   002E14  B2C2               	btfsc	194,1,c	;volatile
  6717   002E16  EF0F  F017         	goto	u3371
  6718   002E1A  EF11  F017         	goto	u3370
  6719   002E1E                     u3371:
  6720   002E1E  EF0A  F017         	goto	l227
  6721   002E22                     u3370:
  6722   002E22                     
  6723                           ;MCAL/ADC/mcal_adc.c: 155:         ADC_GetConversionResult(_adc, conversion_result);
  6724   002E22  C005  F001         	movff	ADC_GetConversion_Blocking@_adc,ADC_GetConversionResult@_adc
  6725   002E26  C007  F002         	movff	ADC_GetConversion_Blocking@conversion_result,ADC_GetConversionResult@conversion_r
      +                          esult
  6726   002E2A  EC0D  F015         	call	_ADC_GetConversionResult	;wreg free
  6727   002E2E                     l230:
  6728   002E2E  0012               	return		;funcret
  6729   002E30                     __end_of_ADC_GetConversion_Blocking:
  6730                           	callstack 0
  6731                           
  6732 ;; *************** function _adc_input_channel_port_configure *****************
  6733 ;; Defined at:
  6734 ;;		line 176 in file "MCAL/ADC/mcal_adc.c"
  6735 ;; Parameters:    Size  Location     Type
  6736 ;;  channel         1    wreg     enum E2725
  6737 ;; Auto vars:     Size  Location     Type
  6738 ;;  channel         1    2[COMRAM] enum E2725
  6739 ;; Return value:  Size  Location     Type
  6740 ;;                  1    wreg      void 
  6741 ;; Registers used:
  6742 ;;		wreg, status,2, status,0
  6743 ;; Tracked objects:
  6744 ;;		On entry : 0/0
  6745 ;;		On exit  : 0/0
  6746 ;;		Unchanged: 0/0
  6747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6749 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6750 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6751 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6752 ;;Total ram usage:        3 bytes
  6753 ;; Hardware stack levels used: 1
  6754 ;; Hardware stack levels required when called: 2
  6755 ;; This function calls:
  6756 ;;		Nothing
  6757 ;; This function is called by:
  6758 ;;		_ADC_Init
  6759 ;;		_ADC_GetConversion_Blocking
  6760 ;;		_ADC_SelectChannel
  6761 ;;		_ADC_StartConversionInterrupt
  6762 ;; This function uses a non-reentrant model
  6763 ;;
  6764                           
  6765                           	psect	text38
  6766   0023B4                     __ptext38:
  6767                           	callstack 0
  6768   0023B4                     _adc_input_channel_port_configure:
  6769                           	callstack 26
  6770                           
  6771                           ;incstack = 0
  6772                           ;adc_input_channel_port_configure@channel stored from wreg
  6773   0023B4  6E03               	movwf	adc_input_channel_port_configure@channel^0,c
  6774   0023B6                     
  6775                           ;MCAL/ADC/mcal_adc.c: 176: static __attribute__((inline)) void adc_input_channel_port_co
      +                          nfigure(adc_select_channel_t channel);MCAL/ADC/mcal_adc.c: 177: {;MCAL/ADC/mcal_adc.c: 1
      +                          78:     switch (channel){
  6776   0023B6  EF04  F012         	goto	l3606
  6777   0023BA                     l3578:
  6778                           
  6779                           ;MCAL/ADC/mcal_adc.c: 180:             (TRISA |= ( 1 << 0x0 ));
  6780   0023BA  8092               	bsf	146,0,c	;volatile
  6781                           
  6782                           ;MCAL/ADC/mcal_adc.c: 181:             break;
  6783   0023BC  EF45  F012         	goto	l254
  6784   0023C0                     l3580:
  6785                           
  6786                           ;MCAL/ADC/mcal_adc.c: 184:             (TRISA |= ( 1 << 0x1 ));
  6787   0023C0  8292               	bsf	146,1,c	;volatile
  6788                           
  6789                           ;MCAL/ADC/mcal_adc.c: 185:             break;
  6790   0023C2  EF45  F012         	goto	l254
  6791   0023C6                     l3582:
  6792                           
  6793                           ;MCAL/ADC/mcal_adc.c: 188:             (TRISA |= ( 1 << 0x2 ));
  6794   0023C6  8492               	bsf	146,2,c	;volatile
  6795                           
  6796                           ;MCAL/ADC/mcal_adc.c: 189:             break;
  6797   0023C8  EF45  F012         	goto	l254
  6798   0023CC                     l3584:
  6799                           
  6800                           ;MCAL/ADC/mcal_adc.c: 192:             (TRISA |= ( 1 << 0x3 ));
  6801   0023CC  8692               	bsf	146,3,c	;volatile
  6802                           
  6803                           ;MCAL/ADC/mcal_adc.c: 193:             break;
  6804   0023CE  EF45  F012         	goto	l254
  6805   0023D2                     l3586:
  6806                           
  6807                           ;MCAL/ADC/mcal_adc.c: 196:             (TRISA |= ( 1 << 0x5 ));
  6808   0023D2  8A92               	bsf	146,5,c	;volatile
  6809                           
  6810                           ;MCAL/ADC/mcal_adc.c: 197:             break;
  6811   0023D4  EF45  F012         	goto	l254
  6812   0023D8                     l3588:
  6813                           
  6814                           ;MCAL/ADC/mcal_adc.c: 200:             (TRISE |= ( 1 << 0x0 ));
  6815   0023D8  8096               	bsf	150,0,c	;volatile
  6816                           
  6817                           ;MCAL/ADC/mcal_adc.c: 201:             break;
  6818   0023DA  EF45  F012         	goto	l254
  6819   0023DE                     l3590:
  6820                           
  6821                           ;MCAL/ADC/mcal_adc.c: 204:             (TRISE |= ( 1 << 0x1 ));
  6822   0023DE  8296               	bsf	150,1,c	;volatile
  6823                           
  6824                           ;MCAL/ADC/mcal_adc.c: 205:             break;
  6825   0023E0  EF45  F012         	goto	l254
  6826   0023E4                     l3592:
  6827                           
  6828                           ;MCAL/ADC/mcal_adc.c: 208:             (TRISE |= ( 1 << 0x2 ));
  6829   0023E4  8496               	bsf	150,2,c	;volatile
  6830                           
  6831                           ;MCAL/ADC/mcal_adc.c: 209:             break;
  6832   0023E6  EF45  F012         	goto	l254
  6833   0023EA                     l3594:
  6834                           
  6835                           ;MCAL/ADC/mcal_adc.c: 212:             (TRISB |= ( 1 << 0x2 ));
  6836   0023EA  8493               	bsf	147,2,c	;volatile
  6837                           
  6838                           ;MCAL/ADC/mcal_adc.c: 213:             break;
  6839   0023EC  EF45  F012         	goto	l254
  6840   0023F0                     l3596:
  6841                           
  6842                           ;MCAL/ADC/mcal_adc.c: 216:             (TRISB |= ( 1 << 0x3 ));
  6843   0023F0  8693               	bsf	147,3,c	;volatile
  6844                           
  6845                           ;MCAL/ADC/mcal_adc.c: 217:             break;
  6846   0023F2  EF45  F012         	goto	l254
  6847   0023F6                     l3598:
  6848                           
  6849                           ;MCAL/ADC/mcal_adc.c: 220:             (TRISB |= ( 1 << 0x1 ));
  6850   0023F6  8293               	bsf	147,1,c	;volatile
  6851                           
  6852                           ;MCAL/ADC/mcal_adc.c: 221:             break;
  6853   0023F8  EF45  F012         	goto	l254
  6854   0023FC                     l3600:
  6855                           
  6856                           ;MCAL/ADC/mcal_adc.c: 224:             (TRISB |= ( 1 << 0x4 ));
  6857   0023FC  8893               	bsf	147,4,c	;volatile
  6858                           
  6859                           ;MCAL/ADC/mcal_adc.c: 225:             break;
  6860   0023FE  EF45  F012         	goto	l254
  6861   002402                     l3602:
  6862                           
  6863                           ;MCAL/ADC/mcal_adc.c: 228:             (TRISB |= ( 1 << 0x0 ));
  6864   002402  8093               	bsf	147,0,c	;volatile
  6865                           
  6866                           ;MCAL/ADC/mcal_adc.c: 229:             break;
  6867   002404  EF45  F012         	goto	l254
  6868   002408                     l3606:
  6869   002408  5003               	movf	adc_input_channel_port_configure@channel^0,w,c
  6870   00240A  6E01               	movwf	??_adc_input_channel_port_configure^0,c
  6871   00240C  6A02               	clrf	(??_adc_input_channel_port_configure+1)^0,c
  6872                           
  6873                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6874                           ; Switch size 1, requested type "simple"
  6875                           ; Number of cases is 1, Range of values is 0 to 0
  6876                           ; switch strategies available:
  6877                           ; Name         Instructions Cycles
  6878                           ; simple_byte            4     3 (average)
  6879                           ;	Chosen strategy is simple_byte
  6880   00240E  5002               	movf	(??_adc_input_channel_port_configure+1)^0,w,c
  6881   002410  0A00               	xorlw	0	; case 0
  6882   002412  B4D8               	btfsc	status,2,c
  6883   002414  EF0E  F012         	goto	l4226
  6884   002418  EF45  F012         	goto	l254
  6885   00241C                     l4226:
  6886                           
  6887                           ; Switch size 1, requested type "simple"
  6888                           ; Number of cases is 13, Range of values is 0 to 12
  6889                           ; switch strategies available:
  6890                           ; Name         Instructions Cycles
  6891                           ; simple_byte           40    21 (average)
  6892                           ;	Chosen strategy is simple_byte
  6893   00241C  5001               	movf	??_adc_input_channel_port_configure^0,w,c
  6894   00241E  0A00               	xorlw	0	; case 0
  6895   002420  B4D8               	btfsc	status,2,c
  6896   002422  EFDD  F011         	goto	l3578
  6897   002426  0A01               	xorlw	1	; case 1
  6898   002428  B4D8               	btfsc	status,2,c
  6899   00242A  EFE0  F011         	goto	l3580
  6900   00242E  0A03               	xorlw	3	; case 2
  6901   002430  B4D8               	btfsc	status,2,c
  6902   002432  EFE3  F011         	goto	l3582
  6903   002436  0A01               	xorlw	1	; case 3
  6904   002438  B4D8               	btfsc	status,2,c
  6905   00243A  EFE6  F011         	goto	l3584
  6906   00243E  0A07               	xorlw	7	; case 4
  6907   002440  B4D8               	btfsc	status,2,c
  6908   002442  EFE9  F011         	goto	l3586
  6909   002446  0A01               	xorlw	1	; case 5
  6910   002448  B4D8               	btfsc	status,2,c
  6911   00244A  EFEC  F011         	goto	l3588
  6912   00244E  0A03               	xorlw	3	; case 6
  6913   002450  B4D8               	btfsc	status,2,c
  6914   002452  EFEF  F011         	goto	l3590
  6915   002456  0A01               	xorlw	1	; case 7
  6916   002458  B4D8               	btfsc	status,2,c
  6917   00245A  EFF2  F011         	goto	l3592
  6918   00245E  0A0F               	xorlw	15	; case 8
  6919   002460  B4D8               	btfsc	status,2,c
  6920   002462  EFF5  F011         	goto	l3594
  6921   002466  0A01               	xorlw	1	; case 9
  6922   002468  B4D8               	btfsc	status,2,c
  6923   00246A  EFF8  F011         	goto	l3596
  6924   00246E  0A03               	xorlw	3	; case 10
  6925   002470  B4D8               	btfsc	status,2,c
  6926   002472  EFFB  F011         	goto	l3598
  6927   002476  0A01               	xorlw	1	; case 11
  6928   002478  B4D8               	btfsc	status,2,c
  6929   00247A  EFFE  F011         	goto	l3600
  6930   00247E  0A07               	xorlw	7	; case 12
  6931   002480  B4D8               	btfsc	status,2,c
  6932   002482  EF01  F012         	goto	l3602
  6933   002486  EF45  F012         	goto	l254
  6934   00248A                     l254:
  6935   00248A  0012               	return		;funcret
  6936   00248C                     __end_of_adc_input_channel_port_configure:
  6937                           	callstack 0
  6938                           
  6939 ;; *************** function _ADC_StartConversion *****************
  6940 ;; Defined at:
  6941 ;;		line 94 in file "MCAL/ADC/mcal_adc.c"
  6942 ;; Parameters:    Size  Location     Type
  6943 ;;  _adc            1    0[COMRAM] PTR const struct .
  6944 ;;		 -> adc_1(7), 
  6945 ;; Auto vars:     Size  Location     Type
  6946 ;;  ret             1    0        unsigned char 
  6947 ;; Return value:  Size  Location     Type
  6948 ;;                  1    wreg      unsigned char 
  6949 ;; Registers used:
  6950 ;;		wreg, status,2
  6951 ;; Tracked objects:
  6952 ;;		On entry : 0/0
  6953 ;;		On exit  : 0/0
  6954 ;;		Unchanged: 0/0
  6955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6956 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6959 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6960 ;;Total ram usage:        1 bytes
  6961 ;; Hardware stack levels used: 1
  6962 ;; Hardware stack levels required when called: 2
  6963 ;; This function calls:
  6964 ;;		Nothing
  6965 ;; This function is called by:
  6966 ;;		_ADC_GetConversion_Blocking
  6967 ;;		_ADC_StartConversionInterrupt
  6968 ;; This function uses a non-reentrant model
  6969 ;;
  6970                           
  6971                           	psect	text39
  6972   00315E                     __ptext39:
  6973                           	callstack 0
  6974   00315E                     _ADC_StartConversion:
  6975                           	callstack 27
  6976   00315E                     
  6977                           ;MCAL/ADC/mcal_adc.c: 96:     if(((void*)0) == _adc){
  6978   00315E  5001               	movf	ADC_StartConversion@_adc^0,w,c
  6979   003160  A4D8               	btfss	status,2,c
  6980   003162  EFB5  F018         	goto	u3231
  6981   003166  EFB7  F018         	goto	u3230
  6982   00316A                     u3231:
  6983   00316A  EFB9  F018         	goto	l3808
  6984   00316E                     u3230:
  6985   00316E                     
  6986                           ;MCAL/ADC/mcal_adc.c: 98:     }
  6987   00316E  EFBA  F018         	goto	l201
  6988   003172                     l3808:
  6989   003172                     
  6990                           ;MCAL/ADC/mcal_adc.c: 101:         (ADCON0bits.GODONE = 1);
  6991   003172  82C2               	bsf	194,1,c	;volatile
  6992   003174                     l201:
  6993   003174  0012               	return		;funcret
  6994   003176                     __end_of_ADC_StartConversion:
  6995                           	callstack 0
  6996                           
  6997 ;; *************** function _ADC_GetConversionResult *****************
  6998 ;; Defined at:
  6999 ;;		line 119 in file "MCAL/ADC/mcal_adc.c"
  7000 ;; Parameters:    Size  Location     Type
  7001 ;;  _adc            1    0[COMRAM] PTR const struct .
  7002 ;;		 -> adc_1(7), 
  7003 ;;  conversion_r    1    1[COMRAM] PTR unsigned short 
  7004 ;;		 -> adc_res4(2), adc_res3(2), adc_res2(2), adc_res1(2), 
  7005 ;; Auto vars:     Size  Location     Type
  7006 ;;  ret             1    0        unsigned char 
  7007 ;; Return value:  Size  Location     Type
  7008 ;;                  1    wreg      unsigned char 
  7009 ;; Registers used:
  7010 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7011 ;; Tracked objects:
  7012 ;;		On entry : 0/0
  7013 ;;		On exit  : 0/0
  7014 ;;		Unchanged: 0/0
  7015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7016 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7018 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7019 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7020 ;;Total ram usage:        4 bytes
  7021 ;; Hardware stack levels used: 1
  7022 ;; Hardware stack levels required when called: 2
  7023 ;; This function calls:
  7024 ;;		Nothing
  7025 ;; This function is called by:
  7026 ;;		_ADC_GetConversion_Blocking
  7027 ;; This function uses a non-reentrant model
  7028 ;;
  7029                           
  7030                           	psect	text40
  7031   002A1A                     __ptext40:
  7032                           	callstack 0
  7033   002A1A                     _ADC_GetConversionResult:
  7034                           	callstack 27
  7035   002A1A                     
  7036                           ;MCAL/ADC/mcal_adc.c: 122:     if((((void*)0) == _adc) || (((void*)0) == conversion_resu
      +                          lt)){
  7037   002A1A  5001               	movf	ADC_GetConversionResult@_adc^0,w,c
  7038   002A1C  B4D8               	btfsc	status,2,c
  7039   002A1E  EF13  F015         	goto	u3241
  7040   002A22  EF15  F015         	goto	u3240
  7041   002A26                     u3241:
  7042   002A26  EF1D  F015         	goto	l3818
  7043   002A2A                     u3240:
  7044   002A2A  5002               	movf	ADC_GetConversionResult@conversion_result^0,w,c
  7045   002A2C  A4D8               	btfss	status,2,c
  7046   002A2E  EF1B  F015         	goto	u3251
  7047   002A32  EF1D  F015         	goto	u3250
  7048   002A36                     u3251:
  7049   002A36  EF1F  F015         	goto	l3820
  7050   002A3A                     u3250:
  7051   002A3A                     l3818:
  7052                           
  7053                           ;MCAL/ADC/mcal_adc.c: 124:     }
  7054   002A3A  EF55  F015         	goto	l220
  7055   002A3E                     l3820:
  7056                           
  7057                           ;MCAL/ADC/mcal_adc.c: 127:         switch(_adc->adc_result_format){
  7058   002A3E  EF3D  F015         	goto	l3834
  7059   002A42                     l3822:
  7060                           
  7061                           ;MCAL/ADC/mcal_adc.c: 129:                 *conversion_result = (adc_result_t)((ADRESH >
      +                          > 8) + (ADRESL >> 6));
  7062   002A42  50C4               	movf	196,w,c	;volatile
  7063   002A44  44C3               	rlncf	195,w,c	;volatile
  7064   002A46  46E8               	rlncf	wreg,f,c
  7065   002A48  0B03               	andlw	3
  7066   002A4A  6E03               	movwf	??_ADC_GetConversionResult^0,c
  7067   002A4C  6A04               	clrf	(??_ADC_GetConversionResult+1)^0,c
  7068   002A4E  5002               	movf	ADC_GetConversionResult@conversion_result^0,w,c
  7069   002A50  6ED9               	movwf	fsr2l,c
  7070   002A52  6ADA               	clrf	fsr2h,c
  7071   002A54  C003  FFDE         	movff	??_ADC_GetConversionResult,postinc2
  7072   002A58  C004  FFDD         	movff	??_ADC_GetConversionResult+1,postdec2
  7073                           
  7074                           ;MCAL/ADC/mcal_adc.c: 130:                 break;
  7075   002A5C  EF55  F015         	goto	l220
  7076   002A60                     l3826:
  7077                           
  7078                           ;MCAL/ADC/mcal_adc.c: 133:                 *conversion_result = (adc_result_t)((ADRESH >
      +                          > 8) + ADRESL);
  7079   002A60  50C4               	movf	196,w,c	;volatile
  7080   002A62  50C3               	movf	195,w,c	;volatile
  7081   002A64  6E03               	movwf	??_ADC_GetConversionResult^0,c
  7082   002A66  6A04               	clrf	(??_ADC_GetConversionResult+1)^0,c
  7083   002A68  5002               	movf	ADC_GetConversionResult@conversion_result^0,w,c
  7084   002A6A  6ED9               	movwf	fsr2l,c
  7085   002A6C  6ADA               	clrf	fsr2h,c
  7086   002A6E  C003  FFDE         	movff	??_ADC_GetConversionResult,postinc2
  7087   002A72  C004  FFDD         	movff	??_ADC_GetConversionResult+1,postdec2
  7088                           
  7089                           ;MCAL/ADC/mcal_adc.c: 134:                 break;
  7090   002A76  EF55  F015         	goto	l220
  7091   002A7A                     l3834:
  7092   002A7A  5001               	movf	ADC_GetConversionResult@_adc^0,w,c
  7093   002A7C  6ED9               	movwf	fsr2l,c
  7094   002A7E  6ADA               	clrf	fsr2h,c
  7095   002A80  0E06               	movlw	6
  7096   002A82  26D9               	addwf	fsr2l,f,c
  7097   002A84  B2DF               	btfsc	indf2,1,c
  7098   002A86  EF47  F015         	goto	u3261
  7099   002A8A  EF4A  F015         	goto	u3260
  7100   002A8E                     u3261:
  7101   002A8E  0E01               	movlw	1
  7102   002A90  EF4B  F015         	goto	u3266
  7103   002A94                     u3260:
  7104   002A94  0E00               	movlw	0
  7105   002A96                     u3266:
  7106                           
  7107                           ; Switch size 1, requested type "simple"
  7108                           ; Number of cases is 2, Range of values is 0 to 1
  7109                           ; switch strategies available:
  7110                           ; Name         Instructions Cycles
  7111                           ; simple_byte            7     4 (average)
  7112                           ;	Chosen strategy is simple_byte
  7113   002A96  0A00               	xorlw	0	; case 0
  7114   002A98  B4D8               	btfsc	status,2,c
  7115   002A9A  EF21  F015         	goto	l3822
  7116   002A9E  0A01               	xorlw	1	; case 1
  7117   002AA0  B4D8               	btfsc	status,2,c
  7118   002AA2  EF30  F015         	goto	l3826
  7119   002AA6  EF21  F015         	goto	l3822
  7120   002AAA                     l220:
  7121   002AAA  0012               	return		;funcret
  7122   002AAC                     __end_of_ADC_GetConversionResult:
  7123                           	callstack 0
  7124                           
  7125 ;; *************** function _InterruptManagerHigh *****************
  7126 ;; Defined at:
  7127 ;;		line 26 in file "MCAL/INTERRUPT/manage_interrupt.c"
  7128 ;; Parameters:    Size  Location     Type
  7129 ;;		None
  7130 ;; Auto vars:     Size  Location     Type
  7131 ;;		None
  7132 ;; Return value:  Size  Location     Type
  7133 ;;                  1    wreg      void 
  7134 ;; Registers used:
  7135 ;;		cstack
  7136 ;; Tracked objects:
  7137 ;;		On entry : 0/0
  7138 ;;		On exit  : 0/0
  7139 ;;		Unchanged: 0/0
  7140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7144 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7145 ;;Total ram usage:        0 bytes
  7146 ;; Hardware stack levels used: 1
  7147 ;; Hardware stack levels required when called: 1
  7148 ;; This function calls:
  7149 ;;		_ISR_ADC
  7150 ;; This function is called by:
  7151 ;;		Interrupt level 2
  7152 ;; This function uses a non-reentrant model
  7153 ;;
  7154                           
  7155                           	psect	intcode
  7156   000008                     __pintcode:
  7157                           	callstack 0
  7158   000008                     _InterruptManagerHigh:
  7159                           	callstack 20
  7160                           
  7161                           ;incstack = 0
  7162   000008  827E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  7163   00000A  ED8E  F018         	call	int_func,f	;refresh shadow registers
  7164                           
  7165                           	psect	intcode_body
  7166   00311C                     __pintcode_body:
  7167                           	callstack 20
  7168   00311C                     int_func:
  7169                           	callstack 20
  7170   00311C  0006               	pop		; remove dummy address from shadow register refresh
  7171   00311E                     
  7172                           ;MCAL/INTERRUPT/manage_interrupt.c: 29:     if((1 == PIE1bits.ADIE) &&(1 == PIR1bits.ADI
      +                          F)){
  7173   00311E  AC9D               	btfss	157,6,c	;volatile
  7174   003120  EF94  F018         	goto	i2u183_41
  7175   003124  EF96  F018         	goto	i2u183_40
  7176   003128                     i2u183_41:
  7177   003128  EF9F  F018         	goto	i2l396
  7178   00312C                     i2u183_40:
  7179   00312C  AC9E               	btfss	158,6,c	;volatile
  7180   00312E  EF9B  F018         	goto	i2u184_41
  7181   003132  EF9D  F018         	goto	i2u184_40
  7182   003136                     i2u184_41:
  7183   003136  EF9F  F018         	goto	i2l396
  7184   00313A                     i2u184_40:
  7185   00313A                     
  7186                           ;MCAL/INTERRUPT/manage_interrupt.c: 30:         ISR_ADC();
  7187   00313A  ECCE  F018         	call	_ISR_ADC	;wreg free
  7188   00313E                     i2l396:
  7189   00313E  927E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  7190   003140  0011               	retfie		f
  7191   003142                     __end_of_InterruptManagerHigh:
  7192                           	callstack 0
  7193                           
  7194 ;; *************** function _ISR_ADC *****************
  7195 ;; Defined at:
  7196 ;;		line 272 in file "MCAL/ADC/mcal_adc.c"
  7197 ;; Parameters:    Size  Location     Type
  7198 ;;		None
  7199 ;; Auto vars:     Size  Location     Type
  7200 ;;		None
  7201 ;; Return value:  Size  Location     Type
  7202 ;;                  1    wreg      void 
  7203 ;; Registers used:
  7204 ;;		None
  7205 ;; Tracked objects:
  7206 ;;		On entry : 0/0
  7207 ;;		On exit  : 0/0
  7208 ;;		Unchanged: 0/0
  7209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7214 ;;Total ram usage:        0 bytes
  7215 ;; Hardware stack levels used: 1
  7216 ;; This function calls:
  7217 ;;		Nothing
  7218 ;; This function is called by:
  7219 ;;		_InterruptManagerHigh
  7220 ;; This function uses a non-reentrant model
  7221 ;;
  7222                           
  7223                           	psect	text42
  7224   00319C                     __ptext42:
  7225                           	callstack 0
  7226   00319C                     _ISR_ADC:
  7227                           	callstack 20
  7228   00319C                     
  7229                           ;MCAL/ADC/mcal_adc.c: 273:     (PIR1bits.ADIF = 0);
  7230   00319C  9C9E               	bcf	158,6,c	;volatile
  7231   00319E  0012               	return		;funcret
  7232   0031A0                     __end_of_ISR_ADC:
  7233                           	callstack 0
  7234                           
  7235                           	psect	rparam
  7236   000000                     
  7237                           	psect	temp
  7238   00007E                     btemp:
  7239                           	callstack 0
  7240   00007E                     	ds	1
  7241   000000                     int$flags	set	btemp
  7242   000000                     wtemp8	set	btemp+1
  7243   000000                     ttemp5	set	btemp+1
  7244   000000                     ttemp6	set	btemp+4
  7245   000000                     ttemp7	set	btemp+8
  7246                           
  7247                           	psect	config
  7248                           
  7249                           ; Padding undefined space
  7250   300004                     	org	3145732
  7251   300004  FF                 	db	255
  7252                           
  7253                           ;Config register CONFIG3H @ 0x300005
  7254                           ;	CCP2 MUX bit
  7255                           ;	CCP2MX = 0x1, unprogrammed default
  7256                           ;	PORTB A/D Enable bit
  7257                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  7258                           ;	Low-Power Timer1 Oscillator Enable bit
  7259                           ;	LPT1OSC = 0x0, unprogrammed default
  7260                           ;	MCLR Pin Enable bit
  7261                           ;	MCLRE = 0x1, unprogrammed default
  7262   300005                     	org	3145733
  7263   300005  81                 	db	129
  7264                           tosu	equ	0xFFF
  7265                           tosh	equ	0xFFE
  7266                           tosl	equ	0xFFD
  7267                           stkptr	equ	0xFFC
  7268                           pclatu	equ	0xFFB
  7269                           pclath	equ	0xFFA
  7270                           pcl	equ	0xFF9
  7271                           tblptru	equ	0xFF8
  7272                           tblptrh	equ	0xFF7
  7273                           tblptrl	equ	0xFF6
  7274                           tablat	equ	0xFF5
  7275                           prodh	equ	0xFF4
  7276                           prodl	equ	0xFF3
  7277                           indf0	equ	0xFEF
  7278                           postinc0	equ	0xFEE
  7279                           postdec0	equ	0xFED
  7280                           preinc0	equ	0xFEC
  7281                           plusw0	equ	0xFEB
  7282                           fsr0h	equ	0xFEA
  7283                           fsr0l	equ	0xFE9
  7284                           wreg	equ	0xFE8
  7285                           indf1	equ	0xFE7
  7286                           postinc1	equ	0xFE6
  7287                           postdec1	equ	0xFE5
  7288                           preinc1	equ	0xFE4
  7289                           plusw1	equ	0xFE3
  7290                           fsr1h	equ	0xFE2
  7291                           fsr1l	equ	0xFE1
  7292                           bsr	equ	0xFE0
  7293                           indf2	equ	0xFDF
  7294                           postinc2	equ	0xFDE
  7295                           postdec2	equ	0xFDD
  7296                           preinc2	equ	0xFDC
  7297                           plusw2	equ	0xFDB
  7298                           fsr2h	equ	0xFDA
  7299                           fsr2l	equ	0xFD9
  7300                           status	equ	0xFD8

Data Sizes:
    Strings     40
    Constant    0
    Data        47
    BSS         74
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     87     125
    BANK0           128      0      83
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    adc_1$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    ADC_GetConversion_Blocking@_adc	PTR const struct . size(1) Largest target is 7
		 -> adc_1(BANK0[7]), 

    ADC_GetConversion_Blocking@conversion_result	PTR unsigned short  size(1) Largest target is 2
		 -> adc_res1(COMRAM[2]), adc_res2(COMRAM[2]), adc_res3(COMRAM[2]), adc_res4(COMRAM[2]), 

    ADC_GetConversionResult@_adc	PTR const struct . size(1) Largest target is 7
		 -> adc_1(BANK0[7]), 

    ADC_GetConversionResult@_adc$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    ADC_GetConversionResult@conversion_result	PTR unsigned short  size(1) Largest target is 2
		 -> adc_res1(COMRAM[2]), adc_res2(COMRAM[2]), adc_res3(COMRAM[2]), adc_res4(COMRAM[2]), 

    ADC_Init@_adc	PTR const struct . size(1) Largest target is 7
		 -> adc_1(BANK0[7]), 

    ADC_Init@_adc$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    adc_result_format@_adc	PTR const struct . size(1) Largest target is 7
		 -> adc_1(BANK0[7]), 

    adc_result_format@_adc$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    ADC_StartConversion@_adc	PTR const struct . size(1) Largest target is 7
		 -> adc_1(BANK0[7]), 

    adc_voltage_reference@_adc	PTR const struct . size(1) Largest target is 7
		 -> adc_1(BANK0[7]), 

    adc_voltage_reference@_adc$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    ctoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    gpio_pin_direction_initialize@_pin_config	PTR const struct . size(1) Largest target is 10
		 -> lcd(COMRAM[10]), lcd$data(COMRAM[8]), 

    gpio_pin_initialize@_pin_config	PTR const struct . size(1) Largest target is 10
		 -> lcd(COMRAM[10]), lcd$data(COMRAM[8]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(1) Largest target is 10
		 -> lcd(COMRAM[10]), lcd$data(COMRAM[8]), 

    InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRlllll[1]), LATB(BITBIGSFRllllh[1]), LATC(BITBIGSFRllllh[1]), LATD(BITBIGSFRllllh[1]), 
		 -> LATE(BITBIGSFRllllh[1]), 

    lcd_8bit_enable_signal@_lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd(COMRAM[10]), 

    lcd_8bit_initialize@_lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd(COMRAM[10]), 

    lcd_8bit_send_char@_lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd(COMRAM[10]), 

    lcd_8bit_send_command@_lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd(COMRAM[10]), 

    lcd_8bit_send_string@_lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd(COMRAM[10]), 

    lcd_8bit_send_string@str	PTR unsigned char  size(2) Largest target is 9
		 -> adc_res1_text(BANK0[6]), adc_res2_text(BANK0[6]), adc_res3_text(BANK0[6]), adc_res4_text(BANK0[6]), 
		 -> STR_3(CODE[9]), STR_4(CODE[7]), STR_5(CODE[7]), STR_6(CODE[7]), 
		 -> STR_7(CODE[7]), 

    lcd_8bit_send_string_pos@_lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd(COMRAM[10]), 

    lcd_8bit_send_string_pos@str	PTR unsigned char  size(2) Largest target is 9
		 -> adc_res1_text(BANK0[6]), adc_res2_text(BANK0[6]), adc_res3_text(BANK0[6]), adc_res4_text(BANK0[6]), 
		 -> STR_3(CODE[9]), STR_4(CODE[7]), STR_5(CODE[7]), STR_6(CODE[7]), 
		 -> STR_7(CODE[7]), 

    lcd_8bit_set_cursor@_lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd(COMRAM[10]), 

    lcd_convert_uint16_string@str	PTR unsigned char  size(1) Largest target is 6
		 -> adc_res1_text(BANK0[6]), adc_res2_text(BANK0[6]), adc_res3_text(BANK0[6]), adc_res4_text(BANK0[6]), 

    memset@dest	PTR void  size(1) Largest target is 6
		 -> adc_res1_text(BANK0[6]), adc_res2_text(BANK0[6]), adc_res3_text(BANK0[6]), adc_res4_text(BANK0[6]), 

    memset@p	PTR unsigned char  size(1) Largest target is 6
		 -> adc_res1_text(BANK0[6]), adc_res2_text(BANK0[6]), adc_res3_text(BANK0[6]), adc_res4_text(BANK0[6]), 

    otoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRlllll[1]), PORTB(BITBIGSFRlllll[1]), PORTC(BITBIGSFRlllll[1]), PORTD(BITBIGSFRlllll[1]), 
		 -> PORTE(BITBIGSFRlllll[1]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 3
		 -> vfprintf@cfmt(COMRAM[3]), 

    S1488$buffer	PTR unsigned char  size(2) Largest target is 0

    S1488$source	PTR const unsigned char  size(2) Largest target is 0

    S370$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    sp__memset	PTR void  size(1) Largest target is 6
		 -> adc_res1_text(BANK0[6]), adc_res2_text(BANK0[6]), adc_res3_text(BANK0[6]), adc_res4_text(BANK0[6]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(3) Largest target is 65535
		 -> ROM(CODE[65535]), STR_1(CODE[3]), STR_2(CODE[3]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 6
		 -> adc_res1_text(BANK0[6]), adc_res2_text(BANK0[6]), adc_res3_text(BANK0[6]), adc_res4_text(BANK0[6]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRlllll[1]), TRISB(ABS[1]), TRISC(ABS[1]), TRISD(ABS[1]), 
		 -> TRISE(ABS[1]), 

    utoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(3) Largest target is 65535
		 -> ROM(CODE[65535]), STR_1(CODE[3]), STR_2(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 3
		 -> vfprintf@cfmt(COMRAM[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(3) Largest target is 65535
		 -> ROM(CODE[65535]), STR_1(CODE[3]), STR_2(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(3) Largest target is 65535
		 -> ROM(CODE[65535]), STR_1(CODE[3]), STR_2(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    xtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_lcd_convert_uint16_string
    _lcd_convert_uint16_string->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _utoa->_pad
    _read_prec_or_width->___wmul
    _otoa->_pad
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _ctoa->_fputc
    _lcd_8bit_send_string_pos->_lcd_8bit_send_string
    _lcd_8bit_send_string_pos->_lcd_8bit_set_cursor
    _lcd_8bit_set_cursor->_lcd_8bit_send_command
    _lcd_8bit_send_string->_lcd_8bit_send_char
    _lcd_8bit_send_char->_lcd_8bit_enable_signal
    _initialization->_lcd_8bit_initialize
    _lcd_8bit_initialize->_lcd_8bit_send_command
    _lcd_8bit_send_command->_lcd_8bit_enable_signal
    _lcd_8bit_enable_signal->_gpio_pin_write_logic
    _gpio_pin_initialize->_gpio_pin_write_logic
    _ADC_Init->_adc_input_channel_port_configure
    _ADC_GetConversion_Blocking->_ADC_GetConversionResult

Critical Paths under _InterruptManagerHigh in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptManagerHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptManagerHigh in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterruptManagerHigh in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   64107
                                             85 COMRAM     2     2      0
         _ADC_GetConversion_Blocking
                     _initialization
              _lcd_8bit_send_command
           _lcd_8bit_send_string_pos
          _lcd_convert_uint16_string
 ---------------------------------------------------------------------------------
 (1) _lcd_convert_uint16_string                            4     1      3   29578
                                             82 COMRAM     3     0      3
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    15      6   28094
                                             63 COMRAM    19    13      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     3      5   27407
                                             55 COMRAM     8     3      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           17    14      3   27027
                                             38 COMRAM    17    14      3
                               _ctoa
                               _dtoa
                              _fputc
                               _otoa
                 _read_prec_or_width
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                18    14      4    5013
                                             20 COMRAM    18    14      4
                                _pad
 ---------------------------------------------------------------------------------
 (5) _utoa                                                 9     6      3    5309
                                             20 COMRAM     9     6      3
                            ___lwdiv
                            ___lwmod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     311
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (5) _read_prec_or_width                                   8     6      2    1295
                                              6 COMRAM     8     6      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     811
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _otoa                                                12     9      3    4754
                                             20 COMRAM    12     9      3
                                _pad
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                12     9      3    5888
                                             20 COMRAM    12     9      3
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  7     3      4    4282
                                             13 COMRAM     7     3      4
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               3     1      2     166
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                5     3      2    1691
                                              8 COMRAM     5     3      2
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 7     5      2    1645
                                              8 COMRAM     7     5      2
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                8     5      3    1290
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _memset                                               6     1      5     780
                                              0 COMRAM     6     1      5
 ---------------------------------------------------------------------------------
 (1) _lcd_8bit_send_string_pos                             6     1      5   15577
                                             19 COMRAM     6     1      5
               _lcd_8bit_send_string
                _lcd_8bit_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_set_cursor                                  4     1      3    7448
                                             15 COMRAM     4     1      3
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_send_string                                 4     1      3    5229
                                             15 COMRAM     4     1      3
                 _lcd_8bit_send_char
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_send_char                                   6     4      2    4941
                                              9 COMRAM     6     4      2
               _gpio_pin_write_logic
             _lcd_8bit_enable_signal
 ---------------------------------------------------------------------------------
 (1) _initialization                                       0     0      0   10614
                           _ADC_Init
                _lcd_8bit_initialize
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_initialize                                  5     4      1   10135
                                             15 COMRAM     5     4      1
                _gpio_pin_initialize
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_send_command                                6     4      2    6765
                                              9 COMRAM     6     4      2
               _gpio_pin_write_logic
             _lcd_8bit_enable_signal
 ---------------------------------------------------------------------------------
 (4) _lcd_8bit_enable_signal                               2     1      1    2232
                                              7 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_initialize                                  3     2      1    2920
                                              7 COMRAM     3     2      1
      _gpio_pin_direction_initialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_write_logic                                 8     6      2    2027
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_direction_initialize                        7     6      1     279
                                              0 COMRAM     6     5      1
 ---------------------------------------------------------------------------------
 (2) _ADC_Init                                             3     2      1     479
                                              3 COMRAM     2     1      1
   _adc_input_channel_port_configure
                  _adc_result_format
              _adc_voltage_reference
 ---------------------------------------------------------------------------------
 (3) _adc_voltage_reference                                1     0      1      98
                                              0 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (3) _adc_result_format                                    1     0      1      98
                                              0 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion_Blocking                           5     2      3    1573
                                              4 COMRAM     4     1      3
            _ADC_GetConversionResult
                _ADC_StartConversion
   _adc_input_channel_port_configure
 ---------------------------------------------------------------------------------
 (3) _adc_input_channel_port_configure                     3     3      0      22
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _ADC_StartConversion                                  2     1      1     183
                                              0 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (2) _ADC_GetConversionResult                              5     3      2     293
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptManagerHigh                                0     0      0       0
                            _ISR_ADC
 ---------------------------------------------------------------------------------
 (11) _ISR_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion_Blocking
     _ADC_GetConversionResult
     _ADC_StartConversion
     _adc_input_channel_port_configure
   _initialization
     _ADC_Init
       _adc_input_channel_port_configure
       _adc_result_format
       _adc_voltage_reference
     _lcd_8bit_initialize
       _gpio_pin_initialize
         _gpio_pin_direction_initialize
         _gpio_pin_write_logic
       _lcd_8bit_send_command
         _gpio_pin_write_logic
         _lcd_8bit_enable_signal
           _gpio_pin_write_logic
   _lcd_8bit_send_command
   _lcd_8bit_send_string_pos
     _lcd_8bit_send_string
       _lcd_8bit_send_char
         _gpio_pin_write_logic
         _lcd_8bit_enable_signal
     _lcd_8bit_set_cursor
       _lcd_8bit_send_command
   _lcd_convert_uint16_string
     _memset
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _ctoa
             _fputc
               _putch
           _dtoa
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
               _fputs
                 _fputc
               _strlen
           _fputc
           _otoa
             _pad
           _read_prec_or_width
             ___wmul
           _utoa
             ___lwdiv
             ___lwmod
             _pad
           _xtoa
             _pad

 _InterruptManagerHigh (ROOT)
   _ISR_ADC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      43        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      53       5       64.8%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     57      7D       1       99.2%
BITBIGSFRhlh        2D      0       0      37        0.0%
BITBIGSFRllh        21      0       0      38        0.0%
BITBIGSFRhh          D      0       0      36        0.0%
BITBIGSFRlllhh       6      0       0      39        0.0%
BITBIGSFRllllh       4      0       0      40        0.0%
BITBIGSFRlllll       4      0       0      41        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      D0      42        0.0%
DATA                 0      0      D0       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Sep 19 16:19:10 2024

                 __end_of_lcd_8bit_send_char 2C96                                           l80 2C94  
                                         l73 2D08                                           l66 23B2  
                                         l93 2A18                                           l98 2F2A  
                               ___awdiv@sign 0006                          ___wmul@multiplicand 0003  
                                        l201 3174                                          l115 2EDA  
                                        l220 2AAA                                          l141 30F4  
                                        l230 2E2E                                          l151 2B32  
                                        l227 2E14                                          l254 248A  
                                        l263 2F38                                          l272 2F7E  
                                        l328 206A                                          l274 2F84  
                                        l266 2F40                                          l186 28E4  
                                        l275 2F8A                                          l259 2F30  
                                        l347 218E                                          l443 1B64  
                                        l276 2FC0                                          l268 2F78  
                                        l700 2798                                          l453 319A  
                                        l368 2BAC                                          l456 311A  
                                        l687 26E8                                          l954 2C20  
                                        l947 2C18                                          l964 2D6C  
                                        l957 2D64                                          _abs 303A  
                                        _lcd 0062                       ??_InterruptManagerHigh 0001  
                                        _pad 28E6                                 ___awmod@sign 0006  
                  ?_lcd_8bit_send_string_pos 0014                                          wreg 0FE8  
                __end_of_lcd_8bit_set_cursor 2B34                                         l1210 1DD6  
               __end_of_lcd_8bit_send_string 2A1A                                         ?_abs 0007  
                                       l1140 2FFC                                         l1133 309C  
                                       l1215 1E02                                         l1303 1278  
                                       l3000 206C                                         l1217 1E0A  
                                       l1233 21BA                                         l3002 207C  
                                       l1250 1844                                         l1227 1F00  
                                       l1243 22B0                                         l1235 21C2  
                                       l1251 188A                                         l3012 2112  
                                       l3020 218C                                         l3004 209C  
                                       l1180 25BE                                         l1164 2916  
                                       l3100 1D54                                         l1228 1F44  
                                       l3006 20B8                                         l3030 2570  
                                       l3110 1DAC                                         l3102 1D6E  
                                       l1190 1C42                                         l1270 2554  
                                       l1183 25FC                                         l1167 2954  
                                       l3008 20BC                                         l3032 257C  
                                       l1352 3054                                         l3112 1DB8  
                                       l3104 1D88                                         l1192 1C4A  
                                       l3120 1DE8                                         l1264 1998  
                                       l1248 183C                                         l1185 2624  
                                       l1169 2982                                         l1193 1CA2  
                                       l3018 2162                                         l3050 260A  
                                       l3042 25B6                                         l3034 2588  
                                       l3106 1D96                                         l3130 1E28  
                                       l3122 1DF6                                         l1274 255C  
                                       l1266 1A0A                                         l3210 1830  
                                       l3202 1812                                         l1355 306C  
                                       l3300 1F92                                         l3052 2618  
                                       l3044 25CA                                         l3036 2596  
                                       l3028 255E                                         l3108 1DA6  
                                       l3060 1C28                                         l3140 1E4E  
                                       l3132 1E2E                                         l3124 1E12  
                                       l3116 1DD8                                         l3220 189C  
                                       l3212 184C                                         l3204 1812  
                                       l1348 2E88                                         l1293 1810  
                                       l3302 1F96                                         l3046 25DA  
                                       l3038 25A4                                         l3070 1C76  
                                       l3062 1C36                                         l3150 1ED0  
                                       l3134 1E34                                         l3142 1E70  
                                       l3126 1E1A                                         l3118 1DE6  
                                       l3230 18CC                                         l3222 18A8  
                                       l3214 1864                                         l3206 1820  
                                       l1367 2842                                         l1375 3038  
                                       l3312 203C                                         l3048 25DE  
                                       l1384 30CA                                         l3080 1CB6  
                                       l3072 1C86                                         l3064 1C52  
                                       l3056 1C04                                         l3160 1F20  
                                       l3144 1E8A                                         l3152 1EDE  
                                       l3136 1E42                                         l3128 1E20  
                                       l3240 18FC                                         l3232 18D2  
                                       l3224 18B0                                         l3216 1872  
                                       l3208 1822                                         l3400 1288  
                                       l1288 1114                                         l3320 105C  
                                       l3306 1FE6                                         l3314 2068  
                                       l1378 31A0                                         l3090 1D00  
                                       l3082 1CBA                                         l3074 1C92  
                                       l3066 1C62                                         l3058 1C26  
                                       l3162 1F26                                         l3154 1EEE  
                                       l3146 1E9C                                         l3138 1E48  
                                       l3170 21A0                                         l3250 1956  
                                       l3242 1902                                         l3234 18E2  
                                       l3226 18BC                                         l3218 1882  
                                       l3410 135A                                         l3402 12DE  
                                       l3330 1084                                         l3322 106A  
                                       l3092 1D06                                         l3084 1CC2  
                                       l3076 1C9A                                         l3068 1C70  
                                       l3156 1F0E                                         l3148 1EB6  
                                       l3180 21E2                                         l3172 21AE  
                                       l3260 19C8                                         l3252 1970  
                                       l3244 1908                                         l3236 18EA  
                                       l3228 18C6                                         l3500 17BE  
                                       l3412 1378                                         l3420 13DE  
                                       l3404 12FE                                         l3340 10A2  
                                       l3332 1096                                         l3324 1076  
                                       l4140 1A44                                         l3094 1D0C  
                                       l3086 1CCC                                         l3078 1CB0  
                                       l3158 1F14                                         l3270 248C  
                                       l3190 223E                                         l3182 2204  
                                       l3174 21CA                                         l3166 2190  
                                       l3262 19CE                                         l3254 198A  
                                       l3238 18F0                                         l3246 1928  
                                       l3430 146A                                         l3422 140E  
                                       l3414 1394                                         l3406 1322  
                                       l3326 107A                                         l3318 102A  
                                       l4150 1AC0                                         l4142 1A50  
                                       l4134 1A0C                                         l3600 23FC  
                                       l4224 2176                                         l3520 2B80  
                                       l3088 1CD2                                         l3096 1D28  
                                       l3280 2510                                         l3272 2494  
                                       l3192 2250                                         l3184 220A  
                                       l3176 21D2                                         l3168 219E  
                                       l3264 19DA                                         l3256 19A6  
                                       l3248 1944                                         l3440 1504  
                                       l3432 148A                                         l3408 133E  
                                       l3360 1138                                         l3352 10B6  
                                       l3344 10A8                                         l3336 109C  
                                       l3328 1082                                         l4160 1AFC  
                                       l4152 1AD0                                         l4144 1A6C  
                                       l4136 1A10                                         l4226 241C  
                                       l3602 2402                                         l3522 2B88  
                                       l3514 2B34                                         l3290 30E6  
                                       l3530 2CA6                                         l3098 1D42  
                                       l3274 24C6                                         l3282 251E  
                                       l3194 226A                                         l3186 2210  
                                       l3178 21DC                                         l3258 19B6  
                                       l3266 19EC                                         l3450 159E  
                                       l3442 1520                                         l3434 14AE  
                                       l3426 142A                                         l3418 13B0  
                                       l3370 11A4                                         l3362 1146  
                                       l3354 1104                                         l3506 17D0  
                                       l4170 1B4C                                         l4162 1B10  
                                       l4154 1AD4                                         l4146 1A88  
                                       l4138 1A2C                                         l3612 2F7A  
                                       l3524 2BAA                                         l3516 2B44  
                                       l3284 30CC                                         l3540 2CC0  
                                       l3532 2CAE                                         l3700 235E  
                                       l2820 279A                                         l3276 24D4  
                                       l3196 2284                                         l3188 222C  
                                       l3508 17FE                                         l3436 14CA  
                                       l3428 144A                                         l3372 11D6  
                                       l3380 1210                                         l3364 1150  
                                       l3356 1122                                         l3348 10AE  
                                       l3620 2E30                                         l4180 1BD0  
                                       l4172 1B50                                         l4164 1B22  
                                       l4156 1AE8                                         l4148 1AA4  
                                       l3606 2408                                         l3614 2F90  
                                       l3294 1F46                                         l3518 2B64  
                                       l3286 30D0                                         l3542 2CEC  
                                       l3534 2CBC                                         l3710 23A4  
                                       l3702 236C                                         l2830 2812  
                                       l2822 27AA                                         l2910 2708  
                                       l2902 26EA                                         l3278 24F0  
                                       l3198 2292                                         l3470 165C  
                                       l3454 15BA                                         l3438 14E6  
                                       l3446 153C                                         l3390 1268  
                                       l3382 1222                                         l3374 11E4  
                                       l3366 1182                                         l3358 1124  
                                       l3622 2E3C                                         l4182 1BE6  
                                       l4166 1B26                                         l4158 1AF8  
                                       l4174 1B64                                         l3616 2F2C  
                                       l3800 28E2                                         l3296 1F56  
                                       l3288 30DE                                         l3544 2CEE  
                                       l3528 2C96                                         l3704 237A  
                                       l3552 2C22                                         l3720 2AC6  
                                       l2824 27BA                                         l2920 2740  
                                       l2912 2716                                         l2904 26EE  
                                       l2840 301C                                         l3472 167C  
                                       l3464 1604                                         l3448 156A  
                                       l3384 1238                                         l3376 11F8  
                                       l3368 1190                                         l3624 2E48  
                                       l4176 1BA4                                         l4168 1B3A  
                                       l3810 3172                                         l3618 2F48  
                                       l3298 1F76                                         l3546 2CFE  
                                       l3706 2388                                         l3570 2C8A  
                                       l3554 2C32                                         l3722 2ADA  
                                       l3730 2B30                                         l3714 2AAC  
                                       l2826 27C4                                         l2922 274E  
                                       l2930 2778                                         l2914 271E  
                                       l2906 26FC                                         l2834 2FFE  
                                       l2842 309E                                         l3474 169C  
                                       l3482 16F8                                         l3490 1762  
                                       l3458 15D6                                         l3466 1638  
                                       l3394 1278                                         l3386 1244  
                                       l3626 2E60                                         l4178 1BBA  
                                       l3820 2A3E                                         l3804 315E  
                                       l3580 23C0                                         l3900 2DD0  
                                       l3548 2D06                                         l3708 2396  
                                       l3564 2C4C                                         l3572 2C92  
                                       l3556 2C3A                                         l3740 29B2  
                                       l3724 2AEE                                         l3716 2AAC  
                                       l2828 27E0                                         l2860 262A  
                                       l2932 2788                                         l2924 2764  
                                       l2916 2730                                         l2908 2704  
                                       l2836 300A                                         l2844 30A6  
                                       l2852 30F6                                         l2940 2BB6  
                                       l3492 1794                                         l3476 16B8  
                                       l3484 1726                                         l3396 1280  
                                       l3388 1264                                         l3628 2E80  
                                       l3822 2A42                                         l3814 2A1A  
                                       l3806 316E                                         l3590 23DE  
                                       l3582 23C6                                         l3910 2E06  
                                       l3902 2DE0                                         l3566 2C78  
                                       l3558 2C48                                         l3742 29E0  
                                       l3734 2984                                         l3726 2B02  
                                       l3718 2AB2                                         l3750 306E  
                                       l2870 265A                                         l2862 2638  
                                       l2934 2790                                         l2926 276C  
                                       l2918 2738                                         l2838 3018  
                                       l2846 30A8                                         l2854 3112  
                                       l2950 2BEC                                         l2942 2BC8  
                                       l3494 17A2                                         l3486 1756  
                                       l3478 16D8                                         ?_pad 000E  
                                       l3824 2A44                                         l3816 2A2A  
                                       l3808 3172                                         l3592 23E4  
                                       l3584 23CC                                         l3576 23B6  
                                       l3912 2E0C                                         l3904 2DF0  
                                       l3672 22B2                                         l3920 3192  
                                       l3568 2C7A                                         l3736 2998  
                                       l3744 29E4                                         l3728 2B0A  
                                       l3752 3076                                         l2880 2688  
                                       l2872 265E                                         l2864 2640  
                                       l2928 2772                                         l2848 30BE  
                                       l2952 2C02                                         l2944 2BD0  
                                       l2960 2D0A                                         l3496 17B2  
                                       l3760 2FCA                                         l3826 2A60  
                                       l3834 2A7A                                         l3818 2A3A  
                                       l3594 23EA                                         l3586 23D2  
                                       l3578 23BA                                         l3914 2E22  
                                       l3906 2DF4                                         l3770 2844  
                                       l3690 22FE                                         l3674 22C2  
                                       l3746 2A16                                         l3738 29AA  
                                       l3754 3080                                         l2890 26BC  
                                       l2882 2696                                         l2874 2666  
                                       l2866 2644                                         l2858 2626  
                                       l2954 2C0A                                         l2946 2BD8  
                                       l2938 2BAE                                         l2970 2D50  
                                       l2962 2D1C                                         l3762 2FD2  
                                       l3828 2A62                                         l3596 23F0  
                                       l3588 23D8                                         l3908 2DF4  
                                       l3780 2878                                         l3772 2854  
                                       l3692 2316                                         l3684 22DE  
                                       l3676 22C6                                         l3756 3082  
                                       l2892 26C2                                         l2884 269C  
                                       l2876 2678                                         l2868 2652  
                                       l2980 2900                                         l2956 2C0C  
                                       l2948 2BE6                                         l2972 2D58  
                                       l2964 2D24                                         l3764 2FDA  
                                       l3598 23F6                                         l3790 28C0  
                                       l3782 2890                                         l3774 2858  
                                       l3694 2324                                         l3686 22EC  
                                       l3678 22DA                                         l3918 318A  
                                       l2886 26B2                                         l2878 2680  
                                       l2894 26C8                                         l2990 2962  
                                       l2982 290E                                         l2958 2C12  
                                       l2974 2D5E                                         l2966 2D2C  
                                       l3766 2FF2                                         l3758 2FC2  
                                       l3792 28C2                                         l3784 28AC  
                                       l3776 2858                                         l3696 2340  
                                       l3688 22EE                                         l3880 2EF0  
                                       l2896 26D8                                         l2888 26BA  
                                       l2992 296E                                         l2984 2922  
                                       l2976 28E6                                         l2968 2D3A  
                                       l3794 28C4                                         l3786 28BC  
                                       l3778 285A                                         l3698 2350  
                                       l3882 2F02                                         l2898 26E0  
                                       l2986 2932                                         l2978 28F4  
                                       l3890 2E8A                                         l3796 28D2  
                                       l3788 28BE                                         l3884 2F06  
                                       l2996 303A                                         l2988 2936  
                                       l3892 2E9A                                         l3798 28DA  
                                       l3886 2F18                                         l3878 2EDC  
                                       l2998 3048                                         l3894 2E9E  
                                       l3896 2EB6                                         STR_1 1026  
                                       STR_2 1026                                         STR_3 1001  
                                       STR_4 100A                                         STR_5 1011  
                                       STR_6 1018                                         STR_7 101F  
                                       u2000 26D8                                         u2001 26D4  
                                       u2010 26FC                                         u2011 26F8  
                                       u2020 2716                                         u2100 2D1C  
                                       u2021 2712                                         u2101 2D18  
                                       u2030 2730                                         u2110 2D3A  
                                       u2031 272C                                         u2111 2D36  
                                       u2200 20B8                                         u3000 2B64  
                                       u2040 274E                                         u2120 2D50  
                                       u2201 20B4                                         u3001 2B60  
                                       u2041 274A                                         u2121 2D4C  
                                       u3010 2B80                                         u2050 2764  
                                       u2130 28F4                                         u3011 2B7C  
                                       u2051 2760                                         u2131 28F0  
                                       u3020 2CA6                                         u2060 2788  
                                       u2140 290E                                         u2300 1C26  
                                       u3100 2E80                                         u3021 2CA2  
                                       u2061 2784                                         u2141 290A  
                                       u2301 1C22                                         u3101 2E7C  
                                       _LATA 0F89                                         u2214 20DA  
                                       u2230 2570                                         u2150 2954  
                                       u2310 1C36                                         u2070 2BC8  
                                       _LATB 0F8A                                         u2215 20D6  
                                       u2231 256C                                         u2151 2950  
                                       u2311 1C32                                         u2071 2BC4  
                                       _LATC 0F8B                                         u2224 2130  
                                       u3040 2CFE                                         u3200 2A16  
                                       u2240 2596                                         u2160 2962  
                                       u2400 1D96                                         u2320 1C62  
                                       u2080 2BE6                                         _LATD 0F8C  
                                       u2225 212C                                         u3041 2CFA  
                                       u3201 2A12                                         u2241 2592  
                                       u2161 295E                                         u2401 1D92  
                                       u2321 1C5E                                         u2081 2BE2  
                                       _LATE 0F8D                                         u3034 2CDA  
                                       u3050 2C32                                         u3210 309C  
                                       u2250 25B2                                         u2170 3048  
                                       u2410 1DA6                                         u2330 1C70  
                                       u2090 2C02                                         u3035 2CD6  
                                       u3051 2C2E                                         u3211 3098  
                                       u2251 25AE                                         u2171 3044  
                                       u2411 1DA2                                         u2331 1C6C  
                                       u2091 2BFE                                         u3220 2854  
                                       u2180 207C                                         u3140 22C2  
                                       u2260 25FC                                         u2340 1C86  
                                       u2500 1F00                                         u2420 1DE6  
                                       u3221 2850                                         u2181 2078  
                                       u3141 22BE                                         u2261 25F8  
                                       u2341 1C82                                         u2501 1EFC  
                                       u2421 1DE2                                         u3230 316E  
                                       u2190 209C                                         u3150 22FE  
                                       u3070 2C8A                                         u2270 260A  
                                       u2350 1CB0                                         u2510 1F0E  
                                       u2430 1DF6                                         u3231 316A  
                                       u2191 2098                                         u3151 22FA  
                                       u3071 2C86                                         u2271 2606  
                                       u2351 1CAC                                         u2511 1F0A  
                                       u2431 1DF2                                         u3240 2A2A  
                                       u3080 2FAA                                         u3064 2C66  
                                       u3160 2998                                         u3320 2EF0  
                                       u2360 1D42                                         u2280 1C14  
                                       u2440 1E8A                                         u2520 219E  
                                       u2600 1830                                         u3241 2A26  
                                       u3081 2FA4                                         u3065 2C62  
                                       u3161 2994                                         u3321 2EEC  
                                       u2361 1D3E                                         u2281 1C0E  
                                       u2441 1E86                                         u2521 219A  
                                       u2601 182C                                         u3250 2A3A  
                                       u3090 2F62                                         u3170 29AA  
                                       u3330 2F02                                         u2370 1D54  
                                       u2290 1C16                                         u2450 1E9C  
                                       u2530 21AE                                         u2610 1860  
                                       u3251 2A36                                         u3091 2F5C  
                                       u3171 29A6                                         u3331 2EFE  
                                       u2371 1D50                                         u2451 1E98  
                                       u2531 21AA                                         u2611 185A  
                                       u3260 2A94                                         u3180 29D8  
                                       u1900 27BA                                         u2380 1D6E  
                                       u2460 1EB6                                         u2540 223E  
                                       u2700 1970                                         u2620 1862  
                                       u3340 2E9A                                         u3261 2A8E  
                                       u1901 27B6                                         u2381 1D6A  
                                       u2461 1EB2                                         u2541 223A  
                                       u2701 196C                                         u3341 2E96  
                                       u3350 2DE0                                         u3086 2FAC  
                                       u3190 2A06                                         u1910 27E0  
                                       u2390 1D88                                         u2470 1ED0  
                                       u2550 2250                                         u2710 198A  
                                       u2630 1872                                         u3351 2DDC  
                                       u1911 27DC                                         u2391 1D84  
                                       u2471 1ECC                                         u2551 224C  
                                       u2711 1986                                         u2631 186E  
                                       u3360 2DF0                                         u3096 2F64  
                                       u2800 1F92                                         u1920 2812  
                                       u2480 1EDE                                         u2560 226A  
                                       u2720 1998                                         u2640 1882  
                                       u3600 1AD0                                         u3361 2DEC  
                                       u2801 1F8E                                         u1921 280E  
                                       u2481 1EDA                                         u2561 2266  
                                       u2721 1994                                         u2641 187E  
                                       u3601 1ACC                                         u3266 2A96  
                                       u3370 2E22                                         u1930 3038  
                                       u2490 1EEE                                         u2570 2284  
                                       u2730 19A6                                         u2650 189C  
                                       u3610 1AF8                                         u3371 2E1E  
                                       u3187 29CE                                         u1931 3034  
                                       u2491 1EEA                                         u2571 2280  
                                       u2731 19A2                                         u2651 1898  
                                       u3611 1AF4                                         u1940 30BE  
                                       u2580 2292                                         u2740 19B6  
                                       u2660 18E2                                         u2900 1264  
                                       u3620 1B22                                         u3197 29FC  
                                       u1941 30BA                                         u2581 228E  
                                       u2741 19B2                                         u2661 18DE  
                                       u2901 1260                                         u3621 1B1E  
                                       u2830 2052                                         u2814 1FB4  
                                       u1950 2638                                         u2750 19C8  
                                       u2590 1820                                         u2910 12FE  
                                       u3630 1B4C                                         u2831 204C  
                                       u2815 1FB0                                         u1951 2634  
                                       u2751 19C4                                         u2591 181C  
                                       u2911 12FA                                         u3631 1B48  
                                       u2824 2004                                         u1960 2652  
                                       u2760 24C6                                         u2680 1944  
                                       u2920 131E                                         u2840 105C  
                                       u2825 2000                                         u1961 264E  
                                       u2761 24C2                                         u2681 1940  
                                       u2921 131A                                         u2841 1058  
                                       u1890 27AA                                         u1970 2678  
                                       u2770 2554                                         u2690 1956  
                                       u2930 144A                                         u2850 1114  
                                       u1891 27A6                                         u1971 2674  
                                       u2771 2550                                         u2691 1952  
                                       u2675 1914                                         u2931 1446  
                                       u2851 1110                                         u2836 2054  
                                       u2780 1F56                                         u1980 2696  
                                       u2940 146A                                         u2860 1122  
                                       u2781 1F52                                         u1981 2692  
                                       u2941 1466                                         u2861 111E  
                                       u2790 1F76                                         u1990 26B2  
                                       u2950 148A                                         u2870 1146  
                                       u2791 1F72                                         u1991 26AE  
                                       u2951 1486                                         u2871 1142  
                                       u3647 1A36                                         u2960 14AA  
                                       u2880 1182                                         u3657 2308  
                                       u2961 14A6                                         u2881 117E  
                                       u2970 1658                                         u2890 11D6  
                                       u3667 232A                                         u2971 1654  
                                       u2891 11D2                                         u2980 1794  
                                       u3677 2346                                         u2981 1790  
                                       u2990 2B44                                         u2991 2B40  
                                       u3687 30E0                              __end_of_ISR_ADC 31A0  
                                       abs@a 0007                             ??_initialization 0015  
                                       _dbuf 0080                                         _ctoa 255E  
                                       _main 1A0C                                         _dtoa 1C04  
                                       _prec 0070                                         _otoa 1DD8  
                                       _nout 006C                                         pad@i 0013  
                                       pad@p 0010                                         fsr0h 0FEA  
                                       fsr1h 0FE2                                         indf0 0FEF  
                                       fsr2h 0FDA                                         fsr0l 0FE9  
                                       indf2 0FDF                                         fsr1l 0FE1  
                                       fsr2l 0FD9                                         btemp 007E  
                                       _utoa 2190                                         _xtoa 1812  
                           __end_of_ADC_Init 28E6                                         prodh 0FF4  
                                       prodl 0FF3                                         start 000E  
              __end_of_lcd_8bit_send_command 2D0A                                 ___param_bank 0000  
                                      ??_abs 0009                         _gpio_pin_write_logic 206C  
                                      ??_pad 0012                                        ?_ctoa 0009  
                                      ?_main 0001                                        ?_dtoa 0015  
                            __end_of___awdiv 26EA                              __end_of___awmod 279A  
                                      ?_otoa 0015                                        ?_utoa 0015  
                            ___awdiv@divisor 0003                                        ?_xtoa 0015  
                            __end_of___lwdiv 2C22                              __end_of___lwmod 2D6E  
                                      i2l280 319E                                        i2l396 313E  
                            ___awdiv@counter 0005                                 vfpfcnvrt@fmt 0028  
                                      _PORTA 0F80                                        _PORTB 0F81  
                                      _PORTC 0F82                   ?_lcd_convert_uint16_string 0053  
                                      _PORTD 0F83                                        _PORTE 0F84  
                                      _TRISA 0F92                                        _TRISB 0F93  
                                      _TRISC 0F94                                        _TRISD 0F95  
                                      _TRISE 0F96                                        _adc_1 00CC  
                                      _flags 0074                          read_prec_or_width@c 000C  
                        read_prec_or_width@n 000D                                        _fputc 279A  
                                      _fputs 2FFE                                        pad@fp 000E  
                                      _width 006E                                        ctoa@c 000A  
                                      _putch 31A0                                        ctoa@l 000C  
                                      ctoa@w 000E                                        dtoa@d 0016  
                                      dtoa@i 001F                                        dtoa@p 001A  
                                      dtoa@s 001E                                        dtoa@w 001C  
                                      tablat 0FF5                                        otoa@d 0016  
                                      otoa@i 001F                                        otoa@p 001A  
                                      otoa@t 001E                                        otoa@w 001C  
                                      ttemp5 007F                                        ttemp6 0082  
                                      ttemp7 0086                                        utoa@d 0016  
                                      utoa@i 001C                                        utoa@p 0018  
                                      utoa@w 001A                                        status 0FD8  
                                      wtemp8 007F                              __end_of_sprintf 2FFE  
                                      xtoa@a 001E                                        xtoa@c 0024  
                                      xtoa@d 0016                                        xtoa@i 0025  
                                      xtoa@p 001F                                        xtoa@w 0021  
                                      xtoa@x 0018               ?_gpio_pin_direction_initialize 0001  
                            __initialization 2D6E                                 __end_of_ctoa 2626  
                               __end_of_main 1C04                                 __end_of_dtoa 1DD8  
                               __end_of_otoa 1F46                        ?_gpio_pin_write_logic 0001  
                               __end_of_utoa 22B2                                 __end_of_xtoa 1A0C  
                    ??_adc_voltage_reference 0002                       lcd_8bit_set_cursor@ret 0013  
                     lcd_8bit_set_cursor@row 0011                                _lat_registers 00B8  
                                     ??_ctoa 000B                                       ??_main 0056  
                                     ??_dtoa 0018                                       ??_otoa 0018  
                                     ??_utoa 0018                                       ??_xtoa 0019  
                              __activetblptr 0003                   __end_of_read_prec_or_width 255E  
                                  ??_ISR_ADC 0001                                       ?_fputc 0001  
                                     ?_fputs 0009                                       _ADRESH 0FC4  
                                     _ADRESL 0FC3                             ___awdiv@dividend 0001  
                                     ?_putch 0001                                       i2l2484 319C  
                                     i2l2764 311E                                       i2l2766 312C  
                                     i2l2768 313A                                vfpfcnvrt@done 002F  
                              _adc_res1_text 00B2                                _adc_res2_text 00AC  
                              _adc_res3_text 00A6                                _adc_res4_text 00A0  
                               vfprintf@cfmt 003D                                       ___wmul 30F6  
                                  ??___awdiv 0005                                    ??___awmod 0005  
                                  ??___lwdiv 0005                                    ??___lwmod 0005  
                       read_prec_or_width@ap 0008                         _lcd_8bit_send_string 2984  
                                     _memset 306E                                       clear_0 2DB4  
                                     clear_1 2DC0                             ___awdiv@quotient 0007  
                            ___awmod@divisor 0003                                       isa$std 0001  
                            ___awmod@counter 0005                                       pad@buf 000F  
                                     ctoa@fp 0009                                       dtoa@fp 0015  
                                     _strlen 309E                  lcd_8bit_send_string_pos@ret 0019  
                lcd_8bit_send_string_pos@row 0017                  lcd_8bit_send_string_pos@str 0015  
                                     fputc@c 0001                                       fputs@c 000B  
                                     fputs@i 000C                                 __pdataCOMRAM 0058  
                                     fputs@s 0009                                    ?_ADC_Init 0004  
                               __mediumconst 0000                                       otoa@fp 0015  
                    ?_lcd_8bit_enable_signal 0008                                       tblptrh 0FF7  
                                     tblptrl 0FF6                                       tblptru 0FF8  
                                     putch@c 0001                             __end_of_vfprintf 2E8A  
                                     utoa@fp 0015                                    ??_sprintf 0046  
                                     xtoa@fp 0015                   lcd_8bit_send_command@count 000F  
                                 __accesstop 0080                      __end_of__initialization 2DC6  
                  adc_voltage_reference@_adc 0001                                ___rparam_used 0001  
                     ??_gpio_pin_write_logic 0003                               __pcstackCOMRAM 0001  
                               __pidataBANK0 3142                 ??_ADC_GetConversion_Blocking 0008  
                              __end_of_fputc 2844                                __end_of_fputs 303A  
                      ?_lcd_8bit_send_string 0010                                __end_of_putch 31A2  
   gpio_pin_direction_initialize@_pin_config 0001                      _ADC_GetConversionResult 2A1A  
                    lcd_8bit_set_cursor@_lcd 0010               __end_of_lcd_8bit_enable_signal 30F6  
                                 ??_ADC_Init 0005                           _lcd_8bit_send_char 2C22  
                                    ??_fputc 0004                                      ??_fputs 000B  
                                    ??_putch 0001                                   __pbssBANK0 0080  
                        ?_lcd_8bit_send_char 000A                     lcd_8bit_initialize@count 0013  
                     lcd_8bit_initialize@ret 0014                                      ?___wmul 0001  
                                    _ADC_REQ 0075                                      ?_memset 0001  
                       ??_lcd_8bit_send_char 000C               ADC_GetConversion_Blocking@_adc 0005  
                                    ?_strlen 0001                  ??_lcd_convert_uint16_string 0056  
                                    _ISR_ADC 319C                               _tris_registers 0058  
                                    __Hparam 0000                                 ADC_Init@_adc 0004  
                                    __Lparam 0000                       ??_lcd_8bit_send_string 0013  
                        _gpio_pin_initialize 2B34                        _lcd_8bit_send_command 2C96  
                                    ___awdiv 2626                                      ___awmod 26EA  
                                    ___lwdiv 2BAE                                      ___lwmod 2D0A  
                                  ?_vfprintf 0038                                 __psmallconst 1000  
                  ??_ADC_GetConversionResult 0003                                      __pcinit 2D6E  
                                    __ramtop 1000                     _lcd_8bit_send_string_pos 2EDC  
                                    __ptext0 1A0C                                      __ptext1 2E8A  
                                    __ptext2 2FC2                                      __ptext3 2E30  
                                    __ptext4 102A                                      __ptext5 1812  
                                    __ptext6 2190                                      __ptext7 2D0A  
                                    __ptext8 2BAE                                      __ptext9 248C  
              __end_of_adc_voltage_reference 2F7A              ??_gpio_pin_direction_initialize 0002  
                      read_prec_or_width@fmt 0007                             ___awmod@dividend 0001  
                       ?_gpio_pin_initialize 0008                                      _sprintf 2FC2  
               lcd_8bit_send_string_pos@_lcd 0014                               __pintcode_body 311C  
                       end_of_initialization 2DC6  ADC_GetConversion_Blocking@conversion_result 0007  
                                    fputc@fp 0003                                      memset@c 0002  
                                    memset@n 0004                                      memset@p 0006  
                                    int_func 311C                                      fputs@fp 000A  
                         _read_prec_or_width 248C                    _lcd_convert_uint16_string 2E8A  
                          __end_of_vfpfcnvrt 1812           __end_of_ADC_GetConversion_Blocking 2E30  
                 _ADC_GetConversion_Blocking 2DD0                                      postdec1 0FE5  
                                    postdec2 0FDD                          ?_read_prec_or_width 0007  
                                    postinc0 0FEE                                      postinc1 0FE6  
                                    postinc2 0FDE                    lcd_8bit_enable_signal@ret 0009  
                           vfpfcnvrt@convarg 0030                                   ??_vfprintf 003D  
                                    strlen@a 0003                                      strlen@s 0001  
                           _InterruptHandler 0072                        ??_gpio_pin_initialize 0009  
                        _ADC_StartConversion 315E                         ??_read_prec_or_width 0009  
                     ?_lcd_8bit_send_command 000A                         ?_ADC_StartConversion 0001  
                 lcd_8bit_enable_signal@_lcd 0008               lcd_8bit_send_string_pos@column 0018  
                      adc_result_format@_adc 0001                                  vfpfcnvrt@ap 0029  
                                vfpfcnvrt@cp 0035                                  vfpfcnvrt@fp 0027  
                             __end_of___wmul 311C                                __pidataCOMRAM 3176  
    adc_input_channel_port_configure@channel 0003                               __end_of_memset 309E  
                             __end_of_strlen 30CC                          start_initialization 2D6E  
                        _lcd_8bit_initialize 22B2                                  __end_of_abs 306E  
                                __end_of_pad 2984        __end_of_gpio_pin_direction_initialize 206C  
              _gpio_pin_direction_initialize 1F46     ADC_GetConversionResult@conversion_result 0002  
                       ?_lcd_8bit_initialize 0010                        ??_ADC_StartConversion 0002  
                                vfprintf@fmt 0039                                     ??___wmul 0005  
                                __pdataBANK0 00B8                                     ??_memset 0006  
                        _lcd_8bit_set_cursor 2AAC                                   memset@dest 0001  
                   lcd_8bit_send_command@ret 000E                      ADC_StartConversion@_adc 0001  
                                   ??_strlen 0003                                  __pbssCOMRAM 006C  
                                   ?_ISR_ADC 0001                  ADC_GetConversionResult@_adc 0001  
                       ?_lcd_8bit_set_cursor 0010                      lcd_8bit_initialize@_lcd 0010  
                      ??_lcd_8bit_initialize 0011                 __end_of_InterruptManagerHigh 3142  
                 ??_lcd_8bit_send_string_pos 0019                             ___lwdiv@dividend 0001  
                                  _dtoa$1578 0018                                    __pintcode 0008  
   __end_of_adc_input_channel_port_configure 248C           ??_adc_input_channel_port_configure 0001  
          ?_adc_input_channel_port_configure 0001             _adc_input_channel_port_configure 23B4  
            gpio_pin_write_logic@_pin_config 0001                                     ?___awdiv 0001  
                                   ?___awmod 0001                               _initialization 318A  
                                   ?___lwdiv 0001                                     ?___lwmod 0001  
                  gpio_pin_write_logic@logic 0002                                  __smallconst 1000  
                                   _ADC_Init 2844               lcd_convert_uint16_string@value 0053  
                           ___lwdiv@quotient 0005                                     ?_sprintf 0040  
                      ??_lcd_8bit_set_cursor 0013                               ___wmul@product 0005  
                                   _PIE1bits 0F9D                                     i2u183_40 312C  
                                   i2u183_41 3128                                     i2u184_40 313A  
                                   i2u184_41 3136                                     _PIR1bits 0F9E  
                     __end_of_initialization 319C                  ?_ADC_GetConversion_Blocking 0005  
                   ??_lcd_8bit_enable_signal 0009                      lcd_8bit_send_char@count 000F  
                                  _vfpfcnvrt 102A                                    _xtoa$1603 001C  
                                 _ADCON0bits 0FC2                                   _ADCON1bits 0FC1  
                                 _ADCON2bits 0FC0            __end_of_lcd_convert_uint16_string 2EDC  
                          ___wmul@multiplier 0001                            _adc_result_format 2F7A  
                      _adc_voltage_reference 2F2C                       gpio_pin_initialize@ret 000A  
                  lcd_8bit_set_cursor@column 0012                           ?_adc_result_format 0001  
                                 vfpfcnvrt@c 0034                                    copy_data0 2D82  
                                  copy_data1 2DA2                          ??_adc_result_format 0002  
                    ??_lcd_8bit_send_command 000C                                     __Hrparam 0000  
                            ?_initialization 0001                                   vfprintf@ap 003C  
                                   __Lrparam 0000                                   vfprintf@fp 0038  
                   ?_ADC_GetConversionResult 0001                                   ?_vfpfcnvrt 0027  
                                   _adc_res1 007C                                     _adc_res2 007A  
                                   _adc_res3 0078                                     _adc_res4 0076  
                __end_of_gpio_pin_initialize 2BAE                    __end_of_adc_result_format 2FC2  
             gpio_pin_initialize@_pin_config 0008                                   sprintf@fmt 0041  
                  lcd_8bit_send_command@_lcd 000A                              ___lwdiv@divisor 0003  
                       _InterruptManagerHigh 0008                              ___lwdiv@counter 0007  
                                   __ptext10 30F6                                     __ptext11 1DD8  
                                   __ptext20 279A                                     __ptext12 1C04  
                                   __ptext21 31A0                                     __ptext13 28E6  
                                   __ptext30 30CC                                     __ptext22 306E  
                                   __ptext14 309E                                     __ptext31 2B34  
                                   __ptext23 2EDC                                     __ptext15 2FFE  
                                   __ptext40 2A1A                                     __ptext32 206C  
                                   __ptext24 2AAC                                     __ptext16 303A  
                                   __ptext33 1F46                                     __ptext25 2984  
                                   __ptext17 26EA                                     __ptext42 319C  
                                   __ptext34 2844                                     __ptext26 2C22  
                                   __ptext18 2626                                     __ptext35 2F2C  
                                   __ptext27 318A                                     __ptext19 255E  
                                   __ptext36 2F7A                                     __ptext28 22B2  
                                   __ptext37 2DD0                                     __ptext29 2C96  
                                   __ptext38 23B4                                     __ptext39 315E  
           __end_of_lcd_8bit_send_string_pos 2F2C                                     isa$xinst 0000  
                     lcd_8bit_send_char@_lcd 000A                       lcd_8bit_send_char@data 000B  
                                   int$flags 007E                                     _vfprintf 2E30  
                     ?_adc_voltage_reference 0001                                   _INTCONbits 0FF2  
                      ?_InterruptManagerHigh 0001                 __end_of_gpio_pin_write_logic 2190  
                              xtoa@d_nonzero 0023                                     intlevel2 0000  
                                  sprintf@ap 0052                  __end_of_ADC_StartConversion 3176  
                           ___lwmod@dividend 0001              __end_of_ADC_GetConversionResult 2AAC  
                      lcd_8bit_send_char@ret 000E                                  ??_vfpfcnvrt 002A  
                   lcd_8bit_send_string@_lcd 0010           ADC_GetConversion_Blocking@_channel 0006  
                                   sprintf@f 0046                                     sprintf@s 0040  
                             _port_registers 00C2                              ___lwmod@divisor 0003  
                            ___lwmod@counter 0005                      lcd_8bit_send_string@ret 0013  
                    lcd_8bit_send_string@str 0011                       _lcd_8bit_enable_signal 30CC  
                __end_of_lcd_8bit_initialize 23B4                 lcd_convert_uint16_string@str 0055  
               lcd_8bit_send_command@command 000B  
